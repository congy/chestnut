// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_kandan_small.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_5fkandan_5fsmall_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_proto_5fkandan_5fsmall_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_proto_5fkandan_5fsmall_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_5fkandan_5fsmall_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[48]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_5fkandan_5fsmall_2eproto;
namespace kandan_small {
class PActivity;
class PActivityDefaultTypeInternal;
extern PActivityDefaultTypeInternal _PActivity_default_instance_;
class PActivityList;
class PActivityListDefaultTypeInternal;
extern PActivityListDefaultTypeInternal _PActivityList_default_instance_;
class PActivity_PChannelInActivity;
class PActivity_PChannelInActivityDefaultTypeInternal;
extern PActivity_PChannelInActivityDefaultTypeInternal _PActivity_PChannelInActivity_default_instance_;
class PActivity_PChannelInActivity_PAttachmentsInChannel;
class PActivity_PChannelInActivity_PAttachmentsInChannelDefaultTypeInternal;
extern PActivity_PChannelInActivity_PAttachmentsInChannelDefaultTypeInternal _PActivity_PChannelInActivity_PAttachmentsInChannel_default_instance_;
class PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment;
class PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachmentDefaultTypeInternal;
extern PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachmentDefaultTypeInternal _PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment_default_instance_;
class PActivity_PChannelInActivity_PUserInChannel;
class PActivity_PChannelInActivity_PUserInChannelDefaultTypeInternal;
extern PActivity_PChannelInActivity_PUserInChannelDefaultTypeInternal _PActivity_PChannelInActivity_PUserInChannel_default_instance_;
class PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser;
class PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUserDefaultTypeInternal;
extern PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUserDefaultTypeInternal _PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser_default_instance_;
class PActivity_PUserInActivity;
class PActivity_PUserInActivityDefaultTypeInternal;
extern PActivity_PUserInActivityDefaultTypeInternal _PActivity_PUserInActivity_default_instance_;
class PActivity_PUserInActivity_PAttachmentsInUser;
class PActivity_PUserInActivity_PAttachmentsInUserDefaultTypeInternal;
extern PActivity_PUserInActivity_PAttachmentsInUserDefaultTypeInternal _PActivity_PUserInActivity_PAttachmentsInUser_default_instance_;
class PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment;
class PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachmentDefaultTypeInternal;
extern PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachmentDefaultTypeInternal _PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment_default_instance_;
class PActivity_PUserInActivity_PChannelsInUser;
class PActivity_PUserInActivity_PChannelsInUserDefaultTypeInternal;
extern PActivity_PUserInActivity_PChannelsInUserDefaultTypeInternal _PActivity_PUserInActivity_PChannelsInUser_default_instance_;
class PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel;
class PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannelDefaultTypeInternal;
extern PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannelDefaultTypeInternal _PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel_default_instance_;
class PAttachment;
class PAttachmentDefaultTypeInternal;
extern PAttachmentDefaultTypeInternal _PAttachment_default_instance_;
class PAttachmentList;
class PAttachmentListDefaultTypeInternal;
extern PAttachmentListDefaultTypeInternal _PAttachmentList_default_instance_;
class PAttachment_PChannelInAttachment;
class PAttachment_PChannelInAttachmentDefaultTypeInternal;
extern PAttachment_PChannelInAttachmentDefaultTypeInternal _PAttachment_PChannelInAttachment_default_instance_;
class PAttachment_PChannelInAttachment_PActivitiesInChannel;
class PAttachment_PChannelInAttachment_PActivitiesInChannelDefaultTypeInternal;
extern PAttachment_PChannelInAttachment_PActivitiesInChannelDefaultTypeInternal _PAttachment_PChannelInAttachment_PActivitiesInChannel_default_instance_;
class PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity;
class PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivityDefaultTypeInternal;
extern PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivityDefaultTypeInternal _PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity_default_instance_;
class PAttachment_PChannelInAttachment_PUserInChannel;
class PAttachment_PChannelInAttachment_PUserInChannelDefaultTypeInternal;
extern PAttachment_PChannelInAttachment_PUserInChannelDefaultTypeInternal _PAttachment_PChannelInAttachment_PUserInChannel_default_instance_;
class PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser;
class PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUserDefaultTypeInternal;
extern PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUserDefaultTypeInternal _PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser_default_instance_;
class PAttachment_PUserInAttachment;
class PAttachment_PUserInAttachmentDefaultTypeInternal;
extern PAttachment_PUserInAttachmentDefaultTypeInternal _PAttachment_PUserInAttachment_default_instance_;
class PAttachment_PUserInAttachment_PActivitiesInUser;
class PAttachment_PUserInAttachment_PActivitiesInUserDefaultTypeInternal;
extern PAttachment_PUserInAttachment_PActivitiesInUserDefaultTypeInternal _PAttachment_PUserInAttachment_PActivitiesInUser_default_instance_;
class PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity;
class PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivityDefaultTypeInternal;
extern PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivityDefaultTypeInternal _PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity_default_instance_;
class PAttachment_PUserInAttachment_PChannelsInUser;
class PAttachment_PUserInAttachment_PChannelsInUserDefaultTypeInternal;
extern PAttachment_PUserInAttachment_PChannelsInUserDefaultTypeInternal _PAttachment_PUserInAttachment_PChannelsInUser_default_instance_;
class PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel;
class PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannelDefaultTypeInternal;
extern PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannelDefaultTypeInternal _PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel_default_instance_;
class PChannel;
class PChannelDefaultTypeInternal;
extern PChannelDefaultTypeInternal _PChannel_default_instance_;
class PChannelList;
class PChannelListDefaultTypeInternal;
extern PChannelListDefaultTypeInternal _PChannelList_default_instance_;
class PChannel_PActivitiesInChannel;
class PChannel_PActivitiesInChannelDefaultTypeInternal;
extern PChannel_PActivitiesInChannelDefaultTypeInternal _PChannel_PActivitiesInChannel_default_instance_;
class PChannel_PActivitiesInChannel_PUserInActivity;
class PChannel_PActivitiesInChannel_PUserInActivityDefaultTypeInternal;
extern PChannel_PActivitiesInChannel_PUserInActivityDefaultTypeInternal _PChannel_PActivitiesInChannel_PUserInActivity_default_instance_;
class PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser;
class PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUserDefaultTypeInternal;
extern PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUserDefaultTypeInternal _PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser_default_instance_;
class PChannel_PAttachmentsInChannel;
class PChannel_PAttachmentsInChannelDefaultTypeInternal;
extern PChannel_PAttachmentsInChannelDefaultTypeInternal _PChannel_PAttachmentsInChannel_default_instance_;
class PChannel_PAttachmentsInChannel_PUserInAttachment;
class PChannel_PAttachmentsInChannel_PUserInAttachmentDefaultTypeInternal;
extern PChannel_PAttachmentsInChannel_PUserInAttachmentDefaultTypeInternal _PChannel_PAttachmentsInChannel_PUserInAttachment_default_instance_;
class PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser;
class PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUserDefaultTypeInternal;
extern PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUserDefaultTypeInternal _PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser_default_instance_;
class PChannel_PUserInChannel;
class PChannel_PUserInChannelDefaultTypeInternal;
extern PChannel_PUserInChannelDefaultTypeInternal _PChannel_PUserInChannel_default_instance_;
class PChannel_PUserInChannel_PActivitiesInUser;
class PChannel_PUserInChannel_PActivitiesInUserDefaultTypeInternal;
extern PChannel_PUserInChannel_PActivitiesInUserDefaultTypeInternal _PChannel_PUserInChannel_PActivitiesInUser_default_instance_;
class PChannel_PUserInChannel_PAttachmentsInUser;
class PChannel_PUserInChannel_PAttachmentsInUserDefaultTypeInternal;
extern PChannel_PUserInChannel_PAttachmentsInUserDefaultTypeInternal _PChannel_PUserInChannel_PAttachmentsInUser_default_instance_;
class PQuery0Result;
class PQuery0ResultDefaultTypeInternal;
extern PQuery0ResultDefaultTypeInternal _PQuery0Result_default_instance_;
class PUser;
class PUserDefaultTypeInternal;
extern PUserDefaultTypeInternal _PUser_default_instance_;
class PUserList;
class PUserListDefaultTypeInternal;
extern PUserListDefaultTypeInternal _PUserList_default_instance_;
class PUser_PActivitiesInUser;
class PUser_PActivitiesInUserDefaultTypeInternal;
extern PUser_PActivitiesInUserDefaultTypeInternal _PUser_PActivitiesInUser_default_instance_;
class PUser_PActivitiesInUser_PChannelInActivity;
class PUser_PActivitiesInUser_PChannelInActivityDefaultTypeInternal;
extern PUser_PActivitiesInUser_PChannelInActivityDefaultTypeInternal _PUser_PActivitiesInUser_PChannelInActivity_default_instance_;
class PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel;
class PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannelDefaultTypeInternal;
extern PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannelDefaultTypeInternal _PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel_default_instance_;
class PUser_PAttachmentsInUser;
class PUser_PAttachmentsInUserDefaultTypeInternal;
extern PUser_PAttachmentsInUserDefaultTypeInternal _PUser_PAttachmentsInUser_default_instance_;
class PUser_PAttachmentsInUser_PChannelInAttachment;
class PUser_PAttachmentsInUser_PChannelInAttachmentDefaultTypeInternal;
extern PUser_PAttachmentsInUser_PChannelInAttachmentDefaultTypeInternal _PUser_PAttachmentsInUser_PChannelInAttachment_default_instance_;
class PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel;
class PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannelDefaultTypeInternal;
extern PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannelDefaultTypeInternal _PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel_default_instance_;
class PUser_PChannelsInUser;
class PUser_PChannelsInUserDefaultTypeInternal;
extern PUser_PChannelsInUserDefaultTypeInternal _PUser_PChannelsInUser_default_instance_;
class PUser_PChannelsInUser_PActivitiesInChannel;
class PUser_PChannelsInUser_PActivitiesInChannelDefaultTypeInternal;
extern PUser_PChannelsInUser_PActivitiesInChannelDefaultTypeInternal _PUser_PChannelsInUser_PActivitiesInChannel_default_instance_;
class PUser_PChannelsInUser_PAttachmentsInChannel;
class PUser_PChannelsInUser_PAttachmentsInChannelDefaultTypeInternal;
extern PUser_PChannelsInUser_PAttachmentsInChannelDefaultTypeInternal _PUser_PChannelsInUser_PAttachmentsInChannel_default_instance_;
class QueryParam;
class QueryParamDefaultTypeInternal;
extern QueryParamDefaultTypeInternal _QueryParam_default_instance_;
}  // namespace kandan_small
PROTOBUF_NAMESPACE_OPEN
template<> ::kandan_small::PActivity* Arena::CreateMaybeMessage<::kandan_small::PActivity>(Arena*);
template<> ::kandan_small::PActivityList* Arena::CreateMaybeMessage<::kandan_small::PActivityList>(Arena*);
template<> ::kandan_small::PActivity_PChannelInActivity* Arena::CreateMaybeMessage<::kandan_small::PActivity_PChannelInActivity>(Arena*);
template<> ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel* Arena::CreateMaybeMessage<::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel>(Arena*);
template<> ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment* Arena::CreateMaybeMessage<::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment>(Arena*);
template<> ::kandan_small::PActivity_PChannelInActivity_PUserInChannel* Arena::CreateMaybeMessage<::kandan_small::PActivity_PChannelInActivity_PUserInChannel>(Arena*);
template<> ::kandan_small::PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser* Arena::CreateMaybeMessage<::kandan_small::PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser>(Arena*);
template<> ::kandan_small::PActivity_PUserInActivity* Arena::CreateMaybeMessage<::kandan_small::PActivity_PUserInActivity>(Arena*);
template<> ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser* Arena::CreateMaybeMessage<::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser>(Arena*);
template<> ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment* Arena::CreateMaybeMessage<::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment>(Arena*);
template<> ::kandan_small::PActivity_PUserInActivity_PChannelsInUser* Arena::CreateMaybeMessage<::kandan_small::PActivity_PUserInActivity_PChannelsInUser>(Arena*);
template<> ::kandan_small::PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel* Arena::CreateMaybeMessage<::kandan_small::PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel>(Arena*);
template<> ::kandan_small::PAttachment* Arena::CreateMaybeMessage<::kandan_small::PAttachment>(Arena*);
template<> ::kandan_small::PAttachmentList* Arena::CreateMaybeMessage<::kandan_small::PAttachmentList>(Arena*);
template<> ::kandan_small::PAttachment_PChannelInAttachment* Arena::CreateMaybeMessage<::kandan_small::PAttachment_PChannelInAttachment>(Arena*);
template<> ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel* Arena::CreateMaybeMessage<::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel>(Arena*);
template<> ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity* Arena::CreateMaybeMessage<::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity>(Arena*);
template<> ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel* Arena::CreateMaybeMessage<::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel>(Arena*);
template<> ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser* Arena::CreateMaybeMessage<::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser>(Arena*);
template<> ::kandan_small::PAttachment_PUserInAttachment* Arena::CreateMaybeMessage<::kandan_small::PAttachment_PUserInAttachment>(Arena*);
template<> ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser* Arena::CreateMaybeMessage<::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser>(Arena*);
template<> ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity* Arena::CreateMaybeMessage<::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity>(Arena*);
template<> ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser* Arena::CreateMaybeMessage<::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser>(Arena*);
template<> ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel* Arena::CreateMaybeMessage<::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel>(Arena*);
template<> ::kandan_small::PChannel* Arena::CreateMaybeMessage<::kandan_small::PChannel>(Arena*);
template<> ::kandan_small::PChannelList* Arena::CreateMaybeMessage<::kandan_small::PChannelList>(Arena*);
template<> ::kandan_small::PChannel_PActivitiesInChannel* Arena::CreateMaybeMessage<::kandan_small::PChannel_PActivitiesInChannel>(Arena*);
template<> ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity* Arena::CreateMaybeMessage<::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity>(Arena*);
template<> ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser* Arena::CreateMaybeMessage<::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser>(Arena*);
template<> ::kandan_small::PChannel_PAttachmentsInChannel* Arena::CreateMaybeMessage<::kandan_small::PChannel_PAttachmentsInChannel>(Arena*);
template<> ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment* Arena::CreateMaybeMessage<::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment>(Arena*);
template<> ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser* Arena::CreateMaybeMessage<::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser>(Arena*);
template<> ::kandan_small::PChannel_PUserInChannel* Arena::CreateMaybeMessage<::kandan_small::PChannel_PUserInChannel>(Arena*);
template<> ::kandan_small::PChannel_PUserInChannel_PActivitiesInUser* Arena::CreateMaybeMessage<::kandan_small::PChannel_PUserInChannel_PActivitiesInUser>(Arena*);
template<> ::kandan_small::PChannel_PUserInChannel_PAttachmentsInUser* Arena::CreateMaybeMessage<::kandan_small::PChannel_PUserInChannel_PAttachmentsInUser>(Arena*);
template<> ::kandan_small::PQuery0Result* Arena::CreateMaybeMessage<::kandan_small::PQuery0Result>(Arena*);
template<> ::kandan_small::PUser* Arena::CreateMaybeMessage<::kandan_small::PUser>(Arena*);
template<> ::kandan_small::PUserList* Arena::CreateMaybeMessage<::kandan_small::PUserList>(Arena*);
template<> ::kandan_small::PUser_PActivitiesInUser* Arena::CreateMaybeMessage<::kandan_small::PUser_PActivitiesInUser>(Arena*);
template<> ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity* Arena::CreateMaybeMessage<::kandan_small::PUser_PActivitiesInUser_PChannelInActivity>(Arena*);
template<> ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel* Arena::CreateMaybeMessage<::kandan_small::PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel>(Arena*);
template<> ::kandan_small::PUser_PAttachmentsInUser* Arena::CreateMaybeMessage<::kandan_small::PUser_PAttachmentsInUser>(Arena*);
template<> ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment* Arena::CreateMaybeMessage<::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment>(Arena*);
template<> ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel* Arena::CreateMaybeMessage<::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel>(Arena*);
template<> ::kandan_small::PUser_PChannelsInUser* Arena::CreateMaybeMessage<::kandan_small::PUser_PChannelsInUser>(Arena*);
template<> ::kandan_small::PUser_PChannelsInUser_PActivitiesInChannel* Arena::CreateMaybeMessage<::kandan_small::PUser_PChannelsInUser_PActivitiesInChannel>(Arena*);
template<> ::kandan_small::PUser_PChannelsInUser_PAttachmentsInChannel* Arena::CreateMaybeMessage<::kandan_small::PUser_PChannelsInUser_PAttachmentsInChannel>(Arena*);
template<> ::kandan_small::QueryParam* Arena::CreateMaybeMessage<::kandan_small::QueryParam>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace kandan_small {

// ===================================================================

class PUser_PChannelsInUser_PActivitiesInChannel :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel) */ {
 public:
  PUser_PChannelsInUser_PActivitiesInChannel();
  virtual ~PUser_PChannelsInUser_PActivitiesInChannel();

  PUser_PChannelsInUser_PActivitiesInChannel(const PUser_PChannelsInUser_PActivitiesInChannel& from);
  PUser_PChannelsInUser_PActivitiesInChannel(PUser_PChannelsInUser_PActivitiesInChannel&& from) noexcept
    : PUser_PChannelsInUser_PActivitiesInChannel() {
    *this = ::std::move(from);
  }

  inline PUser_PChannelsInUser_PActivitiesInChannel& operator=(const PUser_PChannelsInUser_PActivitiesInChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline PUser_PChannelsInUser_PActivitiesInChannel& operator=(PUser_PChannelsInUser_PActivitiesInChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PUser_PChannelsInUser_PActivitiesInChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PUser_PChannelsInUser_PActivitiesInChannel* internal_default_instance() {
    return reinterpret_cast<const PUser_PChannelsInUser_PActivitiesInChannel*>(
               &_PUser_PChannelsInUser_PActivitiesInChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PUser_PChannelsInUser_PActivitiesInChannel& a, PUser_PChannelsInUser_PActivitiesInChannel& b) {
    a.Swap(&b);
  }
  inline void Swap(PUser_PChannelsInUser_PActivitiesInChannel* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PUser_PChannelsInUser_PActivitiesInChannel* New() const final {
    return CreateMaybeMessage<PUser_PChannelsInUser_PActivitiesInChannel>(nullptr);
  }

  PUser_PChannelsInUser_PActivitiesInChannel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PUser_PChannelsInUser_PActivitiesInChannel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PUser_PChannelsInUser_PActivitiesInChannel& from);
  void MergeFrom(const PUser_PChannelsInUser_PActivitiesInChannel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PUser_PChannelsInUser_PActivitiesInChannel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PUser.PChannelsInUser.PActivitiesInChannel";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 4,
    kContentFieldNumber = 5,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 2,
    kUpdatedAtFieldNumber = 3,
    kChannelIdFieldNumber = 6,
    kUserIdFieldNumber = 7,
  };
  // string action = 4;
  void clear_action();
  const std::string& action() const;
  void set_action(const std::string& value);
  void set_action(std::string&& value);
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  std::string* mutable_action();
  std::string* release_action();
  void set_allocated_action(std::string* action);
  private:
  const std::string& _internal_action() const;
  void _internal_set_action(const std::string& value);
  std::string* _internal_mutable_action();
  public:

  // string content = 5;
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 2;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 3;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 6;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 7;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr action_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PUser_PChannelsInUser_PAttachmentsInChannel :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel) */ {
 public:
  PUser_PChannelsInUser_PAttachmentsInChannel();
  virtual ~PUser_PChannelsInUser_PAttachmentsInChannel();

  PUser_PChannelsInUser_PAttachmentsInChannel(const PUser_PChannelsInUser_PAttachmentsInChannel& from);
  PUser_PChannelsInUser_PAttachmentsInChannel(PUser_PChannelsInUser_PAttachmentsInChannel&& from) noexcept
    : PUser_PChannelsInUser_PAttachmentsInChannel() {
    *this = ::std::move(from);
  }

  inline PUser_PChannelsInUser_PAttachmentsInChannel& operator=(const PUser_PChannelsInUser_PAttachmentsInChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline PUser_PChannelsInUser_PAttachmentsInChannel& operator=(PUser_PChannelsInUser_PAttachmentsInChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PUser_PChannelsInUser_PAttachmentsInChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PUser_PChannelsInUser_PAttachmentsInChannel* internal_default_instance() {
    return reinterpret_cast<const PUser_PChannelsInUser_PAttachmentsInChannel*>(
               &_PUser_PChannelsInUser_PAttachmentsInChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PUser_PChannelsInUser_PAttachmentsInChannel& a, PUser_PChannelsInUser_PAttachmentsInChannel& b) {
    a.Swap(&b);
  }
  inline void Swap(PUser_PChannelsInUser_PAttachmentsInChannel* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PUser_PChannelsInUser_PAttachmentsInChannel* New() const final {
    return CreateMaybeMessage<PUser_PChannelsInUser_PAttachmentsInChannel>(nullptr);
  }

  PUser_PChannelsInUser_PAttachmentsInChannel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PUser_PChannelsInUser_PAttachmentsInChannel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PUser_PChannelsInUser_PAttachmentsInChannel& from);
  void MergeFrom(const PUser_PChannelsInUser_PAttachmentsInChannel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PUser_PChannelsInUser_PAttachmentsInChannel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileFileNameFieldNumber = 2,
    kFileContentTypeFieldNumber = 3,
    kIdFieldNumber = 1,
    kFileFileSizeFieldNumber = 4,
    kMessageIdFieldNumber = 5,
    kFileUpdatedAtFieldNumber = 6,
    kCreatedAtFieldNumber = 7,
    kUpdatedAtFieldNumber = 8,
    kUserIdFieldNumber = 9,
    kChannelIdFieldNumber = 10,
  };
  // string file_file_name = 2;
  void clear_file_file_name();
  const std::string& file_file_name() const;
  void set_file_file_name(const std::string& value);
  void set_file_file_name(std::string&& value);
  void set_file_file_name(const char* value);
  void set_file_file_name(const char* value, size_t size);
  std::string* mutable_file_file_name();
  std::string* release_file_file_name();
  void set_allocated_file_file_name(std::string* file_file_name);
  private:
  const std::string& _internal_file_file_name() const;
  void _internal_set_file_file_name(const std::string& value);
  std::string* _internal_mutable_file_file_name();
  public:

  // string file_content_type = 3;
  void clear_file_content_type();
  const std::string& file_content_type() const;
  void set_file_content_type(const std::string& value);
  void set_file_content_type(std::string&& value);
  void set_file_content_type(const char* value);
  void set_file_content_type(const char* value, size_t size);
  std::string* mutable_file_content_type();
  std::string* release_file_content_type();
  void set_allocated_file_content_type(std::string* file_content_type);
  private:
  const std::string& _internal_file_content_type() const;
  void _internal_set_file_content_type(const std::string& value);
  std::string* _internal_mutable_file_content_type();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_file_size = 4;
  void clear_file_file_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size() const;
  void set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_file_size() const;
  void _internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 message_id = 5;
  void clear_message_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id() const;
  void set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_message_id() const;
  void _internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_updated_at = 6;
  void clear_file_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at() const;
  void set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_updated_at() const;
  void _internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 7;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 8;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 9;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 10;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_file_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_content_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PUser_PChannelsInUser :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PUser.PChannelsInUser) */ {
 public:
  PUser_PChannelsInUser();
  virtual ~PUser_PChannelsInUser();

  PUser_PChannelsInUser(const PUser_PChannelsInUser& from);
  PUser_PChannelsInUser(PUser_PChannelsInUser&& from) noexcept
    : PUser_PChannelsInUser() {
    *this = ::std::move(from);
  }

  inline PUser_PChannelsInUser& operator=(const PUser_PChannelsInUser& from) {
    CopyFrom(from);
    return *this;
  }
  inline PUser_PChannelsInUser& operator=(PUser_PChannelsInUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PUser_PChannelsInUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PUser_PChannelsInUser* internal_default_instance() {
    return reinterpret_cast<const PUser_PChannelsInUser*>(
               &_PUser_PChannelsInUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PUser_PChannelsInUser& a, PUser_PChannelsInUser& b) {
    a.Swap(&b);
  }
  inline void Swap(PUser_PChannelsInUser* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PUser_PChannelsInUser* New() const final {
    return CreateMaybeMessage<PUser_PChannelsInUser>(nullptr);
  }

  PUser_PChannelsInUser* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PUser_PChannelsInUser>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PUser_PChannelsInUser& from);
  void MergeFrom(const PUser_PChannelsInUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PUser_PChannelsInUser* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PUser.PChannelsInUser";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PUser_PChannelsInUser_PActivitiesInChannel PActivitiesInChannel;
  typedef PUser_PChannelsInUser_PAttachmentsInChannel PAttachmentsInChannel;

  // accessors -------------------------------------------------------

  enum : int {
    kActivitiesFieldNumber = 7,
    kAttachmentsFieldNumber = 8,
    kNameFieldNumber = 2,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 3,
    kUpdatedAtFieldNumber = 4,
    kUserIdFieldNumber = 5,
    kCountFieldNumber = 6,
  };
  // repeated .kandan_small.PUser.PChannelsInUser.PActivitiesInChannel activities = 7;
  int activities_size() const;
  private:
  int _internal_activities_size() const;
  public:
  void clear_activities();
  ::kandan_small::PUser_PChannelsInUser_PActivitiesInChannel* mutable_activities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PChannelsInUser_PActivitiesInChannel >*
      mutable_activities();
  private:
  const ::kandan_small::PUser_PChannelsInUser_PActivitiesInChannel& _internal_activities(int index) const;
  ::kandan_small::PUser_PChannelsInUser_PActivitiesInChannel* _internal_add_activities();
  public:
  const ::kandan_small::PUser_PChannelsInUser_PActivitiesInChannel& activities(int index) const;
  ::kandan_small::PUser_PChannelsInUser_PActivitiesInChannel* add_activities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PChannelsInUser_PActivitiesInChannel >&
      activities() const;

  // repeated .kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel attachments = 8;
  int attachments_size() const;
  private:
  int _internal_attachments_size() const;
  public:
  void clear_attachments();
  ::kandan_small::PUser_PChannelsInUser_PAttachmentsInChannel* mutable_attachments(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PChannelsInUser_PAttachmentsInChannel >*
      mutable_attachments();
  private:
  const ::kandan_small::PUser_PChannelsInUser_PAttachmentsInChannel& _internal_attachments(int index) const;
  ::kandan_small::PUser_PChannelsInUser_PAttachmentsInChannel* _internal_add_attachments();
  public:
  const ::kandan_small::PUser_PChannelsInUser_PAttachmentsInChannel& attachments(int index) const;
  ::kandan_small::PUser_PChannelsInUser_PAttachmentsInChannel* add_attachments();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PChannelsInUser_PAttachmentsInChannel >&
      attachments() const;

  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 3;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 4;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 5;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 count = 6;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PUser.PChannelsInUser)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PChannelsInUser_PActivitiesInChannel > activities_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PChannelsInUser_PAttachmentsInChannel > attachments_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel) */ {
 public:
  PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel();
  virtual ~PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel();

  PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel(const PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel& from);
  PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel(PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel&& from) noexcept
    : PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel() {
    *this = ::std::move(from);
  }

  inline PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel& operator=(const PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel& operator=(PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel* internal_default_instance() {
    return reinterpret_cast<const PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel*>(
               &_PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel& a, PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel& b) {
    a.Swap(&b);
  }
  inline void Swap(PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel* New() const final {
    return CreateMaybeMessage<PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel>(nullptr);
  }

  PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel& from);
  void MergeFrom(const PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileFileNameFieldNumber = 2,
    kFileContentTypeFieldNumber = 3,
    kIdFieldNumber = 1,
    kFileFileSizeFieldNumber = 4,
    kMessageIdFieldNumber = 5,
    kFileUpdatedAtFieldNumber = 6,
    kCreatedAtFieldNumber = 7,
    kUpdatedAtFieldNumber = 8,
    kUserIdFieldNumber = 9,
    kChannelIdFieldNumber = 10,
  };
  // string file_file_name = 2;
  void clear_file_file_name();
  const std::string& file_file_name() const;
  void set_file_file_name(const std::string& value);
  void set_file_file_name(std::string&& value);
  void set_file_file_name(const char* value);
  void set_file_file_name(const char* value, size_t size);
  std::string* mutable_file_file_name();
  std::string* release_file_file_name();
  void set_allocated_file_file_name(std::string* file_file_name);
  private:
  const std::string& _internal_file_file_name() const;
  void _internal_set_file_file_name(const std::string& value);
  std::string* _internal_mutable_file_file_name();
  public:

  // string file_content_type = 3;
  void clear_file_content_type();
  const std::string& file_content_type() const;
  void set_file_content_type(const std::string& value);
  void set_file_content_type(std::string&& value);
  void set_file_content_type(const char* value);
  void set_file_content_type(const char* value, size_t size);
  std::string* mutable_file_content_type();
  std::string* release_file_content_type();
  void set_allocated_file_content_type(std::string* file_content_type);
  private:
  const std::string& _internal_file_content_type() const;
  void _internal_set_file_content_type(const std::string& value);
  std::string* _internal_mutable_file_content_type();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_file_size = 4;
  void clear_file_file_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size() const;
  void set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_file_size() const;
  void _internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 message_id = 5;
  void clear_message_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id() const;
  void set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_message_id() const;
  void _internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_updated_at = 6;
  void clear_file_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at() const;
  void set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_updated_at() const;
  void _internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 7;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 8;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 9;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 10;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_file_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_content_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PUser_PActivitiesInUser_PChannelInActivity :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PUser.PActivitiesInUser.PChannelInActivity) */ {
 public:
  PUser_PActivitiesInUser_PChannelInActivity();
  virtual ~PUser_PActivitiesInUser_PChannelInActivity();

  PUser_PActivitiesInUser_PChannelInActivity(const PUser_PActivitiesInUser_PChannelInActivity& from);
  PUser_PActivitiesInUser_PChannelInActivity(PUser_PActivitiesInUser_PChannelInActivity&& from) noexcept
    : PUser_PActivitiesInUser_PChannelInActivity() {
    *this = ::std::move(from);
  }

  inline PUser_PActivitiesInUser_PChannelInActivity& operator=(const PUser_PActivitiesInUser_PChannelInActivity& from) {
    CopyFrom(from);
    return *this;
  }
  inline PUser_PActivitiesInUser_PChannelInActivity& operator=(PUser_PActivitiesInUser_PChannelInActivity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PUser_PActivitiesInUser_PChannelInActivity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PUser_PActivitiesInUser_PChannelInActivity* internal_default_instance() {
    return reinterpret_cast<const PUser_PActivitiesInUser_PChannelInActivity*>(
               &_PUser_PActivitiesInUser_PChannelInActivity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(PUser_PActivitiesInUser_PChannelInActivity& a, PUser_PActivitiesInUser_PChannelInActivity& b) {
    a.Swap(&b);
  }
  inline void Swap(PUser_PActivitiesInUser_PChannelInActivity* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PUser_PActivitiesInUser_PChannelInActivity* New() const final {
    return CreateMaybeMessage<PUser_PActivitiesInUser_PChannelInActivity>(nullptr);
  }

  PUser_PActivitiesInUser_PChannelInActivity* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PUser_PActivitiesInUser_PChannelInActivity>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PUser_PActivitiesInUser_PChannelInActivity& from);
  void MergeFrom(const PUser_PActivitiesInUser_PChannelInActivity& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PUser_PActivitiesInUser_PChannelInActivity* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PUser.PActivitiesInUser.PChannelInActivity";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel PAttachmentsInChannel;

  // accessors -------------------------------------------------------

  enum : int {
    kAttachmentsFieldNumber = 7,
    kNameFieldNumber = 2,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 3,
    kUpdatedAtFieldNumber = 4,
    kUserIdFieldNumber = 5,
    kCountFieldNumber = 6,
  };
  // repeated .kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel attachments = 7;
  int attachments_size() const;
  private:
  int _internal_attachments_size() const;
  public:
  void clear_attachments();
  ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel* mutable_attachments(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel >*
      mutable_attachments();
  private:
  const ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel& _internal_attachments(int index) const;
  ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel* _internal_add_attachments();
  public:
  const ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel& attachments(int index) const;
  ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel* add_attachments();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel >&
      attachments() const;

  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 3;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 4;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 5;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 count = 6;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PUser.PActivitiesInUser.PChannelInActivity)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel > attachments_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PUser_PActivitiesInUser :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PUser.PActivitiesInUser) */ {
 public:
  PUser_PActivitiesInUser();
  virtual ~PUser_PActivitiesInUser();

  PUser_PActivitiesInUser(const PUser_PActivitiesInUser& from);
  PUser_PActivitiesInUser(PUser_PActivitiesInUser&& from) noexcept
    : PUser_PActivitiesInUser() {
    *this = ::std::move(from);
  }

  inline PUser_PActivitiesInUser& operator=(const PUser_PActivitiesInUser& from) {
    CopyFrom(from);
    return *this;
  }
  inline PUser_PActivitiesInUser& operator=(PUser_PActivitiesInUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PUser_PActivitiesInUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PUser_PActivitiesInUser* internal_default_instance() {
    return reinterpret_cast<const PUser_PActivitiesInUser*>(
               &_PUser_PActivitiesInUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(PUser_PActivitiesInUser& a, PUser_PActivitiesInUser& b) {
    a.Swap(&b);
  }
  inline void Swap(PUser_PActivitiesInUser* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PUser_PActivitiesInUser* New() const final {
    return CreateMaybeMessage<PUser_PActivitiesInUser>(nullptr);
  }

  PUser_PActivitiesInUser* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PUser_PActivitiesInUser>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PUser_PActivitiesInUser& from);
  void MergeFrom(const PUser_PActivitiesInUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PUser_PActivitiesInUser* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PUser.PActivitiesInUser";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PUser_PActivitiesInUser_PChannelInActivity PChannelInActivity;

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 4,
    kContentFieldNumber = 5,
    kChannelFieldNumber = 8,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 2,
    kUpdatedAtFieldNumber = 3,
    kChannelIdFieldNumber = 6,
    kUserIdFieldNumber = 7,
  };
  // string action = 4;
  void clear_action();
  const std::string& action() const;
  void set_action(const std::string& value);
  void set_action(std::string&& value);
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  std::string* mutable_action();
  std::string* release_action();
  void set_allocated_action(std::string* action);
  private:
  const std::string& _internal_action() const;
  void _internal_set_action(const std::string& value);
  std::string* _internal_mutable_action();
  public:

  // string content = 5;
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // .kandan_small.PUser.PActivitiesInUser.PChannelInActivity channel = 8;
  bool has_channel() const;
  private:
  bool _internal_has_channel() const;
  public:
  void clear_channel();
  const ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity& channel() const;
  ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity* release_channel();
  ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity* mutable_channel();
  void set_allocated_channel(::kandan_small::PUser_PActivitiesInUser_PChannelInActivity* channel);
  private:
  const ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity& _internal_channel() const;
  ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity* _internal_mutable_channel();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 2;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 3;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 6;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 7;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PUser.PActivitiesInUser)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr action_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity* channel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel) */ {
 public:
  PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel();
  virtual ~PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel();

  PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel(const PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel& from);
  PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel(PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel&& from) noexcept
    : PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel() {
    *this = ::std::move(from);
  }

  inline PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel& operator=(const PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel& operator=(PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel* internal_default_instance() {
    return reinterpret_cast<const PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel*>(
               &_PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel& a, PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel& b) {
    a.Swap(&b);
  }
  inline void Swap(PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel* New() const final {
    return CreateMaybeMessage<PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel>(nullptr);
  }

  PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel& from);
  void MergeFrom(const PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 4,
    kContentFieldNumber = 5,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 2,
    kUpdatedAtFieldNumber = 3,
    kChannelIdFieldNumber = 6,
    kUserIdFieldNumber = 7,
  };
  // string action = 4;
  void clear_action();
  const std::string& action() const;
  void set_action(const std::string& value);
  void set_action(std::string&& value);
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  std::string* mutable_action();
  std::string* release_action();
  void set_allocated_action(std::string* action);
  private:
  const std::string& _internal_action() const;
  void _internal_set_action(const std::string& value);
  std::string* _internal_mutable_action();
  public:

  // string content = 5;
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 2;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 3;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 6;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 7;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr action_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PUser_PAttachmentsInUser_PChannelInAttachment :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment) */ {
 public:
  PUser_PAttachmentsInUser_PChannelInAttachment();
  virtual ~PUser_PAttachmentsInUser_PChannelInAttachment();

  PUser_PAttachmentsInUser_PChannelInAttachment(const PUser_PAttachmentsInUser_PChannelInAttachment& from);
  PUser_PAttachmentsInUser_PChannelInAttachment(PUser_PAttachmentsInUser_PChannelInAttachment&& from) noexcept
    : PUser_PAttachmentsInUser_PChannelInAttachment() {
    *this = ::std::move(from);
  }

  inline PUser_PAttachmentsInUser_PChannelInAttachment& operator=(const PUser_PAttachmentsInUser_PChannelInAttachment& from) {
    CopyFrom(from);
    return *this;
  }
  inline PUser_PAttachmentsInUser_PChannelInAttachment& operator=(PUser_PAttachmentsInUser_PChannelInAttachment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PUser_PAttachmentsInUser_PChannelInAttachment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PUser_PAttachmentsInUser_PChannelInAttachment* internal_default_instance() {
    return reinterpret_cast<const PUser_PAttachmentsInUser_PChannelInAttachment*>(
               &_PUser_PAttachmentsInUser_PChannelInAttachment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(PUser_PAttachmentsInUser_PChannelInAttachment& a, PUser_PAttachmentsInUser_PChannelInAttachment& b) {
    a.Swap(&b);
  }
  inline void Swap(PUser_PAttachmentsInUser_PChannelInAttachment* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PUser_PAttachmentsInUser_PChannelInAttachment* New() const final {
    return CreateMaybeMessage<PUser_PAttachmentsInUser_PChannelInAttachment>(nullptr);
  }

  PUser_PAttachmentsInUser_PChannelInAttachment* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PUser_PAttachmentsInUser_PChannelInAttachment>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PUser_PAttachmentsInUser_PChannelInAttachment& from);
  void MergeFrom(const PUser_PAttachmentsInUser_PChannelInAttachment& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PUser_PAttachmentsInUser_PChannelInAttachment* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel PActivitiesInChannel;

  // accessors -------------------------------------------------------

  enum : int {
    kActivitiesFieldNumber = 7,
    kNameFieldNumber = 2,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 3,
    kUpdatedAtFieldNumber = 4,
    kUserIdFieldNumber = 5,
    kCountFieldNumber = 6,
  };
  // repeated .kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel activities = 7;
  int activities_size() const;
  private:
  int _internal_activities_size() const;
  public:
  void clear_activities();
  ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel* mutable_activities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel >*
      mutable_activities();
  private:
  const ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel& _internal_activities(int index) const;
  ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel* _internal_add_activities();
  public:
  const ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel& activities(int index) const;
  ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel* add_activities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel >&
      activities() const;

  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 3;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 4;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 5;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 count = 6;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel > activities_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PUser_PAttachmentsInUser :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PUser.PAttachmentsInUser) */ {
 public:
  PUser_PAttachmentsInUser();
  virtual ~PUser_PAttachmentsInUser();

  PUser_PAttachmentsInUser(const PUser_PAttachmentsInUser& from);
  PUser_PAttachmentsInUser(PUser_PAttachmentsInUser&& from) noexcept
    : PUser_PAttachmentsInUser() {
    *this = ::std::move(from);
  }

  inline PUser_PAttachmentsInUser& operator=(const PUser_PAttachmentsInUser& from) {
    CopyFrom(from);
    return *this;
  }
  inline PUser_PAttachmentsInUser& operator=(PUser_PAttachmentsInUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PUser_PAttachmentsInUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PUser_PAttachmentsInUser* internal_default_instance() {
    return reinterpret_cast<const PUser_PAttachmentsInUser*>(
               &_PUser_PAttachmentsInUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(PUser_PAttachmentsInUser& a, PUser_PAttachmentsInUser& b) {
    a.Swap(&b);
  }
  inline void Swap(PUser_PAttachmentsInUser* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PUser_PAttachmentsInUser* New() const final {
    return CreateMaybeMessage<PUser_PAttachmentsInUser>(nullptr);
  }

  PUser_PAttachmentsInUser* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PUser_PAttachmentsInUser>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PUser_PAttachmentsInUser& from);
  void MergeFrom(const PUser_PAttachmentsInUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PUser_PAttachmentsInUser* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PUser.PAttachmentsInUser";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PUser_PAttachmentsInUser_PChannelInAttachment PChannelInAttachment;

  // accessors -------------------------------------------------------

  enum : int {
    kFileFileNameFieldNumber = 2,
    kFileContentTypeFieldNumber = 3,
    kChannelFieldNumber = 11,
    kIdFieldNumber = 1,
    kFileFileSizeFieldNumber = 4,
    kMessageIdFieldNumber = 5,
    kFileUpdatedAtFieldNumber = 6,
    kCreatedAtFieldNumber = 7,
    kUpdatedAtFieldNumber = 8,
    kUserIdFieldNumber = 9,
    kChannelIdFieldNumber = 10,
  };
  // string file_file_name = 2;
  void clear_file_file_name();
  const std::string& file_file_name() const;
  void set_file_file_name(const std::string& value);
  void set_file_file_name(std::string&& value);
  void set_file_file_name(const char* value);
  void set_file_file_name(const char* value, size_t size);
  std::string* mutable_file_file_name();
  std::string* release_file_file_name();
  void set_allocated_file_file_name(std::string* file_file_name);
  private:
  const std::string& _internal_file_file_name() const;
  void _internal_set_file_file_name(const std::string& value);
  std::string* _internal_mutable_file_file_name();
  public:

  // string file_content_type = 3;
  void clear_file_content_type();
  const std::string& file_content_type() const;
  void set_file_content_type(const std::string& value);
  void set_file_content_type(std::string&& value);
  void set_file_content_type(const char* value);
  void set_file_content_type(const char* value, size_t size);
  std::string* mutable_file_content_type();
  std::string* release_file_content_type();
  void set_allocated_file_content_type(std::string* file_content_type);
  private:
  const std::string& _internal_file_content_type() const;
  void _internal_set_file_content_type(const std::string& value);
  std::string* _internal_mutable_file_content_type();
  public:

  // .kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment channel = 11;
  bool has_channel() const;
  private:
  bool _internal_has_channel() const;
  public:
  void clear_channel();
  const ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment& channel() const;
  ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment* release_channel();
  ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment* mutable_channel();
  void set_allocated_channel(::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment* channel);
  private:
  const ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment& _internal_channel() const;
  ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment* _internal_mutable_channel();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_file_size = 4;
  void clear_file_file_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size() const;
  void set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_file_size() const;
  void _internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 message_id = 5;
  void clear_message_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id() const;
  void set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_message_id() const;
  void _internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_updated_at = 6;
  void clear_file_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at() const;
  void set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_updated_at() const;
  void _internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 7;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 8;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 9;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 10;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PUser.PAttachmentsInUser)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_file_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_content_type_;
  ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment* channel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PUser :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PUser) */ {
 public:
  PUser();
  virtual ~PUser();

  PUser(const PUser& from);
  PUser(PUser&& from) noexcept
    : PUser() {
    *this = ::std::move(from);
  }

  inline PUser& operator=(const PUser& from) {
    CopyFrom(from);
    return *this;
  }
  inline PUser& operator=(PUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PUser* internal_default_instance() {
    return reinterpret_cast<const PUser*>(
               &_PUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(PUser& a, PUser& b) {
    a.Swap(&b);
  }
  inline void Swap(PUser* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PUser* New() const final {
    return CreateMaybeMessage<PUser>(nullptr);
  }

  PUser* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PUser>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PUser& from);
  void MergeFrom(const PUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PUser* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PUser";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PUser_PChannelsInUser PChannelsInUser;
  typedef PUser_PActivitiesInUser PActivitiesInUser;
  typedef PUser_PAttachmentsInUser PAttachmentsInUser;

  // accessors -------------------------------------------------------

  enum : int {
    kChannelsFieldNumber = 24,
    kActivitiesFieldNumber = 25,
    kAttachmentsFieldNumber = 26,
    kEmailFieldNumber = 2,
    kEncryptedPasswordFieldNumber = 3,
    kResetPasswordTokenFieldNumber = 4,
    kFirstNameFieldNumber = 7,
    kLastNameFieldNumber = 8,
    kCurrentSignInIpFieldNumber = 11,
    kLastSignInIpFieldNumber = 13,
    kAuthTokenFieldNumber = 14,
    kLocaleFieldNumber = 15,
    kGravatarHashFieldNumber = 16,
    kUsernameFieldNumber = 17,
    kRegstatusFieldNumber = 18,
    kAvatarUrlFieldNumber = 21,
    kIdFieldNumber = 1,
    kResetPasswordSentAtFieldNumber = 5,
    kRememberCreatedAtFieldNumber = 6,
    kSigninCountFieldNumber = 9,
    kCurrentSignInAtFieldNumber = 10,
    kLastSignInAtFieldNumber = 12,
    kActiveFieldNumber = 19,
    kIsAdminFieldNumber = 20,
    kCreatedAtFieldNumber = 22,
    kUpdatedAtFieldNumber = 23,
  };
  // repeated .kandan_small.PUser.PChannelsInUser channels = 24;
  int channels_size() const;
  private:
  int _internal_channels_size() const;
  public:
  void clear_channels();
  ::kandan_small::PUser_PChannelsInUser* mutable_channels(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PChannelsInUser >*
      mutable_channels();
  private:
  const ::kandan_small::PUser_PChannelsInUser& _internal_channels(int index) const;
  ::kandan_small::PUser_PChannelsInUser* _internal_add_channels();
  public:
  const ::kandan_small::PUser_PChannelsInUser& channels(int index) const;
  ::kandan_small::PUser_PChannelsInUser* add_channels();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PChannelsInUser >&
      channels() const;

  // repeated .kandan_small.PUser.PActivitiesInUser activities = 25;
  int activities_size() const;
  private:
  int _internal_activities_size() const;
  public:
  void clear_activities();
  ::kandan_small::PUser_PActivitiesInUser* mutable_activities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PActivitiesInUser >*
      mutable_activities();
  private:
  const ::kandan_small::PUser_PActivitiesInUser& _internal_activities(int index) const;
  ::kandan_small::PUser_PActivitiesInUser* _internal_add_activities();
  public:
  const ::kandan_small::PUser_PActivitiesInUser& activities(int index) const;
  ::kandan_small::PUser_PActivitiesInUser* add_activities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PActivitiesInUser >&
      activities() const;

  // repeated .kandan_small.PUser.PAttachmentsInUser attachments = 26;
  int attachments_size() const;
  private:
  int _internal_attachments_size() const;
  public:
  void clear_attachments();
  ::kandan_small::PUser_PAttachmentsInUser* mutable_attachments(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PAttachmentsInUser >*
      mutable_attachments();
  private:
  const ::kandan_small::PUser_PAttachmentsInUser& _internal_attachments(int index) const;
  ::kandan_small::PUser_PAttachmentsInUser* _internal_add_attachments();
  public:
  const ::kandan_small::PUser_PAttachmentsInUser& attachments(int index) const;
  ::kandan_small::PUser_PAttachmentsInUser* add_attachments();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PAttachmentsInUser >&
      attachments() const;

  // string email = 2;
  void clear_email();
  const std::string& email() const;
  void set_email(const std::string& value);
  void set_email(std::string&& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  std::string* mutable_email();
  std::string* release_email();
  void set_allocated_email(std::string* email);
  private:
  const std::string& _internal_email() const;
  void _internal_set_email(const std::string& value);
  std::string* _internal_mutable_email();
  public:

  // string encrypted_password = 3;
  void clear_encrypted_password();
  const std::string& encrypted_password() const;
  void set_encrypted_password(const std::string& value);
  void set_encrypted_password(std::string&& value);
  void set_encrypted_password(const char* value);
  void set_encrypted_password(const char* value, size_t size);
  std::string* mutable_encrypted_password();
  std::string* release_encrypted_password();
  void set_allocated_encrypted_password(std::string* encrypted_password);
  private:
  const std::string& _internal_encrypted_password() const;
  void _internal_set_encrypted_password(const std::string& value);
  std::string* _internal_mutable_encrypted_password();
  public:

  // string reset_password_token = 4;
  void clear_reset_password_token();
  const std::string& reset_password_token() const;
  void set_reset_password_token(const std::string& value);
  void set_reset_password_token(std::string&& value);
  void set_reset_password_token(const char* value);
  void set_reset_password_token(const char* value, size_t size);
  std::string* mutable_reset_password_token();
  std::string* release_reset_password_token();
  void set_allocated_reset_password_token(std::string* reset_password_token);
  private:
  const std::string& _internal_reset_password_token() const;
  void _internal_set_reset_password_token(const std::string& value);
  std::string* _internal_mutable_reset_password_token();
  public:

  // string first_name = 7;
  void clear_first_name();
  const std::string& first_name() const;
  void set_first_name(const std::string& value);
  void set_first_name(std::string&& value);
  void set_first_name(const char* value);
  void set_first_name(const char* value, size_t size);
  std::string* mutable_first_name();
  std::string* release_first_name();
  void set_allocated_first_name(std::string* first_name);
  private:
  const std::string& _internal_first_name() const;
  void _internal_set_first_name(const std::string& value);
  std::string* _internal_mutable_first_name();
  public:

  // string last_name = 8;
  void clear_last_name();
  const std::string& last_name() const;
  void set_last_name(const std::string& value);
  void set_last_name(std::string&& value);
  void set_last_name(const char* value);
  void set_last_name(const char* value, size_t size);
  std::string* mutable_last_name();
  std::string* release_last_name();
  void set_allocated_last_name(std::string* last_name);
  private:
  const std::string& _internal_last_name() const;
  void _internal_set_last_name(const std::string& value);
  std::string* _internal_mutable_last_name();
  public:

  // string current_sign_in_ip = 11;
  void clear_current_sign_in_ip();
  const std::string& current_sign_in_ip() const;
  void set_current_sign_in_ip(const std::string& value);
  void set_current_sign_in_ip(std::string&& value);
  void set_current_sign_in_ip(const char* value);
  void set_current_sign_in_ip(const char* value, size_t size);
  std::string* mutable_current_sign_in_ip();
  std::string* release_current_sign_in_ip();
  void set_allocated_current_sign_in_ip(std::string* current_sign_in_ip);
  private:
  const std::string& _internal_current_sign_in_ip() const;
  void _internal_set_current_sign_in_ip(const std::string& value);
  std::string* _internal_mutable_current_sign_in_ip();
  public:

  // string last_sign_in_ip = 13;
  void clear_last_sign_in_ip();
  const std::string& last_sign_in_ip() const;
  void set_last_sign_in_ip(const std::string& value);
  void set_last_sign_in_ip(std::string&& value);
  void set_last_sign_in_ip(const char* value);
  void set_last_sign_in_ip(const char* value, size_t size);
  std::string* mutable_last_sign_in_ip();
  std::string* release_last_sign_in_ip();
  void set_allocated_last_sign_in_ip(std::string* last_sign_in_ip);
  private:
  const std::string& _internal_last_sign_in_ip() const;
  void _internal_set_last_sign_in_ip(const std::string& value);
  std::string* _internal_mutable_last_sign_in_ip();
  public:

  // string auth_token = 14;
  void clear_auth_token();
  const std::string& auth_token() const;
  void set_auth_token(const std::string& value);
  void set_auth_token(std::string&& value);
  void set_auth_token(const char* value);
  void set_auth_token(const char* value, size_t size);
  std::string* mutable_auth_token();
  std::string* release_auth_token();
  void set_allocated_auth_token(std::string* auth_token);
  private:
  const std::string& _internal_auth_token() const;
  void _internal_set_auth_token(const std::string& value);
  std::string* _internal_mutable_auth_token();
  public:

  // string locale = 15;
  void clear_locale();
  const std::string& locale() const;
  void set_locale(const std::string& value);
  void set_locale(std::string&& value);
  void set_locale(const char* value);
  void set_locale(const char* value, size_t size);
  std::string* mutable_locale();
  std::string* release_locale();
  void set_allocated_locale(std::string* locale);
  private:
  const std::string& _internal_locale() const;
  void _internal_set_locale(const std::string& value);
  std::string* _internal_mutable_locale();
  public:

  // string gravatar_hash = 16;
  void clear_gravatar_hash();
  const std::string& gravatar_hash() const;
  void set_gravatar_hash(const std::string& value);
  void set_gravatar_hash(std::string&& value);
  void set_gravatar_hash(const char* value);
  void set_gravatar_hash(const char* value, size_t size);
  std::string* mutable_gravatar_hash();
  std::string* release_gravatar_hash();
  void set_allocated_gravatar_hash(std::string* gravatar_hash);
  private:
  const std::string& _internal_gravatar_hash() const;
  void _internal_set_gravatar_hash(const std::string& value);
  std::string* _internal_mutable_gravatar_hash();
  public:

  // string username = 17;
  void clear_username();
  const std::string& username() const;
  void set_username(const std::string& value);
  void set_username(std::string&& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  std::string* mutable_username();
  std::string* release_username();
  void set_allocated_username(std::string* username);
  private:
  const std::string& _internal_username() const;
  void _internal_set_username(const std::string& value);
  std::string* _internal_mutable_username();
  public:

  // string regstatus = 18;
  void clear_regstatus();
  const std::string& regstatus() const;
  void set_regstatus(const std::string& value);
  void set_regstatus(std::string&& value);
  void set_regstatus(const char* value);
  void set_regstatus(const char* value, size_t size);
  std::string* mutable_regstatus();
  std::string* release_regstatus();
  void set_allocated_regstatus(std::string* regstatus);
  private:
  const std::string& _internal_regstatus() const;
  void _internal_set_regstatus(const std::string& value);
  std::string* _internal_mutable_regstatus();
  public:

  // string avatar_url = 21;
  void clear_avatar_url();
  const std::string& avatar_url() const;
  void set_avatar_url(const std::string& value);
  void set_avatar_url(std::string&& value);
  void set_avatar_url(const char* value);
  void set_avatar_url(const char* value, size_t size);
  std::string* mutable_avatar_url();
  std::string* release_avatar_url();
  void set_allocated_avatar_url(std::string* avatar_url);
  private:
  const std::string& _internal_avatar_url() const;
  void _internal_set_avatar_url(const std::string& value);
  std::string* _internal_mutable_avatar_url();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 reset_password_sent_at = 5;
  void clear_reset_password_sent_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_password_sent_at() const;
  void set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reset_password_sent_at() const;
  void _internal_set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 remember_created_at = 6;
  void clear_remember_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 remember_created_at() const;
  void set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_remember_created_at() const;
  void _internal_set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 signin_count = 9;
  void clear_signin_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 signin_count() const;
  void set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_signin_count() const;
  void _internal_set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 current_sign_in_at = 10;
  void clear_current_sign_in_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 current_sign_in_at() const;
  void set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_current_sign_in_at() const;
  void _internal_set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 last_sign_in_at = 12;
  void clear_last_sign_in_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_sign_in_at() const;
  void set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_sign_in_at() const;
  void _internal_set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool active = 19;
  void clear_active();
  bool active() const;
  void set_active(bool value);
  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);
  public:

  // bool is_admin = 20;
  void clear_is_admin();
  bool is_admin() const;
  void set_is_admin(bool value);
  private:
  bool _internal_is_admin() const;
  void _internal_set_is_admin(bool value);
  public:

  // uint32 created_at = 22;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 23;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PUser)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PChannelsInUser > channels_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PActivitiesInUser > activities_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PAttachmentsInUser > attachments_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr email_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr encrypted_password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reset_password_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr first_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr current_sign_in_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_sign_in_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr auth_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr locale_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gravatar_hash_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr username_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr regstatus_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_url_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_password_sent_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 remember_created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 signin_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 current_sign_in_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_sign_in_at_;
  bool active_;
  bool is_admin_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser) */ {
 public:
  PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser();
  virtual ~PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser();

  PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser(const PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser& from);
  PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser(PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser&& from) noexcept
    : PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser() {
    *this = ::std::move(from);
  }

  inline PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser& operator=(const PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser& from) {
    CopyFrom(from);
    return *this;
  }
  inline PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser& operator=(PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser* internal_default_instance() {
    return reinterpret_cast<const PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser*>(
               &_PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser& a, PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser& b) {
    a.Swap(&b);
  }
  inline void Swap(PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser* New() const final {
    return CreateMaybeMessage<PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser>(nullptr);
  }

  PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser& from);
  void MergeFrom(const PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileFileNameFieldNumber = 2,
    kFileContentTypeFieldNumber = 3,
    kIdFieldNumber = 1,
    kFileFileSizeFieldNumber = 4,
    kMessageIdFieldNumber = 5,
    kFileUpdatedAtFieldNumber = 6,
    kCreatedAtFieldNumber = 7,
    kUpdatedAtFieldNumber = 8,
    kUserIdFieldNumber = 9,
    kChannelIdFieldNumber = 10,
  };
  // string file_file_name = 2;
  void clear_file_file_name();
  const std::string& file_file_name() const;
  void set_file_file_name(const std::string& value);
  void set_file_file_name(std::string&& value);
  void set_file_file_name(const char* value);
  void set_file_file_name(const char* value, size_t size);
  std::string* mutable_file_file_name();
  std::string* release_file_file_name();
  void set_allocated_file_file_name(std::string* file_file_name);
  private:
  const std::string& _internal_file_file_name() const;
  void _internal_set_file_file_name(const std::string& value);
  std::string* _internal_mutable_file_file_name();
  public:

  // string file_content_type = 3;
  void clear_file_content_type();
  const std::string& file_content_type() const;
  void set_file_content_type(const std::string& value);
  void set_file_content_type(std::string&& value);
  void set_file_content_type(const char* value);
  void set_file_content_type(const char* value, size_t size);
  std::string* mutable_file_content_type();
  std::string* release_file_content_type();
  void set_allocated_file_content_type(std::string* file_content_type);
  private:
  const std::string& _internal_file_content_type() const;
  void _internal_set_file_content_type(const std::string& value);
  std::string* _internal_mutable_file_content_type();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_file_size = 4;
  void clear_file_file_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size() const;
  void set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_file_size() const;
  void _internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 message_id = 5;
  void clear_message_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id() const;
  void set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_message_id() const;
  void _internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_updated_at = 6;
  void clear_file_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at() const;
  void set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_updated_at() const;
  void _internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 7;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 8;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 9;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 10;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_file_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_content_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PChannel_PActivitiesInChannel_PUserInActivity :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity) */ {
 public:
  PChannel_PActivitiesInChannel_PUserInActivity();
  virtual ~PChannel_PActivitiesInChannel_PUserInActivity();

  PChannel_PActivitiesInChannel_PUserInActivity(const PChannel_PActivitiesInChannel_PUserInActivity& from);
  PChannel_PActivitiesInChannel_PUserInActivity(PChannel_PActivitiesInChannel_PUserInActivity&& from) noexcept
    : PChannel_PActivitiesInChannel_PUserInActivity() {
    *this = ::std::move(from);
  }

  inline PChannel_PActivitiesInChannel_PUserInActivity& operator=(const PChannel_PActivitiesInChannel_PUserInActivity& from) {
    CopyFrom(from);
    return *this;
  }
  inline PChannel_PActivitiesInChannel_PUserInActivity& operator=(PChannel_PActivitiesInChannel_PUserInActivity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PChannel_PActivitiesInChannel_PUserInActivity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PChannel_PActivitiesInChannel_PUserInActivity* internal_default_instance() {
    return reinterpret_cast<const PChannel_PActivitiesInChannel_PUserInActivity*>(
               &_PChannel_PActivitiesInChannel_PUserInActivity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(PChannel_PActivitiesInChannel_PUserInActivity& a, PChannel_PActivitiesInChannel_PUserInActivity& b) {
    a.Swap(&b);
  }
  inline void Swap(PChannel_PActivitiesInChannel_PUserInActivity* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PChannel_PActivitiesInChannel_PUserInActivity* New() const final {
    return CreateMaybeMessage<PChannel_PActivitiesInChannel_PUserInActivity>(nullptr);
  }

  PChannel_PActivitiesInChannel_PUserInActivity* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PChannel_PActivitiesInChannel_PUserInActivity>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PChannel_PActivitiesInChannel_PUserInActivity& from);
  void MergeFrom(const PChannel_PActivitiesInChannel_PUserInActivity& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PChannel_PActivitiesInChannel_PUserInActivity* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PChannel.PActivitiesInChannel.PUserInActivity";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser PAttachmentsInUser;

  // accessors -------------------------------------------------------

  enum : int {
    kAttachmentsFieldNumber = 24,
    kEmailFieldNumber = 2,
    kEncryptedPasswordFieldNumber = 3,
    kResetPasswordTokenFieldNumber = 4,
    kFirstNameFieldNumber = 7,
    kLastNameFieldNumber = 8,
    kCurrentSignInIpFieldNumber = 11,
    kLastSignInIpFieldNumber = 13,
    kAuthTokenFieldNumber = 14,
    kLocaleFieldNumber = 15,
    kGravatarHashFieldNumber = 16,
    kUsernameFieldNumber = 17,
    kRegstatusFieldNumber = 18,
    kAvatarUrlFieldNumber = 21,
    kIdFieldNumber = 1,
    kResetPasswordSentAtFieldNumber = 5,
    kRememberCreatedAtFieldNumber = 6,
    kSigninCountFieldNumber = 9,
    kCurrentSignInAtFieldNumber = 10,
    kLastSignInAtFieldNumber = 12,
    kActiveFieldNumber = 19,
    kIsAdminFieldNumber = 20,
    kCreatedAtFieldNumber = 22,
    kUpdatedAtFieldNumber = 23,
  };
  // repeated .kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser attachments = 24;
  int attachments_size() const;
  private:
  int _internal_attachments_size() const;
  public:
  void clear_attachments();
  ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser* mutable_attachments(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser >*
      mutable_attachments();
  private:
  const ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser& _internal_attachments(int index) const;
  ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser* _internal_add_attachments();
  public:
  const ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser& attachments(int index) const;
  ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser* add_attachments();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser >&
      attachments() const;

  // string email = 2;
  void clear_email();
  const std::string& email() const;
  void set_email(const std::string& value);
  void set_email(std::string&& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  std::string* mutable_email();
  std::string* release_email();
  void set_allocated_email(std::string* email);
  private:
  const std::string& _internal_email() const;
  void _internal_set_email(const std::string& value);
  std::string* _internal_mutable_email();
  public:

  // string encrypted_password = 3;
  void clear_encrypted_password();
  const std::string& encrypted_password() const;
  void set_encrypted_password(const std::string& value);
  void set_encrypted_password(std::string&& value);
  void set_encrypted_password(const char* value);
  void set_encrypted_password(const char* value, size_t size);
  std::string* mutable_encrypted_password();
  std::string* release_encrypted_password();
  void set_allocated_encrypted_password(std::string* encrypted_password);
  private:
  const std::string& _internal_encrypted_password() const;
  void _internal_set_encrypted_password(const std::string& value);
  std::string* _internal_mutable_encrypted_password();
  public:

  // string reset_password_token = 4;
  void clear_reset_password_token();
  const std::string& reset_password_token() const;
  void set_reset_password_token(const std::string& value);
  void set_reset_password_token(std::string&& value);
  void set_reset_password_token(const char* value);
  void set_reset_password_token(const char* value, size_t size);
  std::string* mutable_reset_password_token();
  std::string* release_reset_password_token();
  void set_allocated_reset_password_token(std::string* reset_password_token);
  private:
  const std::string& _internal_reset_password_token() const;
  void _internal_set_reset_password_token(const std::string& value);
  std::string* _internal_mutable_reset_password_token();
  public:

  // string first_name = 7;
  void clear_first_name();
  const std::string& first_name() const;
  void set_first_name(const std::string& value);
  void set_first_name(std::string&& value);
  void set_first_name(const char* value);
  void set_first_name(const char* value, size_t size);
  std::string* mutable_first_name();
  std::string* release_first_name();
  void set_allocated_first_name(std::string* first_name);
  private:
  const std::string& _internal_first_name() const;
  void _internal_set_first_name(const std::string& value);
  std::string* _internal_mutable_first_name();
  public:

  // string last_name = 8;
  void clear_last_name();
  const std::string& last_name() const;
  void set_last_name(const std::string& value);
  void set_last_name(std::string&& value);
  void set_last_name(const char* value);
  void set_last_name(const char* value, size_t size);
  std::string* mutable_last_name();
  std::string* release_last_name();
  void set_allocated_last_name(std::string* last_name);
  private:
  const std::string& _internal_last_name() const;
  void _internal_set_last_name(const std::string& value);
  std::string* _internal_mutable_last_name();
  public:

  // string current_sign_in_ip = 11;
  void clear_current_sign_in_ip();
  const std::string& current_sign_in_ip() const;
  void set_current_sign_in_ip(const std::string& value);
  void set_current_sign_in_ip(std::string&& value);
  void set_current_sign_in_ip(const char* value);
  void set_current_sign_in_ip(const char* value, size_t size);
  std::string* mutable_current_sign_in_ip();
  std::string* release_current_sign_in_ip();
  void set_allocated_current_sign_in_ip(std::string* current_sign_in_ip);
  private:
  const std::string& _internal_current_sign_in_ip() const;
  void _internal_set_current_sign_in_ip(const std::string& value);
  std::string* _internal_mutable_current_sign_in_ip();
  public:

  // string last_sign_in_ip = 13;
  void clear_last_sign_in_ip();
  const std::string& last_sign_in_ip() const;
  void set_last_sign_in_ip(const std::string& value);
  void set_last_sign_in_ip(std::string&& value);
  void set_last_sign_in_ip(const char* value);
  void set_last_sign_in_ip(const char* value, size_t size);
  std::string* mutable_last_sign_in_ip();
  std::string* release_last_sign_in_ip();
  void set_allocated_last_sign_in_ip(std::string* last_sign_in_ip);
  private:
  const std::string& _internal_last_sign_in_ip() const;
  void _internal_set_last_sign_in_ip(const std::string& value);
  std::string* _internal_mutable_last_sign_in_ip();
  public:

  // string auth_token = 14;
  void clear_auth_token();
  const std::string& auth_token() const;
  void set_auth_token(const std::string& value);
  void set_auth_token(std::string&& value);
  void set_auth_token(const char* value);
  void set_auth_token(const char* value, size_t size);
  std::string* mutable_auth_token();
  std::string* release_auth_token();
  void set_allocated_auth_token(std::string* auth_token);
  private:
  const std::string& _internal_auth_token() const;
  void _internal_set_auth_token(const std::string& value);
  std::string* _internal_mutable_auth_token();
  public:

  // string locale = 15;
  void clear_locale();
  const std::string& locale() const;
  void set_locale(const std::string& value);
  void set_locale(std::string&& value);
  void set_locale(const char* value);
  void set_locale(const char* value, size_t size);
  std::string* mutable_locale();
  std::string* release_locale();
  void set_allocated_locale(std::string* locale);
  private:
  const std::string& _internal_locale() const;
  void _internal_set_locale(const std::string& value);
  std::string* _internal_mutable_locale();
  public:

  // string gravatar_hash = 16;
  void clear_gravatar_hash();
  const std::string& gravatar_hash() const;
  void set_gravatar_hash(const std::string& value);
  void set_gravatar_hash(std::string&& value);
  void set_gravatar_hash(const char* value);
  void set_gravatar_hash(const char* value, size_t size);
  std::string* mutable_gravatar_hash();
  std::string* release_gravatar_hash();
  void set_allocated_gravatar_hash(std::string* gravatar_hash);
  private:
  const std::string& _internal_gravatar_hash() const;
  void _internal_set_gravatar_hash(const std::string& value);
  std::string* _internal_mutable_gravatar_hash();
  public:

  // string username = 17;
  void clear_username();
  const std::string& username() const;
  void set_username(const std::string& value);
  void set_username(std::string&& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  std::string* mutable_username();
  std::string* release_username();
  void set_allocated_username(std::string* username);
  private:
  const std::string& _internal_username() const;
  void _internal_set_username(const std::string& value);
  std::string* _internal_mutable_username();
  public:

  // string regstatus = 18;
  void clear_regstatus();
  const std::string& regstatus() const;
  void set_regstatus(const std::string& value);
  void set_regstatus(std::string&& value);
  void set_regstatus(const char* value);
  void set_regstatus(const char* value, size_t size);
  std::string* mutable_regstatus();
  std::string* release_regstatus();
  void set_allocated_regstatus(std::string* regstatus);
  private:
  const std::string& _internal_regstatus() const;
  void _internal_set_regstatus(const std::string& value);
  std::string* _internal_mutable_regstatus();
  public:

  // string avatar_url = 21;
  void clear_avatar_url();
  const std::string& avatar_url() const;
  void set_avatar_url(const std::string& value);
  void set_avatar_url(std::string&& value);
  void set_avatar_url(const char* value);
  void set_avatar_url(const char* value, size_t size);
  std::string* mutable_avatar_url();
  std::string* release_avatar_url();
  void set_allocated_avatar_url(std::string* avatar_url);
  private:
  const std::string& _internal_avatar_url() const;
  void _internal_set_avatar_url(const std::string& value);
  std::string* _internal_mutable_avatar_url();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 reset_password_sent_at = 5;
  void clear_reset_password_sent_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_password_sent_at() const;
  void set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reset_password_sent_at() const;
  void _internal_set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 remember_created_at = 6;
  void clear_remember_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 remember_created_at() const;
  void set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_remember_created_at() const;
  void _internal_set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 signin_count = 9;
  void clear_signin_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 signin_count() const;
  void set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_signin_count() const;
  void _internal_set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 current_sign_in_at = 10;
  void clear_current_sign_in_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 current_sign_in_at() const;
  void set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_current_sign_in_at() const;
  void _internal_set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 last_sign_in_at = 12;
  void clear_last_sign_in_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_sign_in_at() const;
  void set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_sign_in_at() const;
  void _internal_set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool active = 19;
  void clear_active();
  bool active() const;
  void set_active(bool value);
  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);
  public:

  // bool is_admin = 20;
  void clear_is_admin();
  bool is_admin() const;
  void set_is_admin(bool value);
  private:
  bool _internal_is_admin() const;
  void _internal_set_is_admin(bool value);
  public:

  // uint32 created_at = 22;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 23;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser > attachments_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr email_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr encrypted_password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reset_password_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr first_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr current_sign_in_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_sign_in_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr auth_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr locale_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gravatar_hash_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr username_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr regstatus_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_url_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_password_sent_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 remember_created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 signin_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 current_sign_in_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_sign_in_at_;
  bool active_;
  bool is_admin_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PChannel_PActivitiesInChannel :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PChannel.PActivitiesInChannel) */ {
 public:
  PChannel_PActivitiesInChannel();
  virtual ~PChannel_PActivitiesInChannel();

  PChannel_PActivitiesInChannel(const PChannel_PActivitiesInChannel& from);
  PChannel_PActivitiesInChannel(PChannel_PActivitiesInChannel&& from) noexcept
    : PChannel_PActivitiesInChannel() {
    *this = ::std::move(from);
  }

  inline PChannel_PActivitiesInChannel& operator=(const PChannel_PActivitiesInChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline PChannel_PActivitiesInChannel& operator=(PChannel_PActivitiesInChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PChannel_PActivitiesInChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PChannel_PActivitiesInChannel* internal_default_instance() {
    return reinterpret_cast<const PChannel_PActivitiesInChannel*>(
               &_PChannel_PActivitiesInChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(PChannel_PActivitiesInChannel& a, PChannel_PActivitiesInChannel& b) {
    a.Swap(&b);
  }
  inline void Swap(PChannel_PActivitiesInChannel* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PChannel_PActivitiesInChannel* New() const final {
    return CreateMaybeMessage<PChannel_PActivitiesInChannel>(nullptr);
  }

  PChannel_PActivitiesInChannel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PChannel_PActivitiesInChannel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PChannel_PActivitiesInChannel& from);
  void MergeFrom(const PChannel_PActivitiesInChannel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PChannel_PActivitiesInChannel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PChannel.PActivitiesInChannel";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PChannel_PActivitiesInChannel_PUserInActivity PUserInActivity;

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 4,
    kContentFieldNumber = 5,
    kUserFieldNumber = 8,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 2,
    kUpdatedAtFieldNumber = 3,
    kChannelIdFieldNumber = 6,
    kUserIdFieldNumber = 7,
  };
  // string action = 4;
  void clear_action();
  const std::string& action() const;
  void set_action(const std::string& value);
  void set_action(std::string&& value);
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  std::string* mutable_action();
  std::string* release_action();
  void set_allocated_action(std::string* action);
  private:
  const std::string& _internal_action() const;
  void _internal_set_action(const std::string& value);
  std::string* _internal_mutable_action();
  public:

  // string content = 5;
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // .kandan_small.PChannel.PActivitiesInChannel.PUserInActivity user = 8;
  bool has_user() const;
  private:
  bool _internal_has_user() const;
  public:
  void clear_user();
  const ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity& user() const;
  ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity* release_user();
  ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity* mutable_user();
  void set_allocated_user(::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity* user);
  private:
  const ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity& _internal_user() const;
  ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity* _internal_mutable_user();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 2;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 3;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 6;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 7;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PChannel.PActivitiesInChannel)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr action_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity* user_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PChannel_PUserInChannel_PActivitiesInUser :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PChannel.PUserInChannel.PActivitiesInUser) */ {
 public:
  PChannel_PUserInChannel_PActivitiesInUser();
  virtual ~PChannel_PUserInChannel_PActivitiesInUser();

  PChannel_PUserInChannel_PActivitiesInUser(const PChannel_PUserInChannel_PActivitiesInUser& from);
  PChannel_PUserInChannel_PActivitiesInUser(PChannel_PUserInChannel_PActivitiesInUser&& from) noexcept
    : PChannel_PUserInChannel_PActivitiesInUser() {
    *this = ::std::move(from);
  }

  inline PChannel_PUserInChannel_PActivitiesInUser& operator=(const PChannel_PUserInChannel_PActivitiesInUser& from) {
    CopyFrom(from);
    return *this;
  }
  inline PChannel_PUserInChannel_PActivitiesInUser& operator=(PChannel_PUserInChannel_PActivitiesInUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PChannel_PUserInChannel_PActivitiesInUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PChannel_PUserInChannel_PActivitiesInUser* internal_default_instance() {
    return reinterpret_cast<const PChannel_PUserInChannel_PActivitiesInUser*>(
               &_PChannel_PUserInChannel_PActivitiesInUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(PChannel_PUserInChannel_PActivitiesInUser& a, PChannel_PUserInChannel_PActivitiesInUser& b) {
    a.Swap(&b);
  }
  inline void Swap(PChannel_PUserInChannel_PActivitiesInUser* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PChannel_PUserInChannel_PActivitiesInUser* New() const final {
    return CreateMaybeMessage<PChannel_PUserInChannel_PActivitiesInUser>(nullptr);
  }

  PChannel_PUserInChannel_PActivitiesInUser* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PChannel_PUserInChannel_PActivitiesInUser>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PChannel_PUserInChannel_PActivitiesInUser& from);
  void MergeFrom(const PChannel_PUserInChannel_PActivitiesInUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PChannel_PUserInChannel_PActivitiesInUser* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PChannel.PUserInChannel.PActivitiesInUser";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 4,
    kContentFieldNumber = 5,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 2,
    kUpdatedAtFieldNumber = 3,
    kChannelIdFieldNumber = 6,
    kUserIdFieldNumber = 7,
  };
  // string action = 4;
  void clear_action();
  const std::string& action() const;
  void set_action(const std::string& value);
  void set_action(std::string&& value);
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  std::string* mutable_action();
  std::string* release_action();
  void set_allocated_action(std::string* action);
  private:
  const std::string& _internal_action() const;
  void _internal_set_action(const std::string& value);
  std::string* _internal_mutable_action();
  public:

  // string content = 5;
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 2;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 3;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 6;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 7;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PChannel.PUserInChannel.PActivitiesInUser)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr action_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PChannel_PUserInChannel_PAttachmentsInUser :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser) */ {
 public:
  PChannel_PUserInChannel_PAttachmentsInUser();
  virtual ~PChannel_PUserInChannel_PAttachmentsInUser();

  PChannel_PUserInChannel_PAttachmentsInUser(const PChannel_PUserInChannel_PAttachmentsInUser& from);
  PChannel_PUserInChannel_PAttachmentsInUser(PChannel_PUserInChannel_PAttachmentsInUser&& from) noexcept
    : PChannel_PUserInChannel_PAttachmentsInUser() {
    *this = ::std::move(from);
  }

  inline PChannel_PUserInChannel_PAttachmentsInUser& operator=(const PChannel_PUserInChannel_PAttachmentsInUser& from) {
    CopyFrom(from);
    return *this;
  }
  inline PChannel_PUserInChannel_PAttachmentsInUser& operator=(PChannel_PUserInChannel_PAttachmentsInUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PChannel_PUserInChannel_PAttachmentsInUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PChannel_PUserInChannel_PAttachmentsInUser* internal_default_instance() {
    return reinterpret_cast<const PChannel_PUserInChannel_PAttachmentsInUser*>(
               &_PChannel_PUserInChannel_PAttachmentsInUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(PChannel_PUserInChannel_PAttachmentsInUser& a, PChannel_PUserInChannel_PAttachmentsInUser& b) {
    a.Swap(&b);
  }
  inline void Swap(PChannel_PUserInChannel_PAttachmentsInUser* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PChannel_PUserInChannel_PAttachmentsInUser* New() const final {
    return CreateMaybeMessage<PChannel_PUserInChannel_PAttachmentsInUser>(nullptr);
  }

  PChannel_PUserInChannel_PAttachmentsInUser* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PChannel_PUserInChannel_PAttachmentsInUser>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PChannel_PUserInChannel_PAttachmentsInUser& from);
  void MergeFrom(const PChannel_PUserInChannel_PAttachmentsInUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PChannel_PUserInChannel_PAttachmentsInUser* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PChannel.PUserInChannel.PAttachmentsInUser";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileFileNameFieldNumber = 2,
    kFileContentTypeFieldNumber = 3,
    kIdFieldNumber = 1,
    kFileFileSizeFieldNumber = 4,
    kMessageIdFieldNumber = 5,
    kFileUpdatedAtFieldNumber = 6,
    kCreatedAtFieldNumber = 7,
    kUpdatedAtFieldNumber = 8,
    kUserIdFieldNumber = 9,
    kChannelIdFieldNumber = 10,
  };
  // string file_file_name = 2;
  void clear_file_file_name();
  const std::string& file_file_name() const;
  void set_file_file_name(const std::string& value);
  void set_file_file_name(std::string&& value);
  void set_file_file_name(const char* value);
  void set_file_file_name(const char* value, size_t size);
  std::string* mutable_file_file_name();
  std::string* release_file_file_name();
  void set_allocated_file_file_name(std::string* file_file_name);
  private:
  const std::string& _internal_file_file_name() const;
  void _internal_set_file_file_name(const std::string& value);
  std::string* _internal_mutable_file_file_name();
  public:

  // string file_content_type = 3;
  void clear_file_content_type();
  const std::string& file_content_type() const;
  void set_file_content_type(const std::string& value);
  void set_file_content_type(std::string&& value);
  void set_file_content_type(const char* value);
  void set_file_content_type(const char* value, size_t size);
  std::string* mutable_file_content_type();
  std::string* release_file_content_type();
  void set_allocated_file_content_type(std::string* file_content_type);
  private:
  const std::string& _internal_file_content_type() const;
  void _internal_set_file_content_type(const std::string& value);
  std::string* _internal_mutable_file_content_type();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_file_size = 4;
  void clear_file_file_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size() const;
  void set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_file_size() const;
  void _internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 message_id = 5;
  void clear_message_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id() const;
  void set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_message_id() const;
  void _internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_updated_at = 6;
  void clear_file_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at() const;
  void set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_updated_at() const;
  void _internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 7;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 8;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 9;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 10;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_file_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_content_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PChannel_PUserInChannel :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PChannel.PUserInChannel) */ {
 public:
  PChannel_PUserInChannel();
  virtual ~PChannel_PUserInChannel();

  PChannel_PUserInChannel(const PChannel_PUserInChannel& from);
  PChannel_PUserInChannel(PChannel_PUserInChannel&& from) noexcept
    : PChannel_PUserInChannel() {
    *this = ::std::move(from);
  }

  inline PChannel_PUserInChannel& operator=(const PChannel_PUserInChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline PChannel_PUserInChannel& operator=(PChannel_PUserInChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PChannel_PUserInChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PChannel_PUserInChannel* internal_default_instance() {
    return reinterpret_cast<const PChannel_PUserInChannel*>(
               &_PChannel_PUserInChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(PChannel_PUserInChannel& a, PChannel_PUserInChannel& b) {
    a.Swap(&b);
  }
  inline void Swap(PChannel_PUserInChannel* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PChannel_PUserInChannel* New() const final {
    return CreateMaybeMessage<PChannel_PUserInChannel>(nullptr);
  }

  PChannel_PUserInChannel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PChannel_PUserInChannel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PChannel_PUserInChannel& from);
  void MergeFrom(const PChannel_PUserInChannel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PChannel_PUserInChannel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PChannel.PUserInChannel";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PChannel_PUserInChannel_PActivitiesInUser PActivitiesInUser;
  typedef PChannel_PUserInChannel_PAttachmentsInUser PAttachmentsInUser;

  // accessors -------------------------------------------------------

  enum : int {
    kActivitiesFieldNumber = 24,
    kAttachmentsFieldNumber = 25,
    kEmailFieldNumber = 2,
    kEncryptedPasswordFieldNumber = 3,
    kResetPasswordTokenFieldNumber = 4,
    kFirstNameFieldNumber = 7,
    kLastNameFieldNumber = 8,
    kCurrentSignInIpFieldNumber = 11,
    kLastSignInIpFieldNumber = 13,
    kAuthTokenFieldNumber = 14,
    kLocaleFieldNumber = 15,
    kGravatarHashFieldNumber = 16,
    kUsernameFieldNumber = 17,
    kRegstatusFieldNumber = 18,
    kAvatarUrlFieldNumber = 21,
    kIdFieldNumber = 1,
    kResetPasswordSentAtFieldNumber = 5,
    kRememberCreatedAtFieldNumber = 6,
    kSigninCountFieldNumber = 9,
    kCurrentSignInAtFieldNumber = 10,
    kLastSignInAtFieldNumber = 12,
    kActiveFieldNumber = 19,
    kIsAdminFieldNumber = 20,
    kCreatedAtFieldNumber = 22,
    kUpdatedAtFieldNumber = 23,
  };
  // repeated .kandan_small.PChannel.PUserInChannel.PActivitiesInUser activities = 24;
  int activities_size() const;
  private:
  int _internal_activities_size() const;
  public:
  void clear_activities();
  ::kandan_small::PChannel_PUserInChannel_PActivitiesInUser* mutable_activities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PUserInChannel_PActivitiesInUser >*
      mutable_activities();
  private:
  const ::kandan_small::PChannel_PUserInChannel_PActivitiesInUser& _internal_activities(int index) const;
  ::kandan_small::PChannel_PUserInChannel_PActivitiesInUser* _internal_add_activities();
  public:
  const ::kandan_small::PChannel_PUserInChannel_PActivitiesInUser& activities(int index) const;
  ::kandan_small::PChannel_PUserInChannel_PActivitiesInUser* add_activities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PUserInChannel_PActivitiesInUser >&
      activities() const;

  // repeated .kandan_small.PChannel.PUserInChannel.PAttachmentsInUser attachments = 25;
  int attachments_size() const;
  private:
  int _internal_attachments_size() const;
  public:
  void clear_attachments();
  ::kandan_small::PChannel_PUserInChannel_PAttachmentsInUser* mutable_attachments(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PUserInChannel_PAttachmentsInUser >*
      mutable_attachments();
  private:
  const ::kandan_small::PChannel_PUserInChannel_PAttachmentsInUser& _internal_attachments(int index) const;
  ::kandan_small::PChannel_PUserInChannel_PAttachmentsInUser* _internal_add_attachments();
  public:
  const ::kandan_small::PChannel_PUserInChannel_PAttachmentsInUser& attachments(int index) const;
  ::kandan_small::PChannel_PUserInChannel_PAttachmentsInUser* add_attachments();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PUserInChannel_PAttachmentsInUser >&
      attachments() const;

  // string email = 2;
  void clear_email();
  const std::string& email() const;
  void set_email(const std::string& value);
  void set_email(std::string&& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  std::string* mutable_email();
  std::string* release_email();
  void set_allocated_email(std::string* email);
  private:
  const std::string& _internal_email() const;
  void _internal_set_email(const std::string& value);
  std::string* _internal_mutable_email();
  public:

  // string encrypted_password = 3;
  void clear_encrypted_password();
  const std::string& encrypted_password() const;
  void set_encrypted_password(const std::string& value);
  void set_encrypted_password(std::string&& value);
  void set_encrypted_password(const char* value);
  void set_encrypted_password(const char* value, size_t size);
  std::string* mutable_encrypted_password();
  std::string* release_encrypted_password();
  void set_allocated_encrypted_password(std::string* encrypted_password);
  private:
  const std::string& _internal_encrypted_password() const;
  void _internal_set_encrypted_password(const std::string& value);
  std::string* _internal_mutable_encrypted_password();
  public:

  // string reset_password_token = 4;
  void clear_reset_password_token();
  const std::string& reset_password_token() const;
  void set_reset_password_token(const std::string& value);
  void set_reset_password_token(std::string&& value);
  void set_reset_password_token(const char* value);
  void set_reset_password_token(const char* value, size_t size);
  std::string* mutable_reset_password_token();
  std::string* release_reset_password_token();
  void set_allocated_reset_password_token(std::string* reset_password_token);
  private:
  const std::string& _internal_reset_password_token() const;
  void _internal_set_reset_password_token(const std::string& value);
  std::string* _internal_mutable_reset_password_token();
  public:

  // string first_name = 7;
  void clear_first_name();
  const std::string& first_name() const;
  void set_first_name(const std::string& value);
  void set_first_name(std::string&& value);
  void set_first_name(const char* value);
  void set_first_name(const char* value, size_t size);
  std::string* mutable_first_name();
  std::string* release_first_name();
  void set_allocated_first_name(std::string* first_name);
  private:
  const std::string& _internal_first_name() const;
  void _internal_set_first_name(const std::string& value);
  std::string* _internal_mutable_first_name();
  public:

  // string last_name = 8;
  void clear_last_name();
  const std::string& last_name() const;
  void set_last_name(const std::string& value);
  void set_last_name(std::string&& value);
  void set_last_name(const char* value);
  void set_last_name(const char* value, size_t size);
  std::string* mutable_last_name();
  std::string* release_last_name();
  void set_allocated_last_name(std::string* last_name);
  private:
  const std::string& _internal_last_name() const;
  void _internal_set_last_name(const std::string& value);
  std::string* _internal_mutable_last_name();
  public:

  // string current_sign_in_ip = 11;
  void clear_current_sign_in_ip();
  const std::string& current_sign_in_ip() const;
  void set_current_sign_in_ip(const std::string& value);
  void set_current_sign_in_ip(std::string&& value);
  void set_current_sign_in_ip(const char* value);
  void set_current_sign_in_ip(const char* value, size_t size);
  std::string* mutable_current_sign_in_ip();
  std::string* release_current_sign_in_ip();
  void set_allocated_current_sign_in_ip(std::string* current_sign_in_ip);
  private:
  const std::string& _internal_current_sign_in_ip() const;
  void _internal_set_current_sign_in_ip(const std::string& value);
  std::string* _internal_mutable_current_sign_in_ip();
  public:

  // string last_sign_in_ip = 13;
  void clear_last_sign_in_ip();
  const std::string& last_sign_in_ip() const;
  void set_last_sign_in_ip(const std::string& value);
  void set_last_sign_in_ip(std::string&& value);
  void set_last_sign_in_ip(const char* value);
  void set_last_sign_in_ip(const char* value, size_t size);
  std::string* mutable_last_sign_in_ip();
  std::string* release_last_sign_in_ip();
  void set_allocated_last_sign_in_ip(std::string* last_sign_in_ip);
  private:
  const std::string& _internal_last_sign_in_ip() const;
  void _internal_set_last_sign_in_ip(const std::string& value);
  std::string* _internal_mutable_last_sign_in_ip();
  public:

  // string auth_token = 14;
  void clear_auth_token();
  const std::string& auth_token() const;
  void set_auth_token(const std::string& value);
  void set_auth_token(std::string&& value);
  void set_auth_token(const char* value);
  void set_auth_token(const char* value, size_t size);
  std::string* mutable_auth_token();
  std::string* release_auth_token();
  void set_allocated_auth_token(std::string* auth_token);
  private:
  const std::string& _internal_auth_token() const;
  void _internal_set_auth_token(const std::string& value);
  std::string* _internal_mutable_auth_token();
  public:

  // string locale = 15;
  void clear_locale();
  const std::string& locale() const;
  void set_locale(const std::string& value);
  void set_locale(std::string&& value);
  void set_locale(const char* value);
  void set_locale(const char* value, size_t size);
  std::string* mutable_locale();
  std::string* release_locale();
  void set_allocated_locale(std::string* locale);
  private:
  const std::string& _internal_locale() const;
  void _internal_set_locale(const std::string& value);
  std::string* _internal_mutable_locale();
  public:

  // string gravatar_hash = 16;
  void clear_gravatar_hash();
  const std::string& gravatar_hash() const;
  void set_gravatar_hash(const std::string& value);
  void set_gravatar_hash(std::string&& value);
  void set_gravatar_hash(const char* value);
  void set_gravatar_hash(const char* value, size_t size);
  std::string* mutable_gravatar_hash();
  std::string* release_gravatar_hash();
  void set_allocated_gravatar_hash(std::string* gravatar_hash);
  private:
  const std::string& _internal_gravatar_hash() const;
  void _internal_set_gravatar_hash(const std::string& value);
  std::string* _internal_mutable_gravatar_hash();
  public:

  // string username = 17;
  void clear_username();
  const std::string& username() const;
  void set_username(const std::string& value);
  void set_username(std::string&& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  std::string* mutable_username();
  std::string* release_username();
  void set_allocated_username(std::string* username);
  private:
  const std::string& _internal_username() const;
  void _internal_set_username(const std::string& value);
  std::string* _internal_mutable_username();
  public:

  // string regstatus = 18;
  void clear_regstatus();
  const std::string& regstatus() const;
  void set_regstatus(const std::string& value);
  void set_regstatus(std::string&& value);
  void set_regstatus(const char* value);
  void set_regstatus(const char* value, size_t size);
  std::string* mutable_regstatus();
  std::string* release_regstatus();
  void set_allocated_regstatus(std::string* regstatus);
  private:
  const std::string& _internal_regstatus() const;
  void _internal_set_regstatus(const std::string& value);
  std::string* _internal_mutable_regstatus();
  public:

  // string avatar_url = 21;
  void clear_avatar_url();
  const std::string& avatar_url() const;
  void set_avatar_url(const std::string& value);
  void set_avatar_url(std::string&& value);
  void set_avatar_url(const char* value);
  void set_avatar_url(const char* value, size_t size);
  std::string* mutable_avatar_url();
  std::string* release_avatar_url();
  void set_allocated_avatar_url(std::string* avatar_url);
  private:
  const std::string& _internal_avatar_url() const;
  void _internal_set_avatar_url(const std::string& value);
  std::string* _internal_mutable_avatar_url();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 reset_password_sent_at = 5;
  void clear_reset_password_sent_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_password_sent_at() const;
  void set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reset_password_sent_at() const;
  void _internal_set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 remember_created_at = 6;
  void clear_remember_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 remember_created_at() const;
  void set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_remember_created_at() const;
  void _internal_set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 signin_count = 9;
  void clear_signin_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 signin_count() const;
  void set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_signin_count() const;
  void _internal_set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 current_sign_in_at = 10;
  void clear_current_sign_in_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 current_sign_in_at() const;
  void set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_current_sign_in_at() const;
  void _internal_set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 last_sign_in_at = 12;
  void clear_last_sign_in_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_sign_in_at() const;
  void set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_sign_in_at() const;
  void _internal_set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool active = 19;
  void clear_active();
  bool active() const;
  void set_active(bool value);
  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);
  public:

  // bool is_admin = 20;
  void clear_is_admin();
  bool is_admin() const;
  void set_is_admin(bool value);
  private:
  bool _internal_is_admin() const;
  void _internal_set_is_admin(bool value);
  public:

  // uint32 created_at = 22;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 23;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PChannel.PUserInChannel)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PUserInChannel_PActivitiesInUser > activities_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PUserInChannel_PAttachmentsInUser > attachments_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr email_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr encrypted_password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reset_password_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr first_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr current_sign_in_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_sign_in_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr auth_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr locale_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gravatar_hash_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr username_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr regstatus_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_url_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_password_sent_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 remember_created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 signin_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 current_sign_in_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_sign_in_at_;
  bool active_;
  bool is_admin_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser) */ {
 public:
  PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser();
  virtual ~PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser();

  PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser(const PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser& from);
  PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser(PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser&& from) noexcept
    : PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser() {
    *this = ::std::move(from);
  }

  inline PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser& operator=(const PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser& from) {
    CopyFrom(from);
    return *this;
  }
  inline PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser& operator=(PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser* internal_default_instance() {
    return reinterpret_cast<const PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser*>(
               &_PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser& a, PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser& b) {
    a.Swap(&b);
  }
  inline void Swap(PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser* New() const final {
    return CreateMaybeMessage<PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser>(nullptr);
  }

  PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser& from);
  void MergeFrom(const PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 4,
    kContentFieldNumber = 5,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 2,
    kUpdatedAtFieldNumber = 3,
    kChannelIdFieldNumber = 6,
    kUserIdFieldNumber = 7,
  };
  // string action = 4;
  void clear_action();
  const std::string& action() const;
  void set_action(const std::string& value);
  void set_action(std::string&& value);
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  std::string* mutable_action();
  std::string* release_action();
  void set_allocated_action(std::string* action);
  private:
  const std::string& _internal_action() const;
  void _internal_set_action(const std::string& value);
  std::string* _internal_mutable_action();
  public:

  // string content = 5;
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 2;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 3;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 6;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 7;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr action_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PChannel_PAttachmentsInChannel_PUserInAttachment :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment) */ {
 public:
  PChannel_PAttachmentsInChannel_PUserInAttachment();
  virtual ~PChannel_PAttachmentsInChannel_PUserInAttachment();

  PChannel_PAttachmentsInChannel_PUserInAttachment(const PChannel_PAttachmentsInChannel_PUserInAttachment& from);
  PChannel_PAttachmentsInChannel_PUserInAttachment(PChannel_PAttachmentsInChannel_PUserInAttachment&& from) noexcept
    : PChannel_PAttachmentsInChannel_PUserInAttachment() {
    *this = ::std::move(from);
  }

  inline PChannel_PAttachmentsInChannel_PUserInAttachment& operator=(const PChannel_PAttachmentsInChannel_PUserInAttachment& from) {
    CopyFrom(from);
    return *this;
  }
  inline PChannel_PAttachmentsInChannel_PUserInAttachment& operator=(PChannel_PAttachmentsInChannel_PUserInAttachment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PChannel_PAttachmentsInChannel_PUserInAttachment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PChannel_PAttachmentsInChannel_PUserInAttachment* internal_default_instance() {
    return reinterpret_cast<const PChannel_PAttachmentsInChannel_PUserInAttachment*>(
               &_PChannel_PAttachmentsInChannel_PUserInAttachment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(PChannel_PAttachmentsInChannel_PUserInAttachment& a, PChannel_PAttachmentsInChannel_PUserInAttachment& b) {
    a.Swap(&b);
  }
  inline void Swap(PChannel_PAttachmentsInChannel_PUserInAttachment* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PChannel_PAttachmentsInChannel_PUserInAttachment* New() const final {
    return CreateMaybeMessage<PChannel_PAttachmentsInChannel_PUserInAttachment>(nullptr);
  }

  PChannel_PAttachmentsInChannel_PUserInAttachment* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PChannel_PAttachmentsInChannel_PUserInAttachment>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PChannel_PAttachmentsInChannel_PUserInAttachment& from);
  void MergeFrom(const PChannel_PAttachmentsInChannel_PUserInAttachment& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PChannel_PAttachmentsInChannel_PUserInAttachment* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser PActivitiesInUser;

  // accessors -------------------------------------------------------

  enum : int {
    kActivitiesFieldNumber = 24,
    kEmailFieldNumber = 2,
    kEncryptedPasswordFieldNumber = 3,
    kResetPasswordTokenFieldNumber = 4,
    kFirstNameFieldNumber = 7,
    kLastNameFieldNumber = 8,
    kCurrentSignInIpFieldNumber = 11,
    kLastSignInIpFieldNumber = 13,
    kAuthTokenFieldNumber = 14,
    kLocaleFieldNumber = 15,
    kGravatarHashFieldNumber = 16,
    kUsernameFieldNumber = 17,
    kRegstatusFieldNumber = 18,
    kAvatarUrlFieldNumber = 21,
    kIdFieldNumber = 1,
    kResetPasswordSentAtFieldNumber = 5,
    kRememberCreatedAtFieldNumber = 6,
    kSigninCountFieldNumber = 9,
    kCurrentSignInAtFieldNumber = 10,
    kLastSignInAtFieldNumber = 12,
    kActiveFieldNumber = 19,
    kIsAdminFieldNumber = 20,
    kCreatedAtFieldNumber = 22,
    kUpdatedAtFieldNumber = 23,
  };
  // repeated .kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser activities = 24;
  int activities_size() const;
  private:
  int _internal_activities_size() const;
  public:
  void clear_activities();
  ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser* mutable_activities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser >*
      mutable_activities();
  private:
  const ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser& _internal_activities(int index) const;
  ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser* _internal_add_activities();
  public:
  const ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser& activities(int index) const;
  ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser* add_activities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser >&
      activities() const;

  // string email = 2;
  void clear_email();
  const std::string& email() const;
  void set_email(const std::string& value);
  void set_email(std::string&& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  std::string* mutable_email();
  std::string* release_email();
  void set_allocated_email(std::string* email);
  private:
  const std::string& _internal_email() const;
  void _internal_set_email(const std::string& value);
  std::string* _internal_mutable_email();
  public:

  // string encrypted_password = 3;
  void clear_encrypted_password();
  const std::string& encrypted_password() const;
  void set_encrypted_password(const std::string& value);
  void set_encrypted_password(std::string&& value);
  void set_encrypted_password(const char* value);
  void set_encrypted_password(const char* value, size_t size);
  std::string* mutable_encrypted_password();
  std::string* release_encrypted_password();
  void set_allocated_encrypted_password(std::string* encrypted_password);
  private:
  const std::string& _internal_encrypted_password() const;
  void _internal_set_encrypted_password(const std::string& value);
  std::string* _internal_mutable_encrypted_password();
  public:

  // string reset_password_token = 4;
  void clear_reset_password_token();
  const std::string& reset_password_token() const;
  void set_reset_password_token(const std::string& value);
  void set_reset_password_token(std::string&& value);
  void set_reset_password_token(const char* value);
  void set_reset_password_token(const char* value, size_t size);
  std::string* mutable_reset_password_token();
  std::string* release_reset_password_token();
  void set_allocated_reset_password_token(std::string* reset_password_token);
  private:
  const std::string& _internal_reset_password_token() const;
  void _internal_set_reset_password_token(const std::string& value);
  std::string* _internal_mutable_reset_password_token();
  public:

  // string first_name = 7;
  void clear_first_name();
  const std::string& first_name() const;
  void set_first_name(const std::string& value);
  void set_first_name(std::string&& value);
  void set_first_name(const char* value);
  void set_first_name(const char* value, size_t size);
  std::string* mutable_first_name();
  std::string* release_first_name();
  void set_allocated_first_name(std::string* first_name);
  private:
  const std::string& _internal_first_name() const;
  void _internal_set_first_name(const std::string& value);
  std::string* _internal_mutable_first_name();
  public:

  // string last_name = 8;
  void clear_last_name();
  const std::string& last_name() const;
  void set_last_name(const std::string& value);
  void set_last_name(std::string&& value);
  void set_last_name(const char* value);
  void set_last_name(const char* value, size_t size);
  std::string* mutable_last_name();
  std::string* release_last_name();
  void set_allocated_last_name(std::string* last_name);
  private:
  const std::string& _internal_last_name() const;
  void _internal_set_last_name(const std::string& value);
  std::string* _internal_mutable_last_name();
  public:

  // string current_sign_in_ip = 11;
  void clear_current_sign_in_ip();
  const std::string& current_sign_in_ip() const;
  void set_current_sign_in_ip(const std::string& value);
  void set_current_sign_in_ip(std::string&& value);
  void set_current_sign_in_ip(const char* value);
  void set_current_sign_in_ip(const char* value, size_t size);
  std::string* mutable_current_sign_in_ip();
  std::string* release_current_sign_in_ip();
  void set_allocated_current_sign_in_ip(std::string* current_sign_in_ip);
  private:
  const std::string& _internal_current_sign_in_ip() const;
  void _internal_set_current_sign_in_ip(const std::string& value);
  std::string* _internal_mutable_current_sign_in_ip();
  public:

  // string last_sign_in_ip = 13;
  void clear_last_sign_in_ip();
  const std::string& last_sign_in_ip() const;
  void set_last_sign_in_ip(const std::string& value);
  void set_last_sign_in_ip(std::string&& value);
  void set_last_sign_in_ip(const char* value);
  void set_last_sign_in_ip(const char* value, size_t size);
  std::string* mutable_last_sign_in_ip();
  std::string* release_last_sign_in_ip();
  void set_allocated_last_sign_in_ip(std::string* last_sign_in_ip);
  private:
  const std::string& _internal_last_sign_in_ip() const;
  void _internal_set_last_sign_in_ip(const std::string& value);
  std::string* _internal_mutable_last_sign_in_ip();
  public:

  // string auth_token = 14;
  void clear_auth_token();
  const std::string& auth_token() const;
  void set_auth_token(const std::string& value);
  void set_auth_token(std::string&& value);
  void set_auth_token(const char* value);
  void set_auth_token(const char* value, size_t size);
  std::string* mutable_auth_token();
  std::string* release_auth_token();
  void set_allocated_auth_token(std::string* auth_token);
  private:
  const std::string& _internal_auth_token() const;
  void _internal_set_auth_token(const std::string& value);
  std::string* _internal_mutable_auth_token();
  public:

  // string locale = 15;
  void clear_locale();
  const std::string& locale() const;
  void set_locale(const std::string& value);
  void set_locale(std::string&& value);
  void set_locale(const char* value);
  void set_locale(const char* value, size_t size);
  std::string* mutable_locale();
  std::string* release_locale();
  void set_allocated_locale(std::string* locale);
  private:
  const std::string& _internal_locale() const;
  void _internal_set_locale(const std::string& value);
  std::string* _internal_mutable_locale();
  public:

  // string gravatar_hash = 16;
  void clear_gravatar_hash();
  const std::string& gravatar_hash() const;
  void set_gravatar_hash(const std::string& value);
  void set_gravatar_hash(std::string&& value);
  void set_gravatar_hash(const char* value);
  void set_gravatar_hash(const char* value, size_t size);
  std::string* mutable_gravatar_hash();
  std::string* release_gravatar_hash();
  void set_allocated_gravatar_hash(std::string* gravatar_hash);
  private:
  const std::string& _internal_gravatar_hash() const;
  void _internal_set_gravatar_hash(const std::string& value);
  std::string* _internal_mutable_gravatar_hash();
  public:

  // string username = 17;
  void clear_username();
  const std::string& username() const;
  void set_username(const std::string& value);
  void set_username(std::string&& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  std::string* mutable_username();
  std::string* release_username();
  void set_allocated_username(std::string* username);
  private:
  const std::string& _internal_username() const;
  void _internal_set_username(const std::string& value);
  std::string* _internal_mutable_username();
  public:

  // string regstatus = 18;
  void clear_regstatus();
  const std::string& regstatus() const;
  void set_regstatus(const std::string& value);
  void set_regstatus(std::string&& value);
  void set_regstatus(const char* value);
  void set_regstatus(const char* value, size_t size);
  std::string* mutable_regstatus();
  std::string* release_regstatus();
  void set_allocated_regstatus(std::string* regstatus);
  private:
  const std::string& _internal_regstatus() const;
  void _internal_set_regstatus(const std::string& value);
  std::string* _internal_mutable_regstatus();
  public:

  // string avatar_url = 21;
  void clear_avatar_url();
  const std::string& avatar_url() const;
  void set_avatar_url(const std::string& value);
  void set_avatar_url(std::string&& value);
  void set_avatar_url(const char* value);
  void set_avatar_url(const char* value, size_t size);
  std::string* mutable_avatar_url();
  std::string* release_avatar_url();
  void set_allocated_avatar_url(std::string* avatar_url);
  private:
  const std::string& _internal_avatar_url() const;
  void _internal_set_avatar_url(const std::string& value);
  std::string* _internal_mutable_avatar_url();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 reset_password_sent_at = 5;
  void clear_reset_password_sent_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_password_sent_at() const;
  void set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reset_password_sent_at() const;
  void _internal_set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 remember_created_at = 6;
  void clear_remember_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 remember_created_at() const;
  void set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_remember_created_at() const;
  void _internal_set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 signin_count = 9;
  void clear_signin_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 signin_count() const;
  void set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_signin_count() const;
  void _internal_set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 current_sign_in_at = 10;
  void clear_current_sign_in_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 current_sign_in_at() const;
  void set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_current_sign_in_at() const;
  void _internal_set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 last_sign_in_at = 12;
  void clear_last_sign_in_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_sign_in_at() const;
  void set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_sign_in_at() const;
  void _internal_set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool active = 19;
  void clear_active();
  bool active() const;
  void set_active(bool value);
  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);
  public:

  // bool is_admin = 20;
  void clear_is_admin();
  bool is_admin() const;
  void set_is_admin(bool value);
  private:
  bool _internal_is_admin() const;
  void _internal_set_is_admin(bool value);
  public:

  // uint32 created_at = 22;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 23;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser > activities_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr email_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr encrypted_password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reset_password_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr first_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr current_sign_in_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_sign_in_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr auth_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr locale_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gravatar_hash_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr username_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr regstatus_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_url_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_password_sent_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 remember_created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 signin_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 current_sign_in_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_sign_in_at_;
  bool active_;
  bool is_admin_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PChannel_PAttachmentsInChannel :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PChannel.PAttachmentsInChannel) */ {
 public:
  PChannel_PAttachmentsInChannel();
  virtual ~PChannel_PAttachmentsInChannel();

  PChannel_PAttachmentsInChannel(const PChannel_PAttachmentsInChannel& from);
  PChannel_PAttachmentsInChannel(PChannel_PAttachmentsInChannel&& from) noexcept
    : PChannel_PAttachmentsInChannel() {
    *this = ::std::move(from);
  }

  inline PChannel_PAttachmentsInChannel& operator=(const PChannel_PAttachmentsInChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline PChannel_PAttachmentsInChannel& operator=(PChannel_PAttachmentsInChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PChannel_PAttachmentsInChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PChannel_PAttachmentsInChannel* internal_default_instance() {
    return reinterpret_cast<const PChannel_PAttachmentsInChannel*>(
               &_PChannel_PAttachmentsInChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(PChannel_PAttachmentsInChannel& a, PChannel_PAttachmentsInChannel& b) {
    a.Swap(&b);
  }
  inline void Swap(PChannel_PAttachmentsInChannel* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PChannel_PAttachmentsInChannel* New() const final {
    return CreateMaybeMessage<PChannel_PAttachmentsInChannel>(nullptr);
  }

  PChannel_PAttachmentsInChannel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PChannel_PAttachmentsInChannel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PChannel_PAttachmentsInChannel& from);
  void MergeFrom(const PChannel_PAttachmentsInChannel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PChannel_PAttachmentsInChannel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PChannel.PAttachmentsInChannel";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PChannel_PAttachmentsInChannel_PUserInAttachment PUserInAttachment;

  // accessors -------------------------------------------------------

  enum : int {
    kFileFileNameFieldNumber = 2,
    kFileContentTypeFieldNumber = 3,
    kUserFieldNumber = 11,
    kIdFieldNumber = 1,
    kFileFileSizeFieldNumber = 4,
    kMessageIdFieldNumber = 5,
    kFileUpdatedAtFieldNumber = 6,
    kCreatedAtFieldNumber = 7,
    kUpdatedAtFieldNumber = 8,
    kUserIdFieldNumber = 9,
    kChannelIdFieldNumber = 10,
  };
  // string file_file_name = 2;
  void clear_file_file_name();
  const std::string& file_file_name() const;
  void set_file_file_name(const std::string& value);
  void set_file_file_name(std::string&& value);
  void set_file_file_name(const char* value);
  void set_file_file_name(const char* value, size_t size);
  std::string* mutable_file_file_name();
  std::string* release_file_file_name();
  void set_allocated_file_file_name(std::string* file_file_name);
  private:
  const std::string& _internal_file_file_name() const;
  void _internal_set_file_file_name(const std::string& value);
  std::string* _internal_mutable_file_file_name();
  public:

  // string file_content_type = 3;
  void clear_file_content_type();
  const std::string& file_content_type() const;
  void set_file_content_type(const std::string& value);
  void set_file_content_type(std::string&& value);
  void set_file_content_type(const char* value);
  void set_file_content_type(const char* value, size_t size);
  std::string* mutable_file_content_type();
  std::string* release_file_content_type();
  void set_allocated_file_content_type(std::string* file_content_type);
  private:
  const std::string& _internal_file_content_type() const;
  void _internal_set_file_content_type(const std::string& value);
  std::string* _internal_mutable_file_content_type();
  public:

  // .kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment user = 11;
  bool has_user() const;
  private:
  bool _internal_has_user() const;
  public:
  void clear_user();
  const ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment& user() const;
  ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment* release_user();
  ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment* mutable_user();
  void set_allocated_user(::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment* user);
  private:
  const ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment& _internal_user() const;
  ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment* _internal_mutable_user();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_file_size = 4;
  void clear_file_file_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size() const;
  void set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_file_size() const;
  void _internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 message_id = 5;
  void clear_message_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id() const;
  void set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_message_id() const;
  void _internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_updated_at = 6;
  void clear_file_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at() const;
  void set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_updated_at() const;
  void _internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 7;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 8;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 9;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 10;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PChannel.PAttachmentsInChannel)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_file_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_content_type_;
  ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment* user_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PChannel :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PChannel) */ {
 public:
  PChannel();
  virtual ~PChannel();

  PChannel(const PChannel& from);
  PChannel(PChannel&& from) noexcept
    : PChannel() {
    *this = ::std::move(from);
  }

  inline PChannel& operator=(const PChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline PChannel& operator=(PChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PChannel* internal_default_instance() {
    return reinterpret_cast<const PChannel*>(
               &_PChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(PChannel& a, PChannel& b) {
    a.Swap(&b);
  }
  inline void Swap(PChannel* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PChannel* New() const final {
    return CreateMaybeMessage<PChannel>(nullptr);
  }

  PChannel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PChannel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PChannel& from);
  void MergeFrom(const PChannel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PChannel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PChannel";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PChannel_PActivitiesInChannel PActivitiesInChannel;
  typedef PChannel_PUserInChannel PUserInChannel;
  typedef PChannel_PAttachmentsInChannel PAttachmentsInChannel;

  // accessors -------------------------------------------------------

  enum : int {
    kActivitiesFieldNumber = 7,
    kAttachmentsFieldNumber = 9,
    kNameFieldNumber = 2,
    kUserFieldNumber = 8,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 3,
    kUpdatedAtFieldNumber = 4,
    kUserIdFieldNumber = 5,
    kCountFieldNumber = 6,
  };
  // repeated .kandan_small.PChannel.PActivitiesInChannel activities = 7;
  int activities_size() const;
  private:
  int _internal_activities_size() const;
  public:
  void clear_activities();
  ::kandan_small::PChannel_PActivitiesInChannel* mutable_activities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PActivitiesInChannel >*
      mutable_activities();
  private:
  const ::kandan_small::PChannel_PActivitiesInChannel& _internal_activities(int index) const;
  ::kandan_small::PChannel_PActivitiesInChannel* _internal_add_activities();
  public:
  const ::kandan_small::PChannel_PActivitiesInChannel& activities(int index) const;
  ::kandan_small::PChannel_PActivitiesInChannel* add_activities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PActivitiesInChannel >&
      activities() const;

  // repeated .kandan_small.PChannel.PAttachmentsInChannel attachments = 9;
  int attachments_size() const;
  private:
  int _internal_attachments_size() const;
  public:
  void clear_attachments();
  ::kandan_small::PChannel_PAttachmentsInChannel* mutable_attachments(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PAttachmentsInChannel >*
      mutable_attachments();
  private:
  const ::kandan_small::PChannel_PAttachmentsInChannel& _internal_attachments(int index) const;
  ::kandan_small::PChannel_PAttachmentsInChannel* _internal_add_attachments();
  public:
  const ::kandan_small::PChannel_PAttachmentsInChannel& attachments(int index) const;
  ::kandan_small::PChannel_PAttachmentsInChannel* add_attachments();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PAttachmentsInChannel >&
      attachments() const;

  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .kandan_small.PChannel.PUserInChannel user = 8;
  bool has_user() const;
  private:
  bool _internal_has_user() const;
  public:
  void clear_user();
  const ::kandan_small::PChannel_PUserInChannel& user() const;
  ::kandan_small::PChannel_PUserInChannel* release_user();
  ::kandan_small::PChannel_PUserInChannel* mutable_user();
  void set_allocated_user(::kandan_small::PChannel_PUserInChannel* user);
  private:
  const ::kandan_small::PChannel_PUserInChannel& _internal_user() const;
  ::kandan_small::PChannel_PUserInChannel* _internal_mutable_user();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 3;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 4;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 5;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 count = 6;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PChannel)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PActivitiesInChannel > activities_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PAttachmentsInChannel > attachments_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::kandan_small::PChannel_PUserInChannel* user_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser) */ {
 public:
  PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser();
  virtual ~PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser();

  PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser(const PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser& from);
  PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser(PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser&& from) noexcept
    : PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser() {
    *this = ::std::move(from);
  }

  inline PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser& operator=(const PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser& from) {
    CopyFrom(from);
    return *this;
  }
  inline PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser& operator=(PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser* internal_default_instance() {
    return reinterpret_cast<const PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser*>(
               &_PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser& a, PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser& b) {
    a.Swap(&b);
  }
  inline void Swap(PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser* New() const final {
    return CreateMaybeMessage<PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser>(nullptr);
  }

  PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser& from);
  void MergeFrom(const PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileFileNameFieldNumber = 2,
    kFileContentTypeFieldNumber = 3,
    kIdFieldNumber = 1,
    kFileFileSizeFieldNumber = 4,
    kMessageIdFieldNumber = 5,
    kFileUpdatedAtFieldNumber = 6,
    kCreatedAtFieldNumber = 7,
    kUpdatedAtFieldNumber = 8,
    kUserIdFieldNumber = 9,
    kChannelIdFieldNumber = 10,
  };
  // string file_file_name = 2;
  void clear_file_file_name();
  const std::string& file_file_name() const;
  void set_file_file_name(const std::string& value);
  void set_file_file_name(std::string&& value);
  void set_file_file_name(const char* value);
  void set_file_file_name(const char* value, size_t size);
  std::string* mutable_file_file_name();
  std::string* release_file_file_name();
  void set_allocated_file_file_name(std::string* file_file_name);
  private:
  const std::string& _internal_file_file_name() const;
  void _internal_set_file_file_name(const std::string& value);
  std::string* _internal_mutable_file_file_name();
  public:

  // string file_content_type = 3;
  void clear_file_content_type();
  const std::string& file_content_type() const;
  void set_file_content_type(const std::string& value);
  void set_file_content_type(std::string&& value);
  void set_file_content_type(const char* value);
  void set_file_content_type(const char* value, size_t size);
  std::string* mutable_file_content_type();
  std::string* release_file_content_type();
  void set_allocated_file_content_type(std::string* file_content_type);
  private:
  const std::string& _internal_file_content_type() const;
  void _internal_set_file_content_type(const std::string& value);
  std::string* _internal_mutable_file_content_type();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_file_size = 4;
  void clear_file_file_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size() const;
  void set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_file_size() const;
  void _internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 message_id = 5;
  void clear_message_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id() const;
  void set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_message_id() const;
  void _internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_updated_at = 6;
  void clear_file_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at() const;
  void set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_updated_at() const;
  void _internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 7;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 8;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 9;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 10;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_file_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_content_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PActivity_PChannelInActivity_PUserInChannel :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PActivity.PChannelInActivity.PUserInChannel) */ {
 public:
  PActivity_PChannelInActivity_PUserInChannel();
  virtual ~PActivity_PChannelInActivity_PUserInChannel();

  PActivity_PChannelInActivity_PUserInChannel(const PActivity_PChannelInActivity_PUserInChannel& from);
  PActivity_PChannelInActivity_PUserInChannel(PActivity_PChannelInActivity_PUserInChannel&& from) noexcept
    : PActivity_PChannelInActivity_PUserInChannel() {
    *this = ::std::move(from);
  }

  inline PActivity_PChannelInActivity_PUserInChannel& operator=(const PActivity_PChannelInActivity_PUserInChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline PActivity_PChannelInActivity_PUserInChannel& operator=(PActivity_PChannelInActivity_PUserInChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PActivity_PChannelInActivity_PUserInChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PActivity_PChannelInActivity_PUserInChannel* internal_default_instance() {
    return reinterpret_cast<const PActivity_PChannelInActivity_PUserInChannel*>(
               &_PActivity_PChannelInActivity_PUserInChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(PActivity_PChannelInActivity_PUserInChannel& a, PActivity_PChannelInActivity_PUserInChannel& b) {
    a.Swap(&b);
  }
  inline void Swap(PActivity_PChannelInActivity_PUserInChannel* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PActivity_PChannelInActivity_PUserInChannel* New() const final {
    return CreateMaybeMessage<PActivity_PChannelInActivity_PUserInChannel>(nullptr);
  }

  PActivity_PChannelInActivity_PUserInChannel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PActivity_PChannelInActivity_PUserInChannel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PActivity_PChannelInActivity_PUserInChannel& from);
  void MergeFrom(const PActivity_PChannelInActivity_PUserInChannel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PActivity_PChannelInActivity_PUserInChannel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PActivity.PChannelInActivity.PUserInChannel";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser PAttachmentsInUser;

  // accessors -------------------------------------------------------

  enum : int {
    kAttachmentsFieldNumber = 24,
    kEmailFieldNumber = 2,
    kEncryptedPasswordFieldNumber = 3,
    kResetPasswordTokenFieldNumber = 4,
    kFirstNameFieldNumber = 7,
    kLastNameFieldNumber = 8,
    kCurrentSignInIpFieldNumber = 11,
    kLastSignInIpFieldNumber = 13,
    kAuthTokenFieldNumber = 14,
    kLocaleFieldNumber = 15,
    kGravatarHashFieldNumber = 16,
    kUsernameFieldNumber = 17,
    kRegstatusFieldNumber = 18,
    kAvatarUrlFieldNumber = 21,
    kIdFieldNumber = 1,
    kResetPasswordSentAtFieldNumber = 5,
    kRememberCreatedAtFieldNumber = 6,
    kSigninCountFieldNumber = 9,
    kCurrentSignInAtFieldNumber = 10,
    kLastSignInAtFieldNumber = 12,
    kActiveFieldNumber = 19,
    kIsAdminFieldNumber = 20,
    kCreatedAtFieldNumber = 22,
    kUpdatedAtFieldNumber = 23,
  };
  // repeated .kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser attachments = 24;
  int attachments_size() const;
  private:
  int _internal_attachments_size() const;
  public:
  void clear_attachments();
  ::kandan_small::PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser* mutable_attachments(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser >*
      mutable_attachments();
  private:
  const ::kandan_small::PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser& _internal_attachments(int index) const;
  ::kandan_small::PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser* _internal_add_attachments();
  public:
  const ::kandan_small::PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser& attachments(int index) const;
  ::kandan_small::PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser* add_attachments();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser >&
      attachments() const;

  // string email = 2;
  void clear_email();
  const std::string& email() const;
  void set_email(const std::string& value);
  void set_email(std::string&& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  std::string* mutable_email();
  std::string* release_email();
  void set_allocated_email(std::string* email);
  private:
  const std::string& _internal_email() const;
  void _internal_set_email(const std::string& value);
  std::string* _internal_mutable_email();
  public:

  // string encrypted_password = 3;
  void clear_encrypted_password();
  const std::string& encrypted_password() const;
  void set_encrypted_password(const std::string& value);
  void set_encrypted_password(std::string&& value);
  void set_encrypted_password(const char* value);
  void set_encrypted_password(const char* value, size_t size);
  std::string* mutable_encrypted_password();
  std::string* release_encrypted_password();
  void set_allocated_encrypted_password(std::string* encrypted_password);
  private:
  const std::string& _internal_encrypted_password() const;
  void _internal_set_encrypted_password(const std::string& value);
  std::string* _internal_mutable_encrypted_password();
  public:

  // string reset_password_token = 4;
  void clear_reset_password_token();
  const std::string& reset_password_token() const;
  void set_reset_password_token(const std::string& value);
  void set_reset_password_token(std::string&& value);
  void set_reset_password_token(const char* value);
  void set_reset_password_token(const char* value, size_t size);
  std::string* mutable_reset_password_token();
  std::string* release_reset_password_token();
  void set_allocated_reset_password_token(std::string* reset_password_token);
  private:
  const std::string& _internal_reset_password_token() const;
  void _internal_set_reset_password_token(const std::string& value);
  std::string* _internal_mutable_reset_password_token();
  public:

  // string first_name = 7;
  void clear_first_name();
  const std::string& first_name() const;
  void set_first_name(const std::string& value);
  void set_first_name(std::string&& value);
  void set_first_name(const char* value);
  void set_first_name(const char* value, size_t size);
  std::string* mutable_first_name();
  std::string* release_first_name();
  void set_allocated_first_name(std::string* first_name);
  private:
  const std::string& _internal_first_name() const;
  void _internal_set_first_name(const std::string& value);
  std::string* _internal_mutable_first_name();
  public:

  // string last_name = 8;
  void clear_last_name();
  const std::string& last_name() const;
  void set_last_name(const std::string& value);
  void set_last_name(std::string&& value);
  void set_last_name(const char* value);
  void set_last_name(const char* value, size_t size);
  std::string* mutable_last_name();
  std::string* release_last_name();
  void set_allocated_last_name(std::string* last_name);
  private:
  const std::string& _internal_last_name() const;
  void _internal_set_last_name(const std::string& value);
  std::string* _internal_mutable_last_name();
  public:

  // string current_sign_in_ip = 11;
  void clear_current_sign_in_ip();
  const std::string& current_sign_in_ip() const;
  void set_current_sign_in_ip(const std::string& value);
  void set_current_sign_in_ip(std::string&& value);
  void set_current_sign_in_ip(const char* value);
  void set_current_sign_in_ip(const char* value, size_t size);
  std::string* mutable_current_sign_in_ip();
  std::string* release_current_sign_in_ip();
  void set_allocated_current_sign_in_ip(std::string* current_sign_in_ip);
  private:
  const std::string& _internal_current_sign_in_ip() const;
  void _internal_set_current_sign_in_ip(const std::string& value);
  std::string* _internal_mutable_current_sign_in_ip();
  public:

  // string last_sign_in_ip = 13;
  void clear_last_sign_in_ip();
  const std::string& last_sign_in_ip() const;
  void set_last_sign_in_ip(const std::string& value);
  void set_last_sign_in_ip(std::string&& value);
  void set_last_sign_in_ip(const char* value);
  void set_last_sign_in_ip(const char* value, size_t size);
  std::string* mutable_last_sign_in_ip();
  std::string* release_last_sign_in_ip();
  void set_allocated_last_sign_in_ip(std::string* last_sign_in_ip);
  private:
  const std::string& _internal_last_sign_in_ip() const;
  void _internal_set_last_sign_in_ip(const std::string& value);
  std::string* _internal_mutable_last_sign_in_ip();
  public:

  // string auth_token = 14;
  void clear_auth_token();
  const std::string& auth_token() const;
  void set_auth_token(const std::string& value);
  void set_auth_token(std::string&& value);
  void set_auth_token(const char* value);
  void set_auth_token(const char* value, size_t size);
  std::string* mutable_auth_token();
  std::string* release_auth_token();
  void set_allocated_auth_token(std::string* auth_token);
  private:
  const std::string& _internal_auth_token() const;
  void _internal_set_auth_token(const std::string& value);
  std::string* _internal_mutable_auth_token();
  public:

  // string locale = 15;
  void clear_locale();
  const std::string& locale() const;
  void set_locale(const std::string& value);
  void set_locale(std::string&& value);
  void set_locale(const char* value);
  void set_locale(const char* value, size_t size);
  std::string* mutable_locale();
  std::string* release_locale();
  void set_allocated_locale(std::string* locale);
  private:
  const std::string& _internal_locale() const;
  void _internal_set_locale(const std::string& value);
  std::string* _internal_mutable_locale();
  public:

  // string gravatar_hash = 16;
  void clear_gravatar_hash();
  const std::string& gravatar_hash() const;
  void set_gravatar_hash(const std::string& value);
  void set_gravatar_hash(std::string&& value);
  void set_gravatar_hash(const char* value);
  void set_gravatar_hash(const char* value, size_t size);
  std::string* mutable_gravatar_hash();
  std::string* release_gravatar_hash();
  void set_allocated_gravatar_hash(std::string* gravatar_hash);
  private:
  const std::string& _internal_gravatar_hash() const;
  void _internal_set_gravatar_hash(const std::string& value);
  std::string* _internal_mutable_gravatar_hash();
  public:

  // string username = 17;
  void clear_username();
  const std::string& username() const;
  void set_username(const std::string& value);
  void set_username(std::string&& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  std::string* mutable_username();
  std::string* release_username();
  void set_allocated_username(std::string* username);
  private:
  const std::string& _internal_username() const;
  void _internal_set_username(const std::string& value);
  std::string* _internal_mutable_username();
  public:

  // string regstatus = 18;
  void clear_regstatus();
  const std::string& regstatus() const;
  void set_regstatus(const std::string& value);
  void set_regstatus(std::string&& value);
  void set_regstatus(const char* value);
  void set_regstatus(const char* value, size_t size);
  std::string* mutable_regstatus();
  std::string* release_regstatus();
  void set_allocated_regstatus(std::string* regstatus);
  private:
  const std::string& _internal_regstatus() const;
  void _internal_set_regstatus(const std::string& value);
  std::string* _internal_mutable_regstatus();
  public:

  // string avatar_url = 21;
  void clear_avatar_url();
  const std::string& avatar_url() const;
  void set_avatar_url(const std::string& value);
  void set_avatar_url(std::string&& value);
  void set_avatar_url(const char* value);
  void set_avatar_url(const char* value, size_t size);
  std::string* mutable_avatar_url();
  std::string* release_avatar_url();
  void set_allocated_avatar_url(std::string* avatar_url);
  private:
  const std::string& _internal_avatar_url() const;
  void _internal_set_avatar_url(const std::string& value);
  std::string* _internal_mutable_avatar_url();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 reset_password_sent_at = 5;
  void clear_reset_password_sent_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_password_sent_at() const;
  void set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reset_password_sent_at() const;
  void _internal_set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 remember_created_at = 6;
  void clear_remember_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 remember_created_at() const;
  void set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_remember_created_at() const;
  void _internal_set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 signin_count = 9;
  void clear_signin_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 signin_count() const;
  void set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_signin_count() const;
  void _internal_set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 current_sign_in_at = 10;
  void clear_current_sign_in_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 current_sign_in_at() const;
  void set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_current_sign_in_at() const;
  void _internal_set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 last_sign_in_at = 12;
  void clear_last_sign_in_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_sign_in_at() const;
  void set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_sign_in_at() const;
  void _internal_set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool active = 19;
  void clear_active();
  bool active() const;
  void set_active(bool value);
  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);
  public:

  // bool is_admin = 20;
  void clear_is_admin();
  bool is_admin() const;
  void set_is_admin(bool value);
  private:
  bool _internal_is_admin() const;
  void _internal_set_is_admin(bool value);
  public:

  // uint32 created_at = 22;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 23;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PActivity.PChannelInActivity.PUserInChannel)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser > attachments_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr email_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr encrypted_password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reset_password_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr first_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr current_sign_in_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_sign_in_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr auth_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr locale_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gravatar_hash_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr username_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr regstatus_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_url_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_password_sent_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 remember_created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 signin_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 current_sign_in_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_sign_in_at_;
  bool active_;
  bool is_admin_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment) */ {
 public:
  PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment();
  virtual ~PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment();

  PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment(const PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment& from);
  PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment(PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment&& from) noexcept
    : PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment() {
    *this = ::std::move(from);
  }

  inline PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment& operator=(const PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment& from) {
    CopyFrom(from);
    return *this;
  }
  inline PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment& operator=(PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment* internal_default_instance() {
    return reinterpret_cast<const PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment*>(
               &_PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment& a, PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment& b) {
    a.Swap(&b);
  }
  inline void Swap(PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment* New() const final {
    return CreateMaybeMessage<PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment>(nullptr);
  }

  PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment& from);
  void MergeFrom(const PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEmailFieldNumber = 2,
    kEncryptedPasswordFieldNumber = 3,
    kResetPasswordTokenFieldNumber = 4,
    kFirstNameFieldNumber = 7,
    kLastNameFieldNumber = 8,
    kCurrentSignInIpFieldNumber = 11,
    kLastSignInIpFieldNumber = 13,
    kAuthTokenFieldNumber = 14,
    kLocaleFieldNumber = 15,
    kGravatarHashFieldNumber = 16,
    kUsernameFieldNumber = 17,
    kRegstatusFieldNumber = 18,
    kAvatarUrlFieldNumber = 21,
    kIdFieldNumber = 1,
    kResetPasswordSentAtFieldNumber = 5,
    kRememberCreatedAtFieldNumber = 6,
    kSigninCountFieldNumber = 9,
    kCurrentSignInAtFieldNumber = 10,
    kLastSignInAtFieldNumber = 12,
    kActiveFieldNumber = 19,
    kIsAdminFieldNumber = 20,
    kCreatedAtFieldNumber = 22,
    kUpdatedAtFieldNumber = 23,
  };
  // string email = 2;
  void clear_email();
  const std::string& email() const;
  void set_email(const std::string& value);
  void set_email(std::string&& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  std::string* mutable_email();
  std::string* release_email();
  void set_allocated_email(std::string* email);
  private:
  const std::string& _internal_email() const;
  void _internal_set_email(const std::string& value);
  std::string* _internal_mutable_email();
  public:

  // string encrypted_password = 3;
  void clear_encrypted_password();
  const std::string& encrypted_password() const;
  void set_encrypted_password(const std::string& value);
  void set_encrypted_password(std::string&& value);
  void set_encrypted_password(const char* value);
  void set_encrypted_password(const char* value, size_t size);
  std::string* mutable_encrypted_password();
  std::string* release_encrypted_password();
  void set_allocated_encrypted_password(std::string* encrypted_password);
  private:
  const std::string& _internal_encrypted_password() const;
  void _internal_set_encrypted_password(const std::string& value);
  std::string* _internal_mutable_encrypted_password();
  public:

  // string reset_password_token = 4;
  void clear_reset_password_token();
  const std::string& reset_password_token() const;
  void set_reset_password_token(const std::string& value);
  void set_reset_password_token(std::string&& value);
  void set_reset_password_token(const char* value);
  void set_reset_password_token(const char* value, size_t size);
  std::string* mutable_reset_password_token();
  std::string* release_reset_password_token();
  void set_allocated_reset_password_token(std::string* reset_password_token);
  private:
  const std::string& _internal_reset_password_token() const;
  void _internal_set_reset_password_token(const std::string& value);
  std::string* _internal_mutable_reset_password_token();
  public:

  // string first_name = 7;
  void clear_first_name();
  const std::string& first_name() const;
  void set_first_name(const std::string& value);
  void set_first_name(std::string&& value);
  void set_first_name(const char* value);
  void set_first_name(const char* value, size_t size);
  std::string* mutable_first_name();
  std::string* release_first_name();
  void set_allocated_first_name(std::string* first_name);
  private:
  const std::string& _internal_first_name() const;
  void _internal_set_first_name(const std::string& value);
  std::string* _internal_mutable_first_name();
  public:

  // string last_name = 8;
  void clear_last_name();
  const std::string& last_name() const;
  void set_last_name(const std::string& value);
  void set_last_name(std::string&& value);
  void set_last_name(const char* value);
  void set_last_name(const char* value, size_t size);
  std::string* mutable_last_name();
  std::string* release_last_name();
  void set_allocated_last_name(std::string* last_name);
  private:
  const std::string& _internal_last_name() const;
  void _internal_set_last_name(const std::string& value);
  std::string* _internal_mutable_last_name();
  public:

  // string current_sign_in_ip = 11;
  void clear_current_sign_in_ip();
  const std::string& current_sign_in_ip() const;
  void set_current_sign_in_ip(const std::string& value);
  void set_current_sign_in_ip(std::string&& value);
  void set_current_sign_in_ip(const char* value);
  void set_current_sign_in_ip(const char* value, size_t size);
  std::string* mutable_current_sign_in_ip();
  std::string* release_current_sign_in_ip();
  void set_allocated_current_sign_in_ip(std::string* current_sign_in_ip);
  private:
  const std::string& _internal_current_sign_in_ip() const;
  void _internal_set_current_sign_in_ip(const std::string& value);
  std::string* _internal_mutable_current_sign_in_ip();
  public:

  // string last_sign_in_ip = 13;
  void clear_last_sign_in_ip();
  const std::string& last_sign_in_ip() const;
  void set_last_sign_in_ip(const std::string& value);
  void set_last_sign_in_ip(std::string&& value);
  void set_last_sign_in_ip(const char* value);
  void set_last_sign_in_ip(const char* value, size_t size);
  std::string* mutable_last_sign_in_ip();
  std::string* release_last_sign_in_ip();
  void set_allocated_last_sign_in_ip(std::string* last_sign_in_ip);
  private:
  const std::string& _internal_last_sign_in_ip() const;
  void _internal_set_last_sign_in_ip(const std::string& value);
  std::string* _internal_mutable_last_sign_in_ip();
  public:

  // string auth_token = 14;
  void clear_auth_token();
  const std::string& auth_token() const;
  void set_auth_token(const std::string& value);
  void set_auth_token(std::string&& value);
  void set_auth_token(const char* value);
  void set_auth_token(const char* value, size_t size);
  std::string* mutable_auth_token();
  std::string* release_auth_token();
  void set_allocated_auth_token(std::string* auth_token);
  private:
  const std::string& _internal_auth_token() const;
  void _internal_set_auth_token(const std::string& value);
  std::string* _internal_mutable_auth_token();
  public:

  // string locale = 15;
  void clear_locale();
  const std::string& locale() const;
  void set_locale(const std::string& value);
  void set_locale(std::string&& value);
  void set_locale(const char* value);
  void set_locale(const char* value, size_t size);
  std::string* mutable_locale();
  std::string* release_locale();
  void set_allocated_locale(std::string* locale);
  private:
  const std::string& _internal_locale() const;
  void _internal_set_locale(const std::string& value);
  std::string* _internal_mutable_locale();
  public:

  // string gravatar_hash = 16;
  void clear_gravatar_hash();
  const std::string& gravatar_hash() const;
  void set_gravatar_hash(const std::string& value);
  void set_gravatar_hash(std::string&& value);
  void set_gravatar_hash(const char* value);
  void set_gravatar_hash(const char* value, size_t size);
  std::string* mutable_gravatar_hash();
  std::string* release_gravatar_hash();
  void set_allocated_gravatar_hash(std::string* gravatar_hash);
  private:
  const std::string& _internal_gravatar_hash() const;
  void _internal_set_gravatar_hash(const std::string& value);
  std::string* _internal_mutable_gravatar_hash();
  public:

  // string username = 17;
  void clear_username();
  const std::string& username() const;
  void set_username(const std::string& value);
  void set_username(std::string&& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  std::string* mutable_username();
  std::string* release_username();
  void set_allocated_username(std::string* username);
  private:
  const std::string& _internal_username() const;
  void _internal_set_username(const std::string& value);
  std::string* _internal_mutable_username();
  public:

  // string regstatus = 18;
  void clear_regstatus();
  const std::string& regstatus() const;
  void set_regstatus(const std::string& value);
  void set_regstatus(std::string&& value);
  void set_regstatus(const char* value);
  void set_regstatus(const char* value, size_t size);
  std::string* mutable_regstatus();
  std::string* release_regstatus();
  void set_allocated_regstatus(std::string* regstatus);
  private:
  const std::string& _internal_regstatus() const;
  void _internal_set_regstatus(const std::string& value);
  std::string* _internal_mutable_regstatus();
  public:

  // string avatar_url = 21;
  void clear_avatar_url();
  const std::string& avatar_url() const;
  void set_avatar_url(const std::string& value);
  void set_avatar_url(std::string&& value);
  void set_avatar_url(const char* value);
  void set_avatar_url(const char* value, size_t size);
  std::string* mutable_avatar_url();
  std::string* release_avatar_url();
  void set_allocated_avatar_url(std::string* avatar_url);
  private:
  const std::string& _internal_avatar_url() const;
  void _internal_set_avatar_url(const std::string& value);
  std::string* _internal_mutable_avatar_url();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 reset_password_sent_at = 5;
  void clear_reset_password_sent_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_password_sent_at() const;
  void set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reset_password_sent_at() const;
  void _internal_set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 remember_created_at = 6;
  void clear_remember_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 remember_created_at() const;
  void set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_remember_created_at() const;
  void _internal_set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 signin_count = 9;
  void clear_signin_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 signin_count() const;
  void set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_signin_count() const;
  void _internal_set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 current_sign_in_at = 10;
  void clear_current_sign_in_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 current_sign_in_at() const;
  void set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_current_sign_in_at() const;
  void _internal_set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 last_sign_in_at = 12;
  void clear_last_sign_in_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_sign_in_at() const;
  void set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_sign_in_at() const;
  void _internal_set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool active = 19;
  void clear_active();
  bool active() const;
  void set_active(bool value);
  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);
  public:

  // bool is_admin = 20;
  void clear_is_admin();
  bool is_admin() const;
  void set_is_admin(bool value);
  private:
  bool _internal_is_admin() const;
  void _internal_set_is_admin(bool value);
  public:

  // uint32 created_at = 22;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 23;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr email_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr encrypted_password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reset_password_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr first_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr current_sign_in_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_sign_in_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr auth_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr locale_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gravatar_hash_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr username_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr regstatus_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_url_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_password_sent_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 remember_created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 signin_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 current_sign_in_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_sign_in_at_;
  bool active_;
  bool is_admin_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PActivity_PChannelInActivity_PAttachmentsInChannel :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel) */ {
 public:
  PActivity_PChannelInActivity_PAttachmentsInChannel();
  virtual ~PActivity_PChannelInActivity_PAttachmentsInChannel();

  PActivity_PChannelInActivity_PAttachmentsInChannel(const PActivity_PChannelInActivity_PAttachmentsInChannel& from);
  PActivity_PChannelInActivity_PAttachmentsInChannel(PActivity_PChannelInActivity_PAttachmentsInChannel&& from) noexcept
    : PActivity_PChannelInActivity_PAttachmentsInChannel() {
    *this = ::std::move(from);
  }

  inline PActivity_PChannelInActivity_PAttachmentsInChannel& operator=(const PActivity_PChannelInActivity_PAttachmentsInChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline PActivity_PChannelInActivity_PAttachmentsInChannel& operator=(PActivity_PChannelInActivity_PAttachmentsInChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PActivity_PChannelInActivity_PAttachmentsInChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PActivity_PChannelInActivity_PAttachmentsInChannel* internal_default_instance() {
    return reinterpret_cast<const PActivity_PChannelInActivity_PAttachmentsInChannel*>(
               &_PActivity_PChannelInActivity_PAttachmentsInChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(PActivity_PChannelInActivity_PAttachmentsInChannel& a, PActivity_PChannelInActivity_PAttachmentsInChannel& b) {
    a.Swap(&b);
  }
  inline void Swap(PActivity_PChannelInActivity_PAttachmentsInChannel* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PActivity_PChannelInActivity_PAttachmentsInChannel* New() const final {
    return CreateMaybeMessage<PActivity_PChannelInActivity_PAttachmentsInChannel>(nullptr);
  }

  PActivity_PChannelInActivity_PAttachmentsInChannel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PActivity_PChannelInActivity_PAttachmentsInChannel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PActivity_PChannelInActivity_PAttachmentsInChannel& from);
  void MergeFrom(const PActivity_PChannelInActivity_PAttachmentsInChannel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PActivity_PChannelInActivity_PAttachmentsInChannel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment PUserInAttachment;

  // accessors -------------------------------------------------------

  enum : int {
    kFileFileNameFieldNumber = 2,
    kFileContentTypeFieldNumber = 3,
    kUserFieldNumber = 11,
    kIdFieldNumber = 1,
    kFileFileSizeFieldNumber = 4,
    kMessageIdFieldNumber = 5,
    kFileUpdatedAtFieldNumber = 6,
    kCreatedAtFieldNumber = 7,
    kUpdatedAtFieldNumber = 8,
    kUserIdFieldNumber = 9,
    kChannelIdFieldNumber = 10,
  };
  // string file_file_name = 2;
  void clear_file_file_name();
  const std::string& file_file_name() const;
  void set_file_file_name(const std::string& value);
  void set_file_file_name(std::string&& value);
  void set_file_file_name(const char* value);
  void set_file_file_name(const char* value, size_t size);
  std::string* mutable_file_file_name();
  std::string* release_file_file_name();
  void set_allocated_file_file_name(std::string* file_file_name);
  private:
  const std::string& _internal_file_file_name() const;
  void _internal_set_file_file_name(const std::string& value);
  std::string* _internal_mutable_file_file_name();
  public:

  // string file_content_type = 3;
  void clear_file_content_type();
  const std::string& file_content_type() const;
  void set_file_content_type(const std::string& value);
  void set_file_content_type(std::string&& value);
  void set_file_content_type(const char* value);
  void set_file_content_type(const char* value, size_t size);
  std::string* mutable_file_content_type();
  std::string* release_file_content_type();
  void set_allocated_file_content_type(std::string* file_content_type);
  private:
  const std::string& _internal_file_content_type() const;
  void _internal_set_file_content_type(const std::string& value);
  std::string* _internal_mutable_file_content_type();
  public:

  // .kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment user = 11;
  bool has_user() const;
  private:
  bool _internal_has_user() const;
  public:
  void clear_user();
  const ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment& user() const;
  ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment* release_user();
  ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment* mutable_user();
  void set_allocated_user(::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment* user);
  private:
  const ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment& _internal_user() const;
  ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment* _internal_mutable_user();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_file_size = 4;
  void clear_file_file_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size() const;
  void set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_file_size() const;
  void _internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 message_id = 5;
  void clear_message_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id() const;
  void set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_message_id() const;
  void _internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_updated_at = 6;
  void clear_file_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at() const;
  void set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_updated_at() const;
  void _internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 7;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 8;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 9;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 10;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_file_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_content_type_;
  ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment* user_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PActivity_PChannelInActivity :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PActivity.PChannelInActivity) */ {
 public:
  PActivity_PChannelInActivity();
  virtual ~PActivity_PChannelInActivity();

  PActivity_PChannelInActivity(const PActivity_PChannelInActivity& from);
  PActivity_PChannelInActivity(PActivity_PChannelInActivity&& from) noexcept
    : PActivity_PChannelInActivity() {
    *this = ::std::move(from);
  }

  inline PActivity_PChannelInActivity& operator=(const PActivity_PChannelInActivity& from) {
    CopyFrom(from);
    return *this;
  }
  inline PActivity_PChannelInActivity& operator=(PActivity_PChannelInActivity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PActivity_PChannelInActivity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PActivity_PChannelInActivity* internal_default_instance() {
    return reinterpret_cast<const PActivity_PChannelInActivity*>(
               &_PActivity_PChannelInActivity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(PActivity_PChannelInActivity& a, PActivity_PChannelInActivity& b) {
    a.Swap(&b);
  }
  inline void Swap(PActivity_PChannelInActivity* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PActivity_PChannelInActivity* New() const final {
    return CreateMaybeMessage<PActivity_PChannelInActivity>(nullptr);
  }

  PActivity_PChannelInActivity* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PActivity_PChannelInActivity>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PActivity_PChannelInActivity& from);
  void MergeFrom(const PActivity_PChannelInActivity& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PActivity_PChannelInActivity* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PActivity.PChannelInActivity";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PActivity_PChannelInActivity_PUserInChannel PUserInChannel;
  typedef PActivity_PChannelInActivity_PAttachmentsInChannel PAttachmentsInChannel;

  // accessors -------------------------------------------------------

  enum : int {
    kAttachmentsFieldNumber = 8,
    kNameFieldNumber = 2,
    kUserFieldNumber = 7,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 3,
    kUpdatedAtFieldNumber = 4,
    kUserIdFieldNumber = 5,
    kCountFieldNumber = 6,
  };
  // repeated .kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel attachments = 8;
  int attachments_size() const;
  private:
  int _internal_attachments_size() const;
  public:
  void clear_attachments();
  ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel* mutable_attachments(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel >*
      mutable_attachments();
  private:
  const ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel& _internal_attachments(int index) const;
  ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel* _internal_add_attachments();
  public:
  const ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel& attachments(int index) const;
  ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel* add_attachments();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel >&
      attachments() const;

  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .kandan_small.PActivity.PChannelInActivity.PUserInChannel user = 7;
  bool has_user() const;
  private:
  bool _internal_has_user() const;
  public:
  void clear_user();
  const ::kandan_small::PActivity_PChannelInActivity_PUserInChannel& user() const;
  ::kandan_small::PActivity_PChannelInActivity_PUserInChannel* release_user();
  ::kandan_small::PActivity_PChannelInActivity_PUserInChannel* mutable_user();
  void set_allocated_user(::kandan_small::PActivity_PChannelInActivity_PUserInChannel* user);
  private:
  const ::kandan_small::PActivity_PChannelInActivity_PUserInChannel& _internal_user() const;
  ::kandan_small::PActivity_PChannelInActivity_PUserInChannel* _internal_mutable_user();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 3;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 4;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 5;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 count = 6;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PActivity.PChannelInActivity)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel > attachments_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::kandan_small::PActivity_PChannelInActivity_PUserInChannel* user_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel) */ {
 public:
  PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel();
  virtual ~PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel();

  PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel(const PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel& from);
  PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel(PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel&& from) noexcept
    : PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel() {
    *this = ::std::move(from);
  }

  inline PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel& operator=(const PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel& operator=(PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel* internal_default_instance() {
    return reinterpret_cast<const PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel*>(
               &_PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel& a, PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel& b) {
    a.Swap(&b);
  }
  inline void Swap(PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel* New() const final {
    return CreateMaybeMessage<PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel>(nullptr);
  }

  PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel& from);
  void MergeFrom(const PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileFileNameFieldNumber = 2,
    kFileContentTypeFieldNumber = 3,
    kIdFieldNumber = 1,
    kFileFileSizeFieldNumber = 4,
    kMessageIdFieldNumber = 5,
    kFileUpdatedAtFieldNumber = 6,
    kCreatedAtFieldNumber = 7,
    kUpdatedAtFieldNumber = 8,
    kUserIdFieldNumber = 9,
    kChannelIdFieldNumber = 10,
  };
  // string file_file_name = 2;
  void clear_file_file_name();
  const std::string& file_file_name() const;
  void set_file_file_name(const std::string& value);
  void set_file_file_name(std::string&& value);
  void set_file_file_name(const char* value);
  void set_file_file_name(const char* value, size_t size);
  std::string* mutable_file_file_name();
  std::string* release_file_file_name();
  void set_allocated_file_file_name(std::string* file_file_name);
  private:
  const std::string& _internal_file_file_name() const;
  void _internal_set_file_file_name(const std::string& value);
  std::string* _internal_mutable_file_file_name();
  public:

  // string file_content_type = 3;
  void clear_file_content_type();
  const std::string& file_content_type() const;
  void set_file_content_type(const std::string& value);
  void set_file_content_type(std::string&& value);
  void set_file_content_type(const char* value);
  void set_file_content_type(const char* value, size_t size);
  std::string* mutable_file_content_type();
  std::string* release_file_content_type();
  void set_allocated_file_content_type(std::string* file_content_type);
  private:
  const std::string& _internal_file_content_type() const;
  void _internal_set_file_content_type(const std::string& value);
  std::string* _internal_mutable_file_content_type();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_file_size = 4;
  void clear_file_file_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size() const;
  void set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_file_size() const;
  void _internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 message_id = 5;
  void clear_message_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id() const;
  void set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_message_id() const;
  void _internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_updated_at = 6;
  void clear_file_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at() const;
  void set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_updated_at() const;
  void _internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 7;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 8;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 9;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 10;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_file_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_content_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PActivity_PUserInActivity_PChannelsInUser :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PActivity.PUserInActivity.PChannelsInUser) */ {
 public:
  PActivity_PUserInActivity_PChannelsInUser();
  virtual ~PActivity_PUserInActivity_PChannelsInUser();

  PActivity_PUserInActivity_PChannelsInUser(const PActivity_PUserInActivity_PChannelsInUser& from);
  PActivity_PUserInActivity_PChannelsInUser(PActivity_PUserInActivity_PChannelsInUser&& from) noexcept
    : PActivity_PUserInActivity_PChannelsInUser() {
    *this = ::std::move(from);
  }

  inline PActivity_PUserInActivity_PChannelsInUser& operator=(const PActivity_PUserInActivity_PChannelsInUser& from) {
    CopyFrom(from);
    return *this;
  }
  inline PActivity_PUserInActivity_PChannelsInUser& operator=(PActivity_PUserInActivity_PChannelsInUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PActivity_PUserInActivity_PChannelsInUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PActivity_PUserInActivity_PChannelsInUser* internal_default_instance() {
    return reinterpret_cast<const PActivity_PUserInActivity_PChannelsInUser*>(
               &_PActivity_PUserInActivity_PChannelsInUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(PActivity_PUserInActivity_PChannelsInUser& a, PActivity_PUserInActivity_PChannelsInUser& b) {
    a.Swap(&b);
  }
  inline void Swap(PActivity_PUserInActivity_PChannelsInUser* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PActivity_PUserInActivity_PChannelsInUser* New() const final {
    return CreateMaybeMessage<PActivity_PUserInActivity_PChannelsInUser>(nullptr);
  }

  PActivity_PUserInActivity_PChannelsInUser* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PActivity_PUserInActivity_PChannelsInUser>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PActivity_PUserInActivity_PChannelsInUser& from);
  void MergeFrom(const PActivity_PUserInActivity_PChannelsInUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PActivity_PUserInActivity_PChannelsInUser* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PActivity.PUserInActivity.PChannelsInUser";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel PAttachmentsInChannel;

  // accessors -------------------------------------------------------

  enum : int {
    kAttachmentsFieldNumber = 7,
    kNameFieldNumber = 2,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 3,
    kUpdatedAtFieldNumber = 4,
    kUserIdFieldNumber = 5,
    kCountFieldNumber = 6,
  };
  // repeated .kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel attachments = 7;
  int attachments_size() const;
  private:
  int _internal_attachments_size() const;
  public:
  void clear_attachments();
  ::kandan_small::PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel* mutable_attachments(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel >*
      mutable_attachments();
  private:
  const ::kandan_small::PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel& _internal_attachments(int index) const;
  ::kandan_small::PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel* _internal_add_attachments();
  public:
  const ::kandan_small::PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel& attachments(int index) const;
  ::kandan_small::PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel* add_attachments();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel >&
      attachments() const;

  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 3;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 4;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 5;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 count = 6;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PActivity.PUserInActivity.PChannelsInUser)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel > attachments_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment) */ {
 public:
  PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment();
  virtual ~PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment();

  PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment(const PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment& from);
  PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment(PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment&& from) noexcept
    : PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment() {
    *this = ::std::move(from);
  }

  inline PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment& operator=(const PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment& from) {
    CopyFrom(from);
    return *this;
  }
  inline PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment& operator=(PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment* internal_default_instance() {
    return reinterpret_cast<const PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment*>(
               &_PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment& a, PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment& b) {
    a.Swap(&b);
  }
  inline void Swap(PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment* New() const final {
    return CreateMaybeMessage<PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment>(nullptr);
  }

  PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment& from);
  void MergeFrom(const PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 3,
    kUpdatedAtFieldNumber = 4,
    kUserIdFieldNumber = 5,
    kCountFieldNumber = 6,
  };
  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 3;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 4;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 5;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 count = 6;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PActivity_PUserInActivity_PAttachmentsInUser :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser) */ {
 public:
  PActivity_PUserInActivity_PAttachmentsInUser();
  virtual ~PActivity_PUserInActivity_PAttachmentsInUser();

  PActivity_PUserInActivity_PAttachmentsInUser(const PActivity_PUserInActivity_PAttachmentsInUser& from);
  PActivity_PUserInActivity_PAttachmentsInUser(PActivity_PUserInActivity_PAttachmentsInUser&& from) noexcept
    : PActivity_PUserInActivity_PAttachmentsInUser() {
    *this = ::std::move(from);
  }

  inline PActivity_PUserInActivity_PAttachmentsInUser& operator=(const PActivity_PUserInActivity_PAttachmentsInUser& from) {
    CopyFrom(from);
    return *this;
  }
  inline PActivity_PUserInActivity_PAttachmentsInUser& operator=(PActivity_PUserInActivity_PAttachmentsInUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PActivity_PUserInActivity_PAttachmentsInUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PActivity_PUserInActivity_PAttachmentsInUser* internal_default_instance() {
    return reinterpret_cast<const PActivity_PUserInActivity_PAttachmentsInUser*>(
               &_PActivity_PUserInActivity_PAttachmentsInUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(PActivity_PUserInActivity_PAttachmentsInUser& a, PActivity_PUserInActivity_PAttachmentsInUser& b) {
    a.Swap(&b);
  }
  inline void Swap(PActivity_PUserInActivity_PAttachmentsInUser* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PActivity_PUserInActivity_PAttachmentsInUser* New() const final {
    return CreateMaybeMessage<PActivity_PUserInActivity_PAttachmentsInUser>(nullptr);
  }

  PActivity_PUserInActivity_PAttachmentsInUser* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PActivity_PUserInActivity_PAttachmentsInUser>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PActivity_PUserInActivity_PAttachmentsInUser& from);
  void MergeFrom(const PActivity_PUserInActivity_PAttachmentsInUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PActivity_PUserInActivity_PAttachmentsInUser* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PActivity.PUserInActivity.PAttachmentsInUser";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment PChannelInAttachment;

  // accessors -------------------------------------------------------

  enum : int {
    kFileFileNameFieldNumber = 2,
    kFileContentTypeFieldNumber = 3,
    kChannelFieldNumber = 11,
    kIdFieldNumber = 1,
    kFileFileSizeFieldNumber = 4,
    kMessageIdFieldNumber = 5,
    kFileUpdatedAtFieldNumber = 6,
    kCreatedAtFieldNumber = 7,
    kUpdatedAtFieldNumber = 8,
    kUserIdFieldNumber = 9,
    kChannelIdFieldNumber = 10,
  };
  // string file_file_name = 2;
  void clear_file_file_name();
  const std::string& file_file_name() const;
  void set_file_file_name(const std::string& value);
  void set_file_file_name(std::string&& value);
  void set_file_file_name(const char* value);
  void set_file_file_name(const char* value, size_t size);
  std::string* mutable_file_file_name();
  std::string* release_file_file_name();
  void set_allocated_file_file_name(std::string* file_file_name);
  private:
  const std::string& _internal_file_file_name() const;
  void _internal_set_file_file_name(const std::string& value);
  std::string* _internal_mutable_file_file_name();
  public:

  // string file_content_type = 3;
  void clear_file_content_type();
  const std::string& file_content_type() const;
  void set_file_content_type(const std::string& value);
  void set_file_content_type(std::string&& value);
  void set_file_content_type(const char* value);
  void set_file_content_type(const char* value, size_t size);
  std::string* mutable_file_content_type();
  std::string* release_file_content_type();
  void set_allocated_file_content_type(std::string* file_content_type);
  private:
  const std::string& _internal_file_content_type() const;
  void _internal_set_file_content_type(const std::string& value);
  std::string* _internal_mutable_file_content_type();
  public:

  // .kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment channel = 11;
  bool has_channel() const;
  private:
  bool _internal_has_channel() const;
  public:
  void clear_channel();
  const ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment& channel() const;
  ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment* release_channel();
  ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment* mutable_channel();
  void set_allocated_channel(::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment* channel);
  private:
  const ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment& _internal_channel() const;
  ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment* _internal_mutable_channel();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_file_size = 4;
  void clear_file_file_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size() const;
  void set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_file_size() const;
  void _internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 message_id = 5;
  void clear_message_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id() const;
  void set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_message_id() const;
  void _internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_updated_at = 6;
  void clear_file_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at() const;
  void set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_updated_at() const;
  void _internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 7;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 8;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 9;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 10;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_file_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_content_type_;
  ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment* channel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PActivity_PUserInActivity :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PActivity.PUserInActivity) */ {
 public:
  PActivity_PUserInActivity();
  virtual ~PActivity_PUserInActivity();

  PActivity_PUserInActivity(const PActivity_PUserInActivity& from);
  PActivity_PUserInActivity(PActivity_PUserInActivity&& from) noexcept
    : PActivity_PUserInActivity() {
    *this = ::std::move(from);
  }

  inline PActivity_PUserInActivity& operator=(const PActivity_PUserInActivity& from) {
    CopyFrom(from);
    return *this;
  }
  inline PActivity_PUserInActivity& operator=(PActivity_PUserInActivity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PActivity_PUserInActivity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PActivity_PUserInActivity* internal_default_instance() {
    return reinterpret_cast<const PActivity_PUserInActivity*>(
               &_PActivity_PUserInActivity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(PActivity_PUserInActivity& a, PActivity_PUserInActivity& b) {
    a.Swap(&b);
  }
  inline void Swap(PActivity_PUserInActivity* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PActivity_PUserInActivity* New() const final {
    return CreateMaybeMessage<PActivity_PUserInActivity>(nullptr);
  }

  PActivity_PUserInActivity* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PActivity_PUserInActivity>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PActivity_PUserInActivity& from);
  void MergeFrom(const PActivity_PUserInActivity& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PActivity_PUserInActivity* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PActivity.PUserInActivity";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PActivity_PUserInActivity_PChannelsInUser PChannelsInUser;
  typedef PActivity_PUserInActivity_PAttachmentsInUser PAttachmentsInUser;

  // accessors -------------------------------------------------------

  enum : int {
    kChannelsFieldNumber = 24,
    kAttachmentsFieldNumber = 25,
    kEmailFieldNumber = 2,
    kEncryptedPasswordFieldNumber = 3,
    kResetPasswordTokenFieldNumber = 4,
    kFirstNameFieldNumber = 7,
    kLastNameFieldNumber = 8,
    kCurrentSignInIpFieldNumber = 11,
    kLastSignInIpFieldNumber = 13,
    kAuthTokenFieldNumber = 14,
    kLocaleFieldNumber = 15,
    kGravatarHashFieldNumber = 16,
    kUsernameFieldNumber = 17,
    kRegstatusFieldNumber = 18,
    kAvatarUrlFieldNumber = 21,
    kIdFieldNumber = 1,
    kResetPasswordSentAtFieldNumber = 5,
    kRememberCreatedAtFieldNumber = 6,
    kSigninCountFieldNumber = 9,
    kCurrentSignInAtFieldNumber = 10,
    kLastSignInAtFieldNumber = 12,
    kActiveFieldNumber = 19,
    kIsAdminFieldNumber = 20,
    kCreatedAtFieldNumber = 22,
    kUpdatedAtFieldNumber = 23,
  };
  // repeated .kandan_small.PActivity.PUserInActivity.PChannelsInUser channels = 24;
  int channels_size() const;
  private:
  int _internal_channels_size() const;
  public:
  void clear_channels();
  ::kandan_small::PActivity_PUserInActivity_PChannelsInUser* mutable_channels(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PUserInActivity_PChannelsInUser >*
      mutable_channels();
  private:
  const ::kandan_small::PActivity_PUserInActivity_PChannelsInUser& _internal_channels(int index) const;
  ::kandan_small::PActivity_PUserInActivity_PChannelsInUser* _internal_add_channels();
  public:
  const ::kandan_small::PActivity_PUserInActivity_PChannelsInUser& channels(int index) const;
  ::kandan_small::PActivity_PUserInActivity_PChannelsInUser* add_channels();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PUserInActivity_PChannelsInUser >&
      channels() const;

  // repeated .kandan_small.PActivity.PUserInActivity.PAttachmentsInUser attachments = 25;
  int attachments_size() const;
  private:
  int _internal_attachments_size() const;
  public:
  void clear_attachments();
  ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser* mutable_attachments(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser >*
      mutable_attachments();
  private:
  const ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser& _internal_attachments(int index) const;
  ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser* _internal_add_attachments();
  public:
  const ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser& attachments(int index) const;
  ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser* add_attachments();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser >&
      attachments() const;

  // string email = 2;
  void clear_email();
  const std::string& email() const;
  void set_email(const std::string& value);
  void set_email(std::string&& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  std::string* mutable_email();
  std::string* release_email();
  void set_allocated_email(std::string* email);
  private:
  const std::string& _internal_email() const;
  void _internal_set_email(const std::string& value);
  std::string* _internal_mutable_email();
  public:

  // string encrypted_password = 3;
  void clear_encrypted_password();
  const std::string& encrypted_password() const;
  void set_encrypted_password(const std::string& value);
  void set_encrypted_password(std::string&& value);
  void set_encrypted_password(const char* value);
  void set_encrypted_password(const char* value, size_t size);
  std::string* mutable_encrypted_password();
  std::string* release_encrypted_password();
  void set_allocated_encrypted_password(std::string* encrypted_password);
  private:
  const std::string& _internal_encrypted_password() const;
  void _internal_set_encrypted_password(const std::string& value);
  std::string* _internal_mutable_encrypted_password();
  public:

  // string reset_password_token = 4;
  void clear_reset_password_token();
  const std::string& reset_password_token() const;
  void set_reset_password_token(const std::string& value);
  void set_reset_password_token(std::string&& value);
  void set_reset_password_token(const char* value);
  void set_reset_password_token(const char* value, size_t size);
  std::string* mutable_reset_password_token();
  std::string* release_reset_password_token();
  void set_allocated_reset_password_token(std::string* reset_password_token);
  private:
  const std::string& _internal_reset_password_token() const;
  void _internal_set_reset_password_token(const std::string& value);
  std::string* _internal_mutable_reset_password_token();
  public:

  // string first_name = 7;
  void clear_first_name();
  const std::string& first_name() const;
  void set_first_name(const std::string& value);
  void set_first_name(std::string&& value);
  void set_first_name(const char* value);
  void set_first_name(const char* value, size_t size);
  std::string* mutable_first_name();
  std::string* release_first_name();
  void set_allocated_first_name(std::string* first_name);
  private:
  const std::string& _internal_first_name() const;
  void _internal_set_first_name(const std::string& value);
  std::string* _internal_mutable_first_name();
  public:

  // string last_name = 8;
  void clear_last_name();
  const std::string& last_name() const;
  void set_last_name(const std::string& value);
  void set_last_name(std::string&& value);
  void set_last_name(const char* value);
  void set_last_name(const char* value, size_t size);
  std::string* mutable_last_name();
  std::string* release_last_name();
  void set_allocated_last_name(std::string* last_name);
  private:
  const std::string& _internal_last_name() const;
  void _internal_set_last_name(const std::string& value);
  std::string* _internal_mutable_last_name();
  public:

  // string current_sign_in_ip = 11;
  void clear_current_sign_in_ip();
  const std::string& current_sign_in_ip() const;
  void set_current_sign_in_ip(const std::string& value);
  void set_current_sign_in_ip(std::string&& value);
  void set_current_sign_in_ip(const char* value);
  void set_current_sign_in_ip(const char* value, size_t size);
  std::string* mutable_current_sign_in_ip();
  std::string* release_current_sign_in_ip();
  void set_allocated_current_sign_in_ip(std::string* current_sign_in_ip);
  private:
  const std::string& _internal_current_sign_in_ip() const;
  void _internal_set_current_sign_in_ip(const std::string& value);
  std::string* _internal_mutable_current_sign_in_ip();
  public:

  // string last_sign_in_ip = 13;
  void clear_last_sign_in_ip();
  const std::string& last_sign_in_ip() const;
  void set_last_sign_in_ip(const std::string& value);
  void set_last_sign_in_ip(std::string&& value);
  void set_last_sign_in_ip(const char* value);
  void set_last_sign_in_ip(const char* value, size_t size);
  std::string* mutable_last_sign_in_ip();
  std::string* release_last_sign_in_ip();
  void set_allocated_last_sign_in_ip(std::string* last_sign_in_ip);
  private:
  const std::string& _internal_last_sign_in_ip() const;
  void _internal_set_last_sign_in_ip(const std::string& value);
  std::string* _internal_mutable_last_sign_in_ip();
  public:

  // string auth_token = 14;
  void clear_auth_token();
  const std::string& auth_token() const;
  void set_auth_token(const std::string& value);
  void set_auth_token(std::string&& value);
  void set_auth_token(const char* value);
  void set_auth_token(const char* value, size_t size);
  std::string* mutable_auth_token();
  std::string* release_auth_token();
  void set_allocated_auth_token(std::string* auth_token);
  private:
  const std::string& _internal_auth_token() const;
  void _internal_set_auth_token(const std::string& value);
  std::string* _internal_mutable_auth_token();
  public:

  // string locale = 15;
  void clear_locale();
  const std::string& locale() const;
  void set_locale(const std::string& value);
  void set_locale(std::string&& value);
  void set_locale(const char* value);
  void set_locale(const char* value, size_t size);
  std::string* mutable_locale();
  std::string* release_locale();
  void set_allocated_locale(std::string* locale);
  private:
  const std::string& _internal_locale() const;
  void _internal_set_locale(const std::string& value);
  std::string* _internal_mutable_locale();
  public:

  // string gravatar_hash = 16;
  void clear_gravatar_hash();
  const std::string& gravatar_hash() const;
  void set_gravatar_hash(const std::string& value);
  void set_gravatar_hash(std::string&& value);
  void set_gravatar_hash(const char* value);
  void set_gravatar_hash(const char* value, size_t size);
  std::string* mutable_gravatar_hash();
  std::string* release_gravatar_hash();
  void set_allocated_gravatar_hash(std::string* gravatar_hash);
  private:
  const std::string& _internal_gravatar_hash() const;
  void _internal_set_gravatar_hash(const std::string& value);
  std::string* _internal_mutable_gravatar_hash();
  public:

  // string username = 17;
  void clear_username();
  const std::string& username() const;
  void set_username(const std::string& value);
  void set_username(std::string&& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  std::string* mutable_username();
  std::string* release_username();
  void set_allocated_username(std::string* username);
  private:
  const std::string& _internal_username() const;
  void _internal_set_username(const std::string& value);
  std::string* _internal_mutable_username();
  public:

  // string regstatus = 18;
  void clear_regstatus();
  const std::string& regstatus() const;
  void set_regstatus(const std::string& value);
  void set_regstatus(std::string&& value);
  void set_regstatus(const char* value);
  void set_regstatus(const char* value, size_t size);
  std::string* mutable_regstatus();
  std::string* release_regstatus();
  void set_allocated_regstatus(std::string* regstatus);
  private:
  const std::string& _internal_regstatus() const;
  void _internal_set_regstatus(const std::string& value);
  std::string* _internal_mutable_regstatus();
  public:

  // string avatar_url = 21;
  void clear_avatar_url();
  const std::string& avatar_url() const;
  void set_avatar_url(const std::string& value);
  void set_avatar_url(std::string&& value);
  void set_avatar_url(const char* value);
  void set_avatar_url(const char* value, size_t size);
  std::string* mutable_avatar_url();
  std::string* release_avatar_url();
  void set_allocated_avatar_url(std::string* avatar_url);
  private:
  const std::string& _internal_avatar_url() const;
  void _internal_set_avatar_url(const std::string& value);
  std::string* _internal_mutable_avatar_url();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 reset_password_sent_at = 5;
  void clear_reset_password_sent_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_password_sent_at() const;
  void set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reset_password_sent_at() const;
  void _internal_set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 remember_created_at = 6;
  void clear_remember_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 remember_created_at() const;
  void set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_remember_created_at() const;
  void _internal_set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 signin_count = 9;
  void clear_signin_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 signin_count() const;
  void set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_signin_count() const;
  void _internal_set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 current_sign_in_at = 10;
  void clear_current_sign_in_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 current_sign_in_at() const;
  void set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_current_sign_in_at() const;
  void _internal_set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 last_sign_in_at = 12;
  void clear_last_sign_in_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_sign_in_at() const;
  void set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_sign_in_at() const;
  void _internal_set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool active = 19;
  void clear_active();
  bool active() const;
  void set_active(bool value);
  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);
  public:

  // bool is_admin = 20;
  void clear_is_admin();
  bool is_admin() const;
  void set_is_admin(bool value);
  private:
  bool _internal_is_admin() const;
  void _internal_set_is_admin(bool value);
  public:

  // uint32 created_at = 22;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 23;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PActivity.PUserInActivity)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PUserInActivity_PChannelsInUser > channels_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser > attachments_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr email_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr encrypted_password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reset_password_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr first_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr current_sign_in_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_sign_in_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr auth_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr locale_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gravatar_hash_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr username_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr regstatus_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_url_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_password_sent_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 remember_created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 signin_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 current_sign_in_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_sign_in_at_;
  bool active_;
  bool is_admin_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PActivity :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PActivity) */ {
 public:
  PActivity();
  virtual ~PActivity();

  PActivity(const PActivity& from);
  PActivity(PActivity&& from) noexcept
    : PActivity() {
    *this = ::std::move(from);
  }

  inline PActivity& operator=(const PActivity& from) {
    CopyFrom(from);
    return *this;
  }
  inline PActivity& operator=(PActivity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PActivity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PActivity* internal_default_instance() {
    return reinterpret_cast<const PActivity*>(
               &_PActivity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(PActivity& a, PActivity& b) {
    a.Swap(&b);
  }
  inline void Swap(PActivity* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PActivity* New() const final {
    return CreateMaybeMessage<PActivity>(nullptr);
  }

  PActivity* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PActivity>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PActivity& from);
  void MergeFrom(const PActivity& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PActivity* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PActivity";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PActivity_PChannelInActivity PChannelInActivity;
  typedef PActivity_PUserInActivity PUserInActivity;

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 4,
    kContentFieldNumber = 5,
    kChannelFieldNumber = 8,
    kUserFieldNumber = 9,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 2,
    kUpdatedAtFieldNumber = 3,
    kChannelIdFieldNumber = 6,
    kUserIdFieldNumber = 7,
  };
  // string action = 4;
  void clear_action();
  const std::string& action() const;
  void set_action(const std::string& value);
  void set_action(std::string&& value);
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  std::string* mutable_action();
  std::string* release_action();
  void set_allocated_action(std::string* action);
  private:
  const std::string& _internal_action() const;
  void _internal_set_action(const std::string& value);
  std::string* _internal_mutable_action();
  public:

  // string content = 5;
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // .kandan_small.PActivity.PChannelInActivity channel = 8;
  bool has_channel() const;
  private:
  bool _internal_has_channel() const;
  public:
  void clear_channel();
  const ::kandan_small::PActivity_PChannelInActivity& channel() const;
  ::kandan_small::PActivity_PChannelInActivity* release_channel();
  ::kandan_small::PActivity_PChannelInActivity* mutable_channel();
  void set_allocated_channel(::kandan_small::PActivity_PChannelInActivity* channel);
  private:
  const ::kandan_small::PActivity_PChannelInActivity& _internal_channel() const;
  ::kandan_small::PActivity_PChannelInActivity* _internal_mutable_channel();
  public:

  // .kandan_small.PActivity.PUserInActivity user = 9;
  bool has_user() const;
  private:
  bool _internal_has_user() const;
  public:
  void clear_user();
  const ::kandan_small::PActivity_PUserInActivity& user() const;
  ::kandan_small::PActivity_PUserInActivity* release_user();
  ::kandan_small::PActivity_PUserInActivity* mutable_user();
  void set_allocated_user(::kandan_small::PActivity_PUserInActivity* user);
  private:
  const ::kandan_small::PActivity_PUserInActivity& _internal_user() const;
  ::kandan_small::PActivity_PUserInActivity* _internal_mutable_user();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 2;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 3;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 6;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 7;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PActivity)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr action_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  ::kandan_small::PActivity_PChannelInActivity* channel_;
  ::kandan_small::PActivity_PUserInActivity* user_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel) */ {
 public:
  PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel();
  virtual ~PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel();

  PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel(const PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel& from);
  PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel(PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel&& from) noexcept
    : PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel() {
    *this = ::std::move(from);
  }

  inline PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel& operator=(const PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel& operator=(PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel* internal_default_instance() {
    return reinterpret_cast<const PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel*>(
               &_PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel& a, PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel& b) {
    a.Swap(&b);
  }
  inline void Swap(PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel* New() const final {
    return CreateMaybeMessage<PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel>(nullptr);
  }

  PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel& from);
  void MergeFrom(const PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 4,
    kContentFieldNumber = 5,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 2,
    kUpdatedAtFieldNumber = 3,
    kChannelIdFieldNumber = 6,
    kUserIdFieldNumber = 7,
  };
  // string action = 4;
  void clear_action();
  const std::string& action() const;
  void set_action(const std::string& value);
  void set_action(std::string&& value);
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  std::string* mutable_action();
  std::string* release_action();
  void set_allocated_action(std::string* action);
  private:
  const std::string& _internal_action() const;
  void _internal_set_action(const std::string& value);
  std::string* _internal_mutable_action();
  public:

  // string content = 5;
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 2;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 3;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 6;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 7;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr action_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PAttachment_PUserInAttachment_PChannelsInUser :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser) */ {
 public:
  PAttachment_PUserInAttachment_PChannelsInUser();
  virtual ~PAttachment_PUserInAttachment_PChannelsInUser();

  PAttachment_PUserInAttachment_PChannelsInUser(const PAttachment_PUserInAttachment_PChannelsInUser& from);
  PAttachment_PUserInAttachment_PChannelsInUser(PAttachment_PUserInAttachment_PChannelsInUser&& from) noexcept
    : PAttachment_PUserInAttachment_PChannelsInUser() {
    *this = ::std::move(from);
  }

  inline PAttachment_PUserInAttachment_PChannelsInUser& operator=(const PAttachment_PUserInAttachment_PChannelsInUser& from) {
    CopyFrom(from);
    return *this;
  }
  inline PAttachment_PUserInAttachment_PChannelsInUser& operator=(PAttachment_PUserInAttachment_PChannelsInUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PAttachment_PUserInAttachment_PChannelsInUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PAttachment_PUserInAttachment_PChannelsInUser* internal_default_instance() {
    return reinterpret_cast<const PAttachment_PUserInAttachment_PChannelsInUser*>(
               &_PAttachment_PUserInAttachment_PChannelsInUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(PAttachment_PUserInAttachment_PChannelsInUser& a, PAttachment_PUserInAttachment_PChannelsInUser& b) {
    a.Swap(&b);
  }
  inline void Swap(PAttachment_PUserInAttachment_PChannelsInUser* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PAttachment_PUserInAttachment_PChannelsInUser* New() const final {
    return CreateMaybeMessage<PAttachment_PUserInAttachment_PChannelsInUser>(nullptr);
  }

  PAttachment_PUserInAttachment_PChannelsInUser* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PAttachment_PUserInAttachment_PChannelsInUser>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PAttachment_PUserInAttachment_PChannelsInUser& from);
  void MergeFrom(const PAttachment_PUserInAttachment_PChannelsInUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PAttachment_PUserInAttachment_PChannelsInUser* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PAttachment.PUserInAttachment.PChannelsInUser";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel PActivitiesInChannel;

  // accessors -------------------------------------------------------

  enum : int {
    kActivitiesFieldNumber = 7,
    kNameFieldNumber = 2,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 3,
    kUpdatedAtFieldNumber = 4,
    kUserIdFieldNumber = 5,
    kCountFieldNumber = 6,
  };
  // repeated .kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel activities = 7;
  int activities_size() const;
  private:
  int _internal_activities_size() const;
  public:
  void clear_activities();
  ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel* mutable_activities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel >*
      mutable_activities();
  private:
  const ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel& _internal_activities(int index) const;
  ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel* _internal_add_activities();
  public:
  const ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel& activities(int index) const;
  ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel* add_activities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel >&
      activities() const;

  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 3;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 4;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 5;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 count = 6;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel > activities_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity) */ {
 public:
  PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity();
  virtual ~PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity();

  PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity(const PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity& from);
  PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity(PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity&& from) noexcept
    : PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity() {
    *this = ::std::move(from);
  }

  inline PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity& operator=(const PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity& from) {
    CopyFrom(from);
    return *this;
  }
  inline PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity& operator=(PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity* internal_default_instance() {
    return reinterpret_cast<const PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity*>(
               &_PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity& a, PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity& b) {
    a.Swap(&b);
  }
  inline void Swap(PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity* New() const final {
    return CreateMaybeMessage<PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity>(nullptr);
  }

  PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity& from);
  void MergeFrom(const PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 3,
    kUpdatedAtFieldNumber = 4,
    kUserIdFieldNumber = 5,
    kCountFieldNumber = 6,
  };
  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 3;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 4;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 5;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 count = 6;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PAttachment_PUserInAttachment_PActivitiesInUser :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser) */ {
 public:
  PAttachment_PUserInAttachment_PActivitiesInUser();
  virtual ~PAttachment_PUserInAttachment_PActivitiesInUser();

  PAttachment_PUserInAttachment_PActivitiesInUser(const PAttachment_PUserInAttachment_PActivitiesInUser& from);
  PAttachment_PUserInAttachment_PActivitiesInUser(PAttachment_PUserInAttachment_PActivitiesInUser&& from) noexcept
    : PAttachment_PUserInAttachment_PActivitiesInUser() {
    *this = ::std::move(from);
  }

  inline PAttachment_PUserInAttachment_PActivitiesInUser& operator=(const PAttachment_PUserInAttachment_PActivitiesInUser& from) {
    CopyFrom(from);
    return *this;
  }
  inline PAttachment_PUserInAttachment_PActivitiesInUser& operator=(PAttachment_PUserInAttachment_PActivitiesInUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PAttachment_PUserInAttachment_PActivitiesInUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PAttachment_PUserInAttachment_PActivitiesInUser* internal_default_instance() {
    return reinterpret_cast<const PAttachment_PUserInAttachment_PActivitiesInUser*>(
               &_PAttachment_PUserInAttachment_PActivitiesInUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(PAttachment_PUserInAttachment_PActivitiesInUser& a, PAttachment_PUserInAttachment_PActivitiesInUser& b) {
    a.Swap(&b);
  }
  inline void Swap(PAttachment_PUserInAttachment_PActivitiesInUser* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PAttachment_PUserInAttachment_PActivitiesInUser* New() const final {
    return CreateMaybeMessage<PAttachment_PUserInAttachment_PActivitiesInUser>(nullptr);
  }

  PAttachment_PUserInAttachment_PActivitiesInUser* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PAttachment_PUserInAttachment_PActivitiesInUser>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PAttachment_PUserInAttachment_PActivitiesInUser& from);
  void MergeFrom(const PAttachment_PUserInAttachment_PActivitiesInUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PAttachment_PUserInAttachment_PActivitiesInUser* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity PChannelInActivity;

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 4,
    kContentFieldNumber = 5,
    kChannelFieldNumber = 8,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 2,
    kUpdatedAtFieldNumber = 3,
    kChannelIdFieldNumber = 6,
    kUserIdFieldNumber = 7,
  };
  // string action = 4;
  void clear_action();
  const std::string& action() const;
  void set_action(const std::string& value);
  void set_action(std::string&& value);
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  std::string* mutable_action();
  std::string* release_action();
  void set_allocated_action(std::string* action);
  private:
  const std::string& _internal_action() const;
  void _internal_set_action(const std::string& value);
  std::string* _internal_mutable_action();
  public:

  // string content = 5;
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // .kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity channel = 8;
  bool has_channel() const;
  private:
  bool _internal_has_channel() const;
  public:
  void clear_channel();
  const ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity& channel() const;
  ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity* release_channel();
  ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity* mutable_channel();
  void set_allocated_channel(::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity* channel);
  private:
  const ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity& _internal_channel() const;
  ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity* _internal_mutable_channel();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 2;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 3;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 6;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 7;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr action_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity* channel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PAttachment_PUserInAttachment :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PAttachment.PUserInAttachment) */ {
 public:
  PAttachment_PUserInAttachment();
  virtual ~PAttachment_PUserInAttachment();

  PAttachment_PUserInAttachment(const PAttachment_PUserInAttachment& from);
  PAttachment_PUserInAttachment(PAttachment_PUserInAttachment&& from) noexcept
    : PAttachment_PUserInAttachment() {
    *this = ::std::move(from);
  }

  inline PAttachment_PUserInAttachment& operator=(const PAttachment_PUserInAttachment& from) {
    CopyFrom(from);
    return *this;
  }
  inline PAttachment_PUserInAttachment& operator=(PAttachment_PUserInAttachment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PAttachment_PUserInAttachment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PAttachment_PUserInAttachment* internal_default_instance() {
    return reinterpret_cast<const PAttachment_PUserInAttachment*>(
               &_PAttachment_PUserInAttachment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(PAttachment_PUserInAttachment& a, PAttachment_PUserInAttachment& b) {
    a.Swap(&b);
  }
  inline void Swap(PAttachment_PUserInAttachment* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PAttachment_PUserInAttachment* New() const final {
    return CreateMaybeMessage<PAttachment_PUserInAttachment>(nullptr);
  }

  PAttachment_PUserInAttachment* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PAttachment_PUserInAttachment>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PAttachment_PUserInAttachment& from);
  void MergeFrom(const PAttachment_PUserInAttachment& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PAttachment_PUserInAttachment* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PAttachment.PUserInAttachment";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PAttachment_PUserInAttachment_PChannelsInUser PChannelsInUser;
  typedef PAttachment_PUserInAttachment_PActivitiesInUser PActivitiesInUser;

  // accessors -------------------------------------------------------

  enum : int {
    kChannelsFieldNumber = 24,
    kActivitiesFieldNumber = 25,
    kEmailFieldNumber = 2,
    kEncryptedPasswordFieldNumber = 3,
    kResetPasswordTokenFieldNumber = 4,
    kFirstNameFieldNumber = 7,
    kLastNameFieldNumber = 8,
    kCurrentSignInIpFieldNumber = 11,
    kLastSignInIpFieldNumber = 13,
    kAuthTokenFieldNumber = 14,
    kLocaleFieldNumber = 15,
    kGravatarHashFieldNumber = 16,
    kUsernameFieldNumber = 17,
    kRegstatusFieldNumber = 18,
    kAvatarUrlFieldNumber = 21,
    kIdFieldNumber = 1,
    kResetPasswordSentAtFieldNumber = 5,
    kRememberCreatedAtFieldNumber = 6,
    kSigninCountFieldNumber = 9,
    kCurrentSignInAtFieldNumber = 10,
    kLastSignInAtFieldNumber = 12,
    kActiveFieldNumber = 19,
    kIsAdminFieldNumber = 20,
    kCreatedAtFieldNumber = 22,
    kUpdatedAtFieldNumber = 23,
  };
  // repeated .kandan_small.PAttachment.PUserInAttachment.PChannelsInUser channels = 24;
  int channels_size() const;
  private:
  int _internal_channels_size() const;
  public:
  void clear_channels();
  ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser* mutable_channels(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser >*
      mutable_channels();
  private:
  const ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser& _internal_channels(int index) const;
  ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser* _internal_add_channels();
  public:
  const ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser& channels(int index) const;
  ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser* add_channels();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser >&
      channels() const;

  // repeated .kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser activities = 25;
  int activities_size() const;
  private:
  int _internal_activities_size() const;
  public:
  void clear_activities();
  ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser* mutable_activities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser >*
      mutable_activities();
  private:
  const ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser& _internal_activities(int index) const;
  ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser* _internal_add_activities();
  public:
  const ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser& activities(int index) const;
  ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser* add_activities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser >&
      activities() const;

  // string email = 2;
  void clear_email();
  const std::string& email() const;
  void set_email(const std::string& value);
  void set_email(std::string&& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  std::string* mutable_email();
  std::string* release_email();
  void set_allocated_email(std::string* email);
  private:
  const std::string& _internal_email() const;
  void _internal_set_email(const std::string& value);
  std::string* _internal_mutable_email();
  public:

  // string encrypted_password = 3;
  void clear_encrypted_password();
  const std::string& encrypted_password() const;
  void set_encrypted_password(const std::string& value);
  void set_encrypted_password(std::string&& value);
  void set_encrypted_password(const char* value);
  void set_encrypted_password(const char* value, size_t size);
  std::string* mutable_encrypted_password();
  std::string* release_encrypted_password();
  void set_allocated_encrypted_password(std::string* encrypted_password);
  private:
  const std::string& _internal_encrypted_password() const;
  void _internal_set_encrypted_password(const std::string& value);
  std::string* _internal_mutable_encrypted_password();
  public:

  // string reset_password_token = 4;
  void clear_reset_password_token();
  const std::string& reset_password_token() const;
  void set_reset_password_token(const std::string& value);
  void set_reset_password_token(std::string&& value);
  void set_reset_password_token(const char* value);
  void set_reset_password_token(const char* value, size_t size);
  std::string* mutable_reset_password_token();
  std::string* release_reset_password_token();
  void set_allocated_reset_password_token(std::string* reset_password_token);
  private:
  const std::string& _internal_reset_password_token() const;
  void _internal_set_reset_password_token(const std::string& value);
  std::string* _internal_mutable_reset_password_token();
  public:

  // string first_name = 7;
  void clear_first_name();
  const std::string& first_name() const;
  void set_first_name(const std::string& value);
  void set_first_name(std::string&& value);
  void set_first_name(const char* value);
  void set_first_name(const char* value, size_t size);
  std::string* mutable_first_name();
  std::string* release_first_name();
  void set_allocated_first_name(std::string* first_name);
  private:
  const std::string& _internal_first_name() const;
  void _internal_set_first_name(const std::string& value);
  std::string* _internal_mutable_first_name();
  public:

  // string last_name = 8;
  void clear_last_name();
  const std::string& last_name() const;
  void set_last_name(const std::string& value);
  void set_last_name(std::string&& value);
  void set_last_name(const char* value);
  void set_last_name(const char* value, size_t size);
  std::string* mutable_last_name();
  std::string* release_last_name();
  void set_allocated_last_name(std::string* last_name);
  private:
  const std::string& _internal_last_name() const;
  void _internal_set_last_name(const std::string& value);
  std::string* _internal_mutable_last_name();
  public:

  // string current_sign_in_ip = 11;
  void clear_current_sign_in_ip();
  const std::string& current_sign_in_ip() const;
  void set_current_sign_in_ip(const std::string& value);
  void set_current_sign_in_ip(std::string&& value);
  void set_current_sign_in_ip(const char* value);
  void set_current_sign_in_ip(const char* value, size_t size);
  std::string* mutable_current_sign_in_ip();
  std::string* release_current_sign_in_ip();
  void set_allocated_current_sign_in_ip(std::string* current_sign_in_ip);
  private:
  const std::string& _internal_current_sign_in_ip() const;
  void _internal_set_current_sign_in_ip(const std::string& value);
  std::string* _internal_mutable_current_sign_in_ip();
  public:

  // string last_sign_in_ip = 13;
  void clear_last_sign_in_ip();
  const std::string& last_sign_in_ip() const;
  void set_last_sign_in_ip(const std::string& value);
  void set_last_sign_in_ip(std::string&& value);
  void set_last_sign_in_ip(const char* value);
  void set_last_sign_in_ip(const char* value, size_t size);
  std::string* mutable_last_sign_in_ip();
  std::string* release_last_sign_in_ip();
  void set_allocated_last_sign_in_ip(std::string* last_sign_in_ip);
  private:
  const std::string& _internal_last_sign_in_ip() const;
  void _internal_set_last_sign_in_ip(const std::string& value);
  std::string* _internal_mutable_last_sign_in_ip();
  public:

  // string auth_token = 14;
  void clear_auth_token();
  const std::string& auth_token() const;
  void set_auth_token(const std::string& value);
  void set_auth_token(std::string&& value);
  void set_auth_token(const char* value);
  void set_auth_token(const char* value, size_t size);
  std::string* mutable_auth_token();
  std::string* release_auth_token();
  void set_allocated_auth_token(std::string* auth_token);
  private:
  const std::string& _internal_auth_token() const;
  void _internal_set_auth_token(const std::string& value);
  std::string* _internal_mutable_auth_token();
  public:

  // string locale = 15;
  void clear_locale();
  const std::string& locale() const;
  void set_locale(const std::string& value);
  void set_locale(std::string&& value);
  void set_locale(const char* value);
  void set_locale(const char* value, size_t size);
  std::string* mutable_locale();
  std::string* release_locale();
  void set_allocated_locale(std::string* locale);
  private:
  const std::string& _internal_locale() const;
  void _internal_set_locale(const std::string& value);
  std::string* _internal_mutable_locale();
  public:

  // string gravatar_hash = 16;
  void clear_gravatar_hash();
  const std::string& gravatar_hash() const;
  void set_gravatar_hash(const std::string& value);
  void set_gravatar_hash(std::string&& value);
  void set_gravatar_hash(const char* value);
  void set_gravatar_hash(const char* value, size_t size);
  std::string* mutable_gravatar_hash();
  std::string* release_gravatar_hash();
  void set_allocated_gravatar_hash(std::string* gravatar_hash);
  private:
  const std::string& _internal_gravatar_hash() const;
  void _internal_set_gravatar_hash(const std::string& value);
  std::string* _internal_mutable_gravatar_hash();
  public:

  // string username = 17;
  void clear_username();
  const std::string& username() const;
  void set_username(const std::string& value);
  void set_username(std::string&& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  std::string* mutable_username();
  std::string* release_username();
  void set_allocated_username(std::string* username);
  private:
  const std::string& _internal_username() const;
  void _internal_set_username(const std::string& value);
  std::string* _internal_mutable_username();
  public:

  // string regstatus = 18;
  void clear_regstatus();
  const std::string& regstatus() const;
  void set_regstatus(const std::string& value);
  void set_regstatus(std::string&& value);
  void set_regstatus(const char* value);
  void set_regstatus(const char* value, size_t size);
  std::string* mutable_regstatus();
  std::string* release_regstatus();
  void set_allocated_regstatus(std::string* regstatus);
  private:
  const std::string& _internal_regstatus() const;
  void _internal_set_regstatus(const std::string& value);
  std::string* _internal_mutable_regstatus();
  public:

  // string avatar_url = 21;
  void clear_avatar_url();
  const std::string& avatar_url() const;
  void set_avatar_url(const std::string& value);
  void set_avatar_url(std::string&& value);
  void set_avatar_url(const char* value);
  void set_avatar_url(const char* value, size_t size);
  std::string* mutable_avatar_url();
  std::string* release_avatar_url();
  void set_allocated_avatar_url(std::string* avatar_url);
  private:
  const std::string& _internal_avatar_url() const;
  void _internal_set_avatar_url(const std::string& value);
  std::string* _internal_mutable_avatar_url();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 reset_password_sent_at = 5;
  void clear_reset_password_sent_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_password_sent_at() const;
  void set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reset_password_sent_at() const;
  void _internal_set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 remember_created_at = 6;
  void clear_remember_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 remember_created_at() const;
  void set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_remember_created_at() const;
  void _internal_set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 signin_count = 9;
  void clear_signin_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 signin_count() const;
  void set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_signin_count() const;
  void _internal_set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 current_sign_in_at = 10;
  void clear_current_sign_in_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 current_sign_in_at() const;
  void set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_current_sign_in_at() const;
  void _internal_set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 last_sign_in_at = 12;
  void clear_last_sign_in_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_sign_in_at() const;
  void set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_sign_in_at() const;
  void _internal_set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool active = 19;
  void clear_active();
  bool active() const;
  void set_active(bool value);
  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);
  public:

  // bool is_admin = 20;
  void clear_is_admin();
  bool is_admin() const;
  void set_is_admin(bool value);
  private:
  bool _internal_is_admin() const;
  void _internal_set_is_admin(bool value);
  public:

  // uint32 created_at = 22;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 23;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PAttachment.PUserInAttachment)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser > channels_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser > activities_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr email_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr encrypted_password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reset_password_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr first_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr current_sign_in_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_sign_in_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr auth_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr locale_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gravatar_hash_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr username_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr regstatus_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_url_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_password_sent_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 remember_created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 signin_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 current_sign_in_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_sign_in_at_;
  bool active_;
  bool is_admin_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity) */ {
 public:
  PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity();
  virtual ~PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity();

  PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity(const PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity& from);
  PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity(PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity&& from) noexcept
    : PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity() {
    *this = ::std::move(from);
  }

  inline PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity& operator=(const PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity& from) {
    CopyFrom(from);
    return *this;
  }
  inline PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity& operator=(PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity* internal_default_instance() {
    return reinterpret_cast<const PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity*>(
               &_PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity& a, PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity& b) {
    a.Swap(&b);
  }
  inline void Swap(PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity* New() const final {
    return CreateMaybeMessage<PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity>(nullptr);
  }

  PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity& from);
  void MergeFrom(const PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEmailFieldNumber = 2,
    kEncryptedPasswordFieldNumber = 3,
    kResetPasswordTokenFieldNumber = 4,
    kFirstNameFieldNumber = 7,
    kLastNameFieldNumber = 8,
    kCurrentSignInIpFieldNumber = 11,
    kLastSignInIpFieldNumber = 13,
    kAuthTokenFieldNumber = 14,
    kLocaleFieldNumber = 15,
    kGravatarHashFieldNumber = 16,
    kUsernameFieldNumber = 17,
    kRegstatusFieldNumber = 18,
    kAvatarUrlFieldNumber = 21,
    kIdFieldNumber = 1,
    kResetPasswordSentAtFieldNumber = 5,
    kRememberCreatedAtFieldNumber = 6,
    kSigninCountFieldNumber = 9,
    kCurrentSignInAtFieldNumber = 10,
    kLastSignInAtFieldNumber = 12,
    kActiveFieldNumber = 19,
    kIsAdminFieldNumber = 20,
    kCreatedAtFieldNumber = 22,
    kUpdatedAtFieldNumber = 23,
  };
  // string email = 2;
  void clear_email();
  const std::string& email() const;
  void set_email(const std::string& value);
  void set_email(std::string&& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  std::string* mutable_email();
  std::string* release_email();
  void set_allocated_email(std::string* email);
  private:
  const std::string& _internal_email() const;
  void _internal_set_email(const std::string& value);
  std::string* _internal_mutable_email();
  public:

  // string encrypted_password = 3;
  void clear_encrypted_password();
  const std::string& encrypted_password() const;
  void set_encrypted_password(const std::string& value);
  void set_encrypted_password(std::string&& value);
  void set_encrypted_password(const char* value);
  void set_encrypted_password(const char* value, size_t size);
  std::string* mutable_encrypted_password();
  std::string* release_encrypted_password();
  void set_allocated_encrypted_password(std::string* encrypted_password);
  private:
  const std::string& _internal_encrypted_password() const;
  void _internal_set_encrypted_password(const std::string& value);
  std::string* _internal_mutable_encrypted_password();
  public:

  // string reset_password_token = 4;
  void clear_reset_password_token();
  const std::string& reset_password_token() const;
  void set_reset_password_token(const std::string& value);
  void set_reset_password_token(std::string&& value);
  void set_reset_password_token(const char* value);
  void set_reset_password_token(const char* value, size_t size);
  std::string* mutable_reset_password_token();
  std::string* release_reset_password_token();
  void set_allocated_reset_password_token(std::string* reset_password_token);
  private:
  const std::string& _internal_reset_password_token() const;
  void _internal_set_reset_password_token(const std::string& value);
  std::string* _internal_mutable_reset_password_token();
  public:

  // string first_name = 7;
  void clear_first_name();
  const std::string& first_name() const;
  void set_first_name(const std::string& value);
  void set_first_name(std::string&& value);
  void set_first_name(const char* value);
  void set_first_name(const char* value, size_t size);
  std::string* mutable_first_name();
  std::string* release_first_name();
  void set_allocated_first_name(std::string* first_name);
  private:
  const std::string& _internal_first_name() const;
  void _internal_set_first_name(const std::string& value);
  std::string* _internal_mutable_first_name();
  public:

  // string last_name = 8;
  void clear_last_name();
  const std::string& last_name() const;
  void set_last_name(const std::string& value);
  void set_last_name(std::string&& value);
  void set_last_name(const char* value);
  void set_last_name(const char* value, size_t size);
  std::string* mutable_last_name();
  std::string* release_last_name();
  void set_allocated_last_name(std::string* last_name);
  private:
  const std::string& _internal_last_name() const;
  void _internal_set_last_name(const std::string& value);
  std::string* _internal_mutable_last_name();
  public:

  // string current_sign_in_ip = 11;
  void clear_current_sign_in_ip();
  const std::string& current_sign_in_ip() const;
  void set_current_sign_in_ip(const std::string& value);
  void set_current_sign_in_ip(std::string&& value);
  void set_current_sign_in_ip(const char* value);
  void set_current_sign_in_ip(const char* value, size_t size);
  std::string* mutable_current_sign_in_ip();
  std::string* release_current_sign_in_ip();
  void set_allocated_current_sign_in_ip(std::string* current_sign_in_ip);
  private:
  const std::string& _internal_current_sign_in_ip() const;
  void _internal_set_current_sign_in_ip(const std::string& value);
  std::string* _internal_mutable_current_sign_in_ip();
  public:

  // string last_sign_in_ip = 13;
  void clear_last_sign_in_ip();
  const std::string& last_sign_in_ip() const;
  void set_last_sign_in_ip(const std::string& value);
  void set_last_sign_in_ip(std::string&& value);
  void set_last_sign_in_ip(const char* value);
  void set_last_sign_in_ip(const char* value, size_t size);
  std::string* mutable_last_sign_in_ip();
  std::string* release_last_sign_in_ip();
  void set_allocated_last_sign_in_ip(std::string* last_sign_in_ip);
  private:
  const std::string& _internal_last_sign_in_ip() const;
  void _internal_set_last_sign_in_ip(const std::string& value);
  std::string* _internal_mutable_last_sign_in_ip();
  public:

  // string auth_token = 14;
  void clear_auth_token();
  const std::string& auth_token() const;
  void set_auth_token(const std::string& value);
  void set_auth_token(std::string&& value);
  void set_auth_token(const char* value);
  void set_auth_token(const char* value, size_t size);
  std::string* mutable_auth_token();
  std::string* release_auth_token();
  void set_allocated_auth_token(std::string* auth_token);
  private:
  const std::string& _internal_auth_token() const;
  void _internal_set_auth_token(const std::string& value);
  std::string* _internal_mutable_auth_token();
  public:

  // string locale = 15;
  void clear_locale();
  const std::string& locale() const;
  void set_locale(const std::string& value);
  void set_locale(std::string&& value);
  void set_locale(const char* value);
  void set_locale(const char* value, size_t size);
  std::string* mutable_locale();
  std::string* release_locale();
  void set_allocated_locale(std::string* locale);
  private:
  const std::string& _internal_locale() const;
  void _internal_set_locale(const std::string& value);
  std::string* _internal_mutable_locale();
  public:

  // string gravatar_hash = 16;
  void clear_gravatar_hash();
  const std::string& gravatar_hash() const;
  void set_gravatar_hash(const std::string& value);
  void set_gravatar_hash(std::string&& value);
  void set_gravatar_hash(const char* value);
  void set_gravatar_hash(const char* value, size_t size);
  std::string* mutable_gravatar_hash();
  std::string* release_gravatar_hash();
  void set_allocated_gravatar_hash(std::string* gravatar_hash);
  private:
  const std::string& _internal_gravatar_hash() const;
  void _internal_set_gravatar_hash(const std::string& value);
  std::string* _internal_mutable_gravatar_hash();
  public:

  // string username = 17;
  void clear_username();
  const std::string& username() const;
  void set_username(const std::string& value);
  void set_username(std::string&& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  std::string* mutable_username();
  std::string* release_username();
  void set_allocated_username(std::string* username);
  private:
  const std::string& _internal_username() const;
  void _internal_set_username(const std::string& value);
  std::string* _internal_mutable_username();
  public:

  // string regstatus = 18;
  void clear_regstatus();
  const std::string& regstatus() const;
  void set_regstatus(const std::string& value);
  void set_regstatus(std::string&& value);
  void set_regstatus(const char* value);
  void set_regstatus(const char* value, size_t size);
  std::string* mutable_regstatus();
  std::string* release_regstatus();
  void set_allocated_regstatus(std::string* regstatus);
  private:
  const std::string& _internal_regstatus() const;
  void _internal_set_regstatus(const std::string& value);
  std::string* _internal_mutable_regstatus();
  public:

  // string avatar_url = 21;
  void clear_avatar_url();
  const std::string& avatar_url() const;
  void set_avatar_url(const std::string& value);
  void set_avatar_url(std::string&& value);
  void set_avatar_url(const char* value);
  void set_avatar_url(const char* value, size_t size);
  std::string* mutable_avatar_url();
  std::string* release_avatar_url();
  void set_allocated_avatar_url(std::string* avatar_url);
  private:
  const std::string& _internal_avatar_url() const;
  void _internal_set_avatar_url(const std::string& value);
  std::string* _internal_mutable_avatar_url();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 reset_password_sent_at = 5;
  void clear_reset_password_sent_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_password_sent_at() const;
  void set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reset_password_sent_at() const;
  void _internal_set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 remember_created_at = 6;
  void clear_remember_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 remember_created_at() const;
  void set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_remember_created_at() const;
  void _internal_set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 signin_count = 9;
  void clear_signin_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 signin_count() const;
  void set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_signin_count() const;
  void _internal_set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 current_sign_in_at = 10;
  void clear_current_sign_in_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 current_sign_in_at() const;
  void set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_current_sign_in_at() const;
  void _internal_set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 last_sign_in_at = 12;
  void clear_last_sign_in_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_sign_in_at() const;
  void set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_sign_in_at() const;
  void _internal_set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool active = 19;
  void clear_active();
  bool active() const;
  void set_active(bool value);
  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);
  public:

  // bool is_admin = 20;
  void clear_is_admin();
  bool is_admin() const;
  void set_is_admin(bool value);
  private:
  bool _internal_is_admin() const;
  void _internal_set_is_admin(bool value);
  public:

  // uint32 created_at = 22;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 23;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr email_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr encrypted_password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reset_password_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr first_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr current_sign_in_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_sign_in_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr auth_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr locale_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gravatar_hash_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr username_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr regstatus_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_url_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_password_sent_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 remember_created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 signin_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 current_sign_in_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_sign_in_at_;
  bool active_;
  bool is_admin_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PAttachment_PChannelInAttachment_PActivitiesInChannel :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel) */ {
 public:
  PAttachment_PChannelInAttachment_PActivitiesInChannel();
  virtual ~PAttachment_PChannelInAttachment_PActivitiesInChannel();

  PAttachment_PChannelInAttachment_PActivitiesInChannel(const PAttachment_PChannelInAttachment_PActivitiesInChannel& from);
  PAttachment_PChannelInAttachment_PActivitiesInChannel(PAttachment_PChannelInAttachment_PActivitiesInChannel&& from) noexcept
    : PAttachment_PChannelInAttachment_PActivitiesInChannel() {
    *this = ::std::move(from);
  }

  inline PAttachment_PChannelInAttachment_PActivitiesInChannel& operator=(const PAttachment_PChannelInAttachment_PActivitiesInChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline PAttachment_PChannelInAttachment_PActivitiesInChannel& operator=(PAttachment_PChannelInAttachment_PActivitiesInChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PAttachment_PChannelInAttachment_PActivitiesInChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PAttachment_PChannelInAttachment_PActivitiesInChannel* internal_default_instance() {
    return reinterpret_cast<const PAttachment_PChannelInAttachment_PActivitiesInChannel*>(
               &_PAttachment_PChannelInAttachment_PActivitiesInChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(PAttachment_PChannelInAttachment_PActivitiesInChannel& a, PAttachment_PChannelInAttachment_PActivitiesInChannel& b) {
    a.Swap(&b);
  }
  inline void Swap(PAttachment_PChannelInAttachment_PActivitiesInChannel* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PAttachment_PChannelInAttachment_PActivitiesInChannel* New() const final {
    return CreateMaybeMessage<PAttachment_PChannelInAttachment_PActivitiesInChannel>(nullptr);
  }

  PAttachment_PChannelInAttachment_PActivitiesInChannel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PAttachment_PChannelInAttachment_PActivitiesInChannel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PAttachment_PChannelInAttachment_PActivitiesInChannel& from);
  void MergeFrom(const PAttachment_PChannelInAttachment_PActivitiesInChannel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PAttachment_PChannelInAttachment_PActivitiesInChannel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity PUserInActivity;

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 4,
    kContentFieldNumber = 5,
    kUserFieldNumber = 8,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 2,
    kUpdatedAtFieldNumber = 3,
    kChannelIdFieldNumber = 6,
    kUserIdFieldNumber = 7,
  };
  // string action = 4;
  void clear_action();
  const std::string& action() const;
  void set_action(const std::string& value);
  void set_action(std::string&& value);
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  std::string* mutable_action();
  std::string* release_action();
  void set_allocated_action(std::string* action);
  private:
  const std::string& _internal_action() const;
  void _internal_set_action(const std::string& value);
  std::string* _internal_mutable_action();
  public:

  // string content = 5;
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // .kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity user = 8;
  bool has_user() const;
  private:
  bool _internal_has_user() const;
  public:
  void clear_user();
  const ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity& user() const;
  ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity* release_user();
  ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity* mutable_user();
  void set_allocated_user(::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity* user);
  private:
  const ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity& _internal_user() const;
  ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity* _internal_mutable_user();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 2;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 3;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 6;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 7;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr action_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity* user_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser) */ {
 public:
  PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser();
  virtual ~PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser();

  PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser(const PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser& from);
  PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser(PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser&& from) noexcept
    : PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser() {
    *this = ::std::move(from);
  }

  inline PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser& operator=(const PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser& from) {
    CopyFrom(from);
    return *this;
  }
  inline PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser& operator=(PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser* internal_default_instance() {
    return reinterpret_cast<const PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser*>(
               &_PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser& a, PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser& b) {
    a.Swap(&b);
  }
  inline void Swap(PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser* New() const final {
    return CreateMaybeMessage<PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser>(nullptr);
  }

  PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser& from);
  void MergeFrom(const PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 4,
    kContentFieldNumber = 5,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 2,
    kUpdatedAtFieldNumber = 3,
    kChannelIdFieldNumber = 6,
    kUserIdFieldNumber = 7,
  };
  // string action = 4;
  void clear_action();
  const std::string& action() const;
  void set_action(const std::string& value);
  void set_action(std::string&& value);
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  std::string* mutable_action();
  std::string* release_action();
  void set_allocated_action(std::string* action);
  private:
  const std::string& _internal_action() const;
  void _internal_set_action(const std::string& value);
  std::string* _internal_mutable_action();
  public:

  // string content = 5;
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 2;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 3;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 6;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 7;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr action_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PAttachment_PChannelInAttachment_PUserInChannel :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel) */ {
 public:
  PAttachment_PChannelInAttachment_PUserInChannel();
  virtual ~PAttachment_PChannelInAttachment_PUserInChannel();

  PAttachment_PChannelInAttachment_PUserInChannel(const PAttachment_PChannelInAttachment_PUserInChannel& from);
  PAttachment_PChannelInAttachment_PUserInChannel(PAttachment_PChannelInAttachment_PUserInChannel&& from) noexcept
    : PAttachment_PChannelInAttachment_PUserInChannel() {
    *this = ::std::move(from);
  }

  inline PAttachment_PChannelInAttachment_PUserInChannel& operator=(const PAttachment_PChannelInAttachment_PUserInChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline PAttachment_PChannelInAttachment_PUserInChannel& operator=(PAttachment_PChannelInAttachment_PUserInChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PAttachment_PChannelInAttachment_PUserInChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PAttachment_PChannelInAttachment_PUserInChannel* internal_default_instance() {
    return reinterpret_cast<const PAttachment_PChannelInAttachment_PUserInChannel*>(
               &_PAttachment_PChannelInAttachment_PUserInChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(PAttachment_PChannelInAttachment_PUserInChannel& a, PAttachment_PChannelInAttachment_PUserInChannel& b) {
    a.Swap(&b);
  }
  inline void Swap(PAttachment_PChannelInAttachment_PUserInChannel* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PAttachment_PChannelInAttachment_PUserInChannel* New() const final {
    return CreateMaybeMessage<PAttachment_PChannelInAttachment_PUserInChannel>(nullptr);
  }

  PAttachment_PChannelInAttachment_PUserInChannel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PAttachment_PChannelInAttachment_PUserInChannel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PAttachment_PChannelInAttachment_PUserInChannel& from);
  void MergeFrom(const PAttachment_PChannelInAttachment_PUserInChannel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PAttachment_PChannelInAttachment_PUserInChannel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PAttachment.PChannelInAttachment.PUserInChannel";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser PActivitiesInUser;

  // accessors -------------------------------------------------------

  enum : int {
    kActivitiesFieldNumber = 24,
    kEmailFieldNumber = 2,
    kEncryptedPasswordFieldNumber = 3,
    kResetPasswordTokenFieldNumber = 4,
    kFirstNameFieldNumber = 7,
    kLastNameFieldNumber = 8,
    kCurrentSignInIpFieldNumber = 11,
    kLastSignInIpFieldNumber = 13,
    kAuthTokenFieldNumber = 14,
    kLocaleFieldNumber = 15,
    kGravatarHashFieldNumber = 16,
    kUsernameFieldNumber = 17,
    kRegstatusFieldNumber = 18,
    kAvatarUrlFieldNumber = 21,
    kIdFieldNumber = 1,
    kResetPasswordSentAtFieldNumber = 5,
    kRememberCreatedAtFieldNumber = 6,
    kSigninCountFieldNumber = 9,
    kCurrentSignInAtFieldNumber = 10,
    kLastSignInAtFieldNumber = 12,
    kActiveFieldNumber = 19,
    kIsAdminFieldNumber = 20,
    kCreatedAtFieldNumber = 22,
    kUpdatedAtFieldNumber = 23,
  };
  // repeated .kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser activities = 24;
  int activities_size() const;
  private:
  int _internal_activities_size() const;
  public:
  void clear_activities();
  ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser* mutable_activities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser >*
      mutable_activities();
  private:
  const ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser& _internal_activities(int index) const;
  ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser* _internal_add_activities();
  public:
  const ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser& activities(int index) const;
  ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser* add_activities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser >&
      activities() const;

  // string email = 2;
  void clear_email();
  const std::string& email() const;
  void set_email(const std::string& value);
  void set_email(std::string&& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  std::string* mutable_email();
  std::string* release_email();
  void set_allocated_email(std::string* email);
  private:
  const std::string& _internal_email() const;
  void _internal_set_email(const std::string& value);
  std::string* _internal_mutable_email();
  public:

  // string encrypted_password = 3;
  void clear_encrypted_password();
  const std::string& encrypted_password() const;
  void set_encrypted_password(const std::string& value);
  void set_encrypted_password(std::string&& value);
  void set_encrypted_password(const char* value);
  void set_encrypted_password(const char* value, size_t size);
  std::string* mutable_encrypted_password();
  std::string* release_encrypted_password();
  void set_allocated_encrypted_password(std::string* encrypted_password);
  private:
  const std::string& _internal_encrypted_password() const;
  void _internal_set_encrypted_password(const std::string& value);
  std::string* _internal_mutable_encrypted_password();
  public:

  // string reset_password_token = 4;
  void clear_reset_password_token();
  const std::string& reset_password_token() const;
  void set_reset_password_token(const std::string& value);
  void set_reset_password_token(std::string&& value);
  void set_reset_password_token(const char* value);
  void set_reset_password_token(const char* value, size_t size);
  std::string* mutable_reset_password_token();
  std::string* release_reset_password_token();
  void set_allocated_reset_password_token(std::string* reset_password_token);
  private:
  const std::string& _internal_reset_password_token() const;
  void _internal_set_reset_password_token(const std::string& value);
  std::string* _internal_mutable_reset_password_token();
  public:

  // string first_name = 7;
  void clear_first_name();
  const std::string& first_name() const;
  void set_first_name(const std::string& value);
  void set_first_name(std::string&& value);
  void set_first_name(const char* value);
  void set_first_name(const char* value, size_t size);
  std::string* mutable_first_name();
  std::string* release_first_name();
  void set_allocated_first_name(std::string* first_name);
  private:
  const std::string& _internal_first_name() const;
  void _internal_set_first_name(const std::string& value);
  std::string* _internal_mutable_first_name();
  public:

  // string last_name = 8;
  void clear_last_name();
  const std::string& last_name() const;
  void set_last_name(const std::string& value);
  void set_last_name(std::string&& value);
  void set_last_name(const char* value);
  void set_last_name(const char* value, size_t size);
  std::string* mutable_last_name();
  std::string* release_last_name();
  void set_allocated_last_name(std::string* last_name);
  private:
  const std::string& _internal_last_name() const;
  void _internal_set_last_name(const std::string& value);
  std::string* _internal_mutable_last_name();
  public:

  // string current_sign_in_ip = 11;
  void clear_current_sign_in_ip();
  const std::string& current_sign_in_ip() const;
  void set_current_sign_in_ip(const std::string& value);
  void set_current_sign_in_ip(std::string&& value);
  void set_current_sign_in_ip(const char* value);
  void set_current_sign_in_ip(const char* value, size_t size);
  std::string* mutable_current_sign_in_ip();
  std::string* release_current_sign_in_ip();
  void set_allocated_current_sign_in_ip(std::string* current_sign_in_ip);
  private:
  const std::string& _internal_current_sign_in_ip() const;
  void _internal_set_current_sign_in_ip(const std::string& value);
  std::string* _internal_mutable_current_sign_in_ip();
  public:

  // string last_sign_in_ip = 13;
  void clear_last_sign_in_ip();
  const std::string& last_sign_in_ip() const;
  void set_last_sign_in_ip(const std::string& value);
  void set_last_sign_in_ip(std::string&& value);
  void set_last_sign_in_ip(const char* value);
  void set_last_sign_in_ip(const char* value, size_t size);
  std::string* mutable_last_sign_in_ip();
  std::string* release_last_sign_in_ip();
  void set_allocated_last_sign_in_ip(std::string* last_sign_in_ip);
  private:
  const std::string& _internal_last_sign_in_ip() const;
  void _internal_set_last_sign_in_ip(const std::string& value);
  std::string* _internal_mutable_last_sign_in_ip();
  public:

  // string auth_token = 14;
  void clear_auth_token();
  const std::string& auth_token() const;
  void set_auth_token(const std::string& value);
  void set_auth_token(std::string&& value);
  void set_auth_token(const char* value);
  void set_auth_token(const char* value, size_t size);
  std::string* mutable_auth_token();
  std::string* release_auth_token();
  void set_allocated_auth_token(std::string* auth_token);
  private:
  const std::string& _internal_auth_token() const;
  void _internal_set_auth_token(const std::string& value);
  std::string* _internal_mutable_auth_token();
  public:

  // string locale = 15;
  void clear_locale();
  const std::string& locale() const;
  void set_locale(const std::string& value);
  void set_locale(std::string&& value);
  void set_locale(const char* value);
  void set_locale(const char* value, size_t size);
  std::string* mutable_locale();
  std::string* release_locale();
  void set_allocated_locale(std::string* locale);
  private:
  const std::string& _internal_locale() const;
  void _internal_set_locale(const std::string& value);
  std::string* _internal_mutable_locale();
  public:

  // string gravatar_hash = 16;
  void clear_gravatar_hash();
  const std::string& gravatar_hash() const;
  void set_gravatar_hash(const std::string& value);
  void set_gravatar_hash(std::string&& value);
  void set_gravatar_hash(const char* value);
  void set_gravatar_hash(const char* value, size_t size);
  std::string* mutable_gravatar_hash();
  std::string* release_gravatar_hash();
  void set_allocated_gravatar_hash(std::string* gravatar_hash);
  private:
  const std::string& _internal_gravatar_hash() const;
  void _internal_set_gravatar_hash(const std::string& value);
  std::string* _internal_mutable_gravatar_hash();
  public:

  // string username = 17;
  void clear_username();
  const std::string& username() const;
  void set_username(const std::string& value);
  void set_username(std::string&& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  std::string* mutable_username();
  std::string* release_username();
  void set_allocated_username(std::string* username);
  private:
  const std::string& _internal_username() const;
  void _internal_set_username(const std::string& value);
  std::string* _internal_mutable_username();
  public:

  // string regstatus = 18;
  void clear_regstatus();
  const std::string& regstatus() const;
  void set_regstatus(const std::string& value);
  void set_regstatus(std::string&& value);
  void set_regstatus(const char* value);
  void set_regstatus(const char* value, size_t size);
  std::string* mutable_regstatus();
  std::string* release_regstatus();
  void set_allocated_regstatus(std::string* regstatus);
  private:
  const std::string& _internal_regstatus() const;
  void _internal_set_regstatus(const std::string& value);
  std::string* _internal_mutable_regstatus();
  public:

  // string avatar_url = 21;
  void clear_avatar_url();
  const std::string& avatar_url() const;
  void set_avatar_url(const std::string& value);
  void set_avatar_url(std::string&& value);
  void set_avatar_url(const char* value);
  void set_avatar_url(const char* value, size_t size);
  std::string* mutable_avatar_url();
  std::string* release_avatar_url();
  void set_allocated_avatar_url(std::string* avatar_url);
  private:
  const std::string& _internal_avatar_url() const;
  void _internal_set_avatar_url(const std::string& value);
  std::string* _internal_mutable_avatar_url();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 reset_password_sent_at = 5;
  void clear_reset_password_sent_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_password_sent_at() const;
  void set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reset_password_sent_at() const;
  void _internal_set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 remember_created_at = 6;
  void clear_remember_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 remember_created_at() const;
  void set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_remember_created_at() const;
  void _internal_set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 signin_count = 9;
  void clear_signin_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 signin_count() const;
  void set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_signin_count() const;
  void _internal_set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 current_sign_in_at = 10;
  void clear_current_sign_in_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 current_sign_in_at() const;
  void set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_current_sign_in_at() const;
  void _internal_set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 last_sign_in_at = 12;
  void clear_last_sign_in_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_sign_in_at() const;
  void set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_sign_in_at() const;
  void _internal_set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool active = 19;
  void clear_active();
  bool active() const;
  void set_active(bool value);
  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);
  public:

  // bool is_admin = 20;
  void clear_is_admin();
  bool is_admin() const;
  void set_is_admin(bool value);
  private:
  bool _internal_is_admin() const;
  void _internal_set_is_admin(bool value);
  public:

  // uint32 created_at = 22;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 23;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser > activities_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr email_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr encrypted_password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reset_password_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr first_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr current_sign_in_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_sign_in_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr auth_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr locale_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gravatar_hash_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr username_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr regstatus_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_url_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_password_sent_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 remember_created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 signin_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 current_sign_in_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_sign_in_at_;
  bool active_;
  bool is_admin_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PAttachment_PChannelInAttachment :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PAttachment.PChannelInAttachment) */ {
 public:
  PAttachment_PChannelInAttachment();
  virtual ~PAttachment_PChannelInAttachment();

  PAttachment_PChannelInAttachment(const PAttachment_PChannelInAttachment& from);
  PAttachment_PChannelInAttachment(PAttachment_PChannelInAttachment&& from) noexcept
    : PAttachment_PChannelInAttachment() {
    *this = ::std::move(from);
  }

  inline PAttachment_PChannelInAttachment& operator=(const PAttachment_PChannelInAttachment& from) {
    CopyFrom(from);
    return *this;
  }
  inline PAttachment_PChannelInAttachment& operator=(PAttachment_PChannelInAttachment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PAttachment_PChannelInAttachment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PAttachment_PChannelInAttachment* internal_default_instance() {
    return reinterpret_cast<const PAttachment_PChannelInAttachment*>(
               &_PAttachment_PChannelInAttachment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(PAttachment_PChannelInAttachment& a, PAttachment_PChannelInAttachment& b) {
    a.Swap(&b);
  }
  inline void Swap(PAttachment_PChannelInAttachment* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PAttachment_PChannelInAttachment* New() const final {
    return CreateMaybeMessage<PAttachment_PChannelInAttachment>(nullptr);
  }

  PAttachment_PChannelInAttachment* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PAttachment_PChannelInAttachment>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PAttachment_PChannelInAttachment& from);
  void MergeFrom(const PAttachment_PChannelInAttachment& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PAttachment_PChannelInAttachment* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PAttachment.PChannelInAttachment";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PAttachment_PChannelInAttachment_PActivitiesInChannel PActivitiesInChannel;
  typedef PAttachment_PChannelInAttachment_PUserInChannel PUserInChannel;

  // accessors -------------------------------------------------------

  enum : int {
    kActivitiesFieldNumber = 7,
    kNameFieldNumber = 2,
    kUserFieldNumber = 8,
    kIdFieldNumber = 1,
    kCreatedAtFieldNumber = 3,
    kUpdatedAtFieldNumber = 4,
    kUserIdFieldNumber = 5,
    kCountFieldNumber = 6,
  };
  // repeated .kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel activities = 7;
  int activities_size() const;
  private:
  int _internal_activities_size() const;
  public:
  void clear_activities();
  ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel* mutable_activities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel >*
      mutable_activities();
  private:
  const ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel& _internal_activities(int index) const;
  ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel* _internal_add_activities();
  public:
  const ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel& activities(int index) const;
  ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel* add_activities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel >&
      activities() const;

  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .kandan_small.PAttachment.PChannelInAttachment.PUserInChannel user = 8;
  bool has_user() const;
  private:
  bool _internal_has_user() const;
  public:
  void clear_user();
  const ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel& user() const;
  ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel* release_user();
  ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel* mutable_user();
  void set_allocated_user(::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel* user);
  private:
  const ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel& _internal_user() const;
  ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel* _internal_mutable_user();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 3;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 4;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 5;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 count = 6;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PAttachment.PChannelInAttachment)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel > activities_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel* user_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PAttachment :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PAttachment) */ {
 public:
  PAttachment();
  virtual ~PAttachment();

  PAttachment(const PAttachment& from);
  PAttachment(PAttachment&& from) noexcept
    : PAttachment() {
    *this = ::std::move(from);
  }

  inline PAttachment& operator=(const PAttachment& from) {
    CopyFrom(from);
    return *this;
  }
  inline PAttachment& operator=(PAttachment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PAttachment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PAttachment* internal_default_instance() {
    return reinterpret_cast<const PAttachment*>(
               &_PAttachment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(PAttachment& a, PAttachment& b) {
    a.Swap(&b);
  }
  inline void Swap(PAttachment* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PAttachment* New() const final {
    return CreateMaybeMessage<PAttachment>(nullptr);
  }

  PAttachment* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PAttachment>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PAttachment& from);
  void MergeFrom(const PAttachment& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PAttachment* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PAttachment";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PAttachment_PUserInAttachment PUserInAttachment;
  typedef PAttachment_PChannelInAttachment PChannelInAttachment;

  // accessors -------------------------------------------------------

  enum : int {
    kFileFileNameFieldNumber = 2,
    kFileContentTypeFieldNumber = 3,
    kUserFieldNumber = 11,
    kChannelFieldNumber = 12,
    kIdFieldNumber = 1,
    kFileFileSizeFieldNumber = 4,
    kMessageIdFieldNumber = 5,
    kFileUpdatedAtFieldNumber = 6,
    kCreatedAtFieldNumber = 7,
    kUpdatedAtFieldNumber = 8,
    kUserIdFieldNumber = 9,
    kChannelIdFieldNumber = 10,
  };
  // string file_file_name = 2;
  void clear_file_file_name();
  const std::string& file_file_name() const;
  void set_file_file_name(const std::string& value);
  void set_file_file_name(std::string&& value);
  void set_file_file_name(const char* value);
  void set_file_file_name(const char* value, size_t size);
  std::string* mutable_file_file_name();
  std::string* release_file_file_name();
  void set_allocated_file_file_name(std::string* file_file_name);
  private:
  const std::string& _internal_file_file_name() const;
  void _internal_set_file_file_name(const std::string& value);
  std::string* _internal_mutable_file_file_name();
  public:

  // string file_content_type = 3;
  void clear_file_content_type();
  const std::string& file_content_type() const;
  void set_file_content_type(const std::string& value);
  void set_file_content_type(std::string&& value);
  void set_file_content_type(const char* value);
  void set_file_content_type(const char* value, size_t size);
  std::string* mutable_file_content_type();
  std::string* release_file_content_type();
  void set_allocated_file_content_type(std::string* file_content_type);
  private:
  const std::string& _internal_file_content_type() const;
  void _internal_set_file_content_type(const std::string& value);
  std::string* _internal_mutable_file_content_type();
  public:

  // .kandan_small.PAttachment.PUserInAttachment user = 11;
  bool has_user() const;
  private:
  bool _internal_has_user() const;
  public:
  void clear_user();
  const ::kandan_small::PAttachment_PUserInAttachment& user() const;
  ::kandan_small::PAttachment_PUserInAttachment* release_user();
  ::kandan_small::PAttachment_PUserInAttachment* mutable_user();
  void set_allocated_user(::kandan_small::PAttachment_PUserInAttachment* user);
  private:
  const ::kandan_small::PAttachment_PUserInAttachment& _internal_user() const;
  ::kandan_small::PAttachment_PUserInAttachment* _internal_mutable_user();
  public:

  // .kandan_small.PAttachment.PChannelInAttachment channel = 12;
  bool has_channel() const;
  private:
  bool _internal_has_channel() const;
  public:
  void clear_channel();
  const ::kandan_small::PAttachment_PChannelInAttachment& channel() const;
  ::kandan_small::PAttachment_PChannelInAttachment* release_channel();
  ::kandan_small::PAttachment_PChannelInAttachment* mutable_channel();
  void set_allocated_channel(::kandan_small::PAttachment_PChannelInAttachment* channel);
  private:
  const ::kandan_small::PAttachment_PChannelInAttachment& _internal_channel() const;
  ::kandan_small::PAttachment_PChannelInAttachment* _internal_mutable_channel();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_file_size = 4;
  void clear_file_file_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size() const;
  void set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_file_size() const;
  void _internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 message_id = 5;
  void clear_message_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id() const;
  void set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_message_id() const;
  void _internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 file_updated_at = 6;
  void clear_file_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at() const;
  void set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_updated_at() const;
  void _internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 created_at = 7;
  void clear_created_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at() const;
  void set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_created_at() const;
  void _internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 updated_at = 8;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_at() const;
  void _internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 user_id = 9;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 channel_id = 10;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.PAttachment)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_file_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_content_type_;
  ::kandan_small::PAttachment_PUserInAttachment* user_;
  ::kandan_small::PAttachment_PChannelInAttachment* channel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_file_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 created_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PQuery0Result :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PQuery0Result) */ {
 public:
  PQuery0Result();
  virtual ~PQuery0Result();

  PQuery0Result(const PQuery0Result& from);
  PQuery0Result(PQuery0Result&& from) noexcept
    : PQuery0Result() {
    *this = ::std::move(from);
  }

  inline PQuery0Result& operator=(const PQuery0Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline PQuery0Result& operator=(PQuery0Result&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PQuery0Result& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PQuery0Result* internal_default_instance() {
    return reinterpret_cast<const PQuery0Result*>(
               &_PQuery0Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(PQuery0Result& a, PQuery0Result& b) {
    a.Swap(&b);
  }
  inline void Swap(PQuery0Result* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PQuery0Result* New() const final {
    return CreateMaybeMessage<PQuery0Result>(nullptr);
  }

  PQuery0Result* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PQuery0Result>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PQuery0Result& from);
  void MergeFrom(const PQuery0Result& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PQuery0Result* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PQuery0Result";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserFieldNumber = 1,
  };
  // repeated .kandan_small.PUser user = 1;
  int user_size() const;
  private:
  int _internal_user_size() const;
  public:
  void clear_user();
  ::kandan_small::PUser* mutable_user(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser >*
      mutable_user();
  private:
  const ::kandan_small::PUser& _internal_user(int index) const;
  ::kandan_small::PUser* _internal_add_user();
  public:
  const ::kandan_small::PUser& user(int index) const;
  ::kandan_small::PUser* add_user();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser >&
      user() const;

  // @@protoc_insertion_point(class_scope:kandan_small.PQuery0Result)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser > user_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PUserList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PUserList) */ {
 public:
  PUserList();
  virtual ~PUserList();

  PUserList(const PUserList& from);
  PUserList(PUserList&& from) noexcept
    : PUserList() {
    *this = ::std::move(from);
  }

  inline PUserList& operator=(const PUserList& from) {
    CopyFrom(from);
    return *this;
  }
  inline PUserList& operator=(PUserList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PUserList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PUserList* internal_default_instance() {
    return reinterpret_cast<const PUserList*>(
               &_PUserList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(PUserList& a, PUserList& b) {
    a.Swap(&b);
  }
  inline void Swap(PUserList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PUserList* New() const final {
    return CreateMaybeMessage<PUserList>(nullptr);
  }

  PUserList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PUserList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PUserList& from);
  void MergeFrom(const PUserList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PUserList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PUserList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserFieldNumber = 1,
  };
  // repeated .kandan_small.PUser user = 1;
  int user_size() const;
  private:
  int _internal_user_size() const;
  public:
  void clear_user();
  ::kandan_small::PUser* mutable_user(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser >*
      mutable_user();
  private:
  const ::kandan_small::PUser& _internal_user(int index) const;
  ::kandan_small::PUser* _internal_add_user();
  public:
  const ::kandan_small::PUser& user(int index) const;
  ::kandan_small::PUser* add_user();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser >&
      user() const;

  // @@protoc_insertion_point(class_scope:kandan_small.PUserList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser > user_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PChannelList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PChannelList) */ {
 public:
  PChannelList();
  virtual ~PChannelList();

  PChannelList(const PChannelList& from);
  PChannelList(PChannelList&& from) noexcept
    : PChannelList() {
    *this = ::std::move(from);
  }

  inline PChannelList& operator=(const PChannelList& from) {
    CopyFrom(from);
    return *this;
  }
  inline PChannelList& operator=(PChannelList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PChannelList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PChannelList* internal_default_instance() {
    return reinterpret_cast<const PChannelList*>(
               &_PChannelList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(PChannelList& a, PChannelList& b) {
    a.Swap(&b);
  }
  inline void Swap(PChannelList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PChannelList* New() const final {
    return CreateMaybeMessage<PChannelList>(nullptr);
  }

  PChannelList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PChannelList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PChannelList& from);
  void MergeFrom(const PChannelList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PChannelList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PChannelList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannelFieldNumber = 1,
  };
  // repeated .kandan_small.PChannel channel = 1;
  int channel_size() const;
  private:
  int _internal_channel_size() const;
  public:
  void clear_channel();
  ::kandan_small::PChannel* mutable_channel(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel >*
      mutable_channel();
  private:
  const ::kandan_small::PChannel& _internal_channel(int index) const;
  ::kandan_small::PChannel* _internal_add_channel();
  public:
  const ::kandan_small::PChannel& channel(int index) const;
  ::kandan_small::PChannel* add_channel();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel >&
      channel() const;

  // @@protoc_insertion_point(class_scope:kandan_small.PChannelList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel > channel_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PActivityList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PActivityList) */ {
 public:
  PActivityList();
  virtual ~PActivityList();

  PActivityList(const PActivityList& from);
  PActivityList(PActivityList&& from) noexcept
    : PActivityList() {
    *this = ::std::move(from);
  }

  inline PActivityList& operator=(const PActivityList& from) {
    CopyFrom(from);
    return *this;
  }
  inline PActivityList& operator=(PActivityList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PActivityList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PActivityList* internal_default_instance() {
    return reinterpret_cast<const PActivityList*>(
               &_PActivityList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(PActivityList& a, PActivityList& b) {
    a.Swap(&b);
  }
  inline void Swap(PActivityList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PActivityList* New() const final {
    return CreateMaybeMessage<PActivityList>(nullptr);
  }

  PActivityList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PActivityList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PActivityList& from);
  void MergeFrom(const PActivityList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PActivityList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PActivityList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActivityFieldNumber = 1,
  };
  // repeated .kandan_small.PActivity activity = 1;
  int activity_size() const;
  private:
  int _internal_activity_size() const;
  public:
  void clear_activity();
  ::kandan_small::PActivity* mutable_activity(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity >*
      mutable_activity();
  private:
  const ::kandan_small::PActivity& _internal_activity(int index) const;
  ::kandan_small::PActivity* _internal_add_activity();
  public:
  const ::kandan_small::PActivity& activity(int index) const;
  ::kandan_small::PActivity* add_activity();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity >&
      activity() const;

  // @@protoc_insertion_point(class_scope:kandan_small.PActivityList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity > activity_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class PAttachmentList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.PAttachmentList) */ {
 public:
  PAttachmentList();
  virtual ~PAttachmentList();

  PAttachmentList(const PAttachmentList& from);
  PAttachmentList(PAttachmentList&& from) noexcept
    : PAttachmentList() {
    *this = ::std::move(from);
  }

  inline PAttachmentList& operator=(const PAttachmentList& from) {
    CopyFrom(from);
    return *this;
  }
  inline PAttachmentList& operator=(PAttachmentList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PAttachmentList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PAttachmentList* internal_default_instance() {
    return reinterpret_cast<const PAttachmentList*>(
               &_PAttachmentList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(PAttachmentList& a, PAttachmentList& b) {
    a.Swap(&b);
  }
  inline void Swap(PAttachmentList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PAttachmentList* New() const final {
    return CreateMaybeMessage<PAttachmentList>(nullptr);
  }

  PAttachmentList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PAttachmentList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PAttachmentList& from);
  void MergeFrom(const PAttachmentList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PAttachmentList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.PAttachmentList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttachmentFieldNumber = 1,
  };
  // repeated .kandan_small.PAttachment attachment = 1;
  int attachment_size() const;
  private:
  int _internal_attachment_size() const;
  public:
  void clear_attachment();
  ::kandan_small::PAttachment* mutable_attachment(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment >*
      mutable_attachment();
  private:
  const ::kandan_small::PAttachment& _internal_attachment(int index) const;
  ::kandan_small::PAttachment* _internal_add_attachment();
  public:
  const ::kandan_small::PAttachment& attachment(int index) const;
  ::kandan_small::PAttachment* add_attachment();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment >&
      attachment() const;

  // @@protoc_insertion_point(class_scope:kandan_small.PAttachmentList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment > attachment_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// -------------------------------------------------------------------

class QueryParam :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kandan_small.QueryParam) */ {
 public:
  QueryParam();
  virtual ~QueryParam();

  QueryParam(const QueryParam& from);
  QueryParam(QueryParam&& from) noexcept
    : QueryParam() {
    *this = ::std::move(from);
  }

  inline QueryParam& operator=(const QueryParam& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryParam& operator=(QueryParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QueryParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryParam* internal_default_instance() {
    return reinterpret_cast<const QueryParam*>(
               &_QueryParam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(QueryParam& a, QueryParam& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryParam* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QueryParam* New() const final {
    return CreateMaybeMessage<QueryParam>(nullptr);
  }

  QueryParam* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QueryParam>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QueryParam& from);
  void MergeFrom(const QueryParam& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryParam* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kandan_small.QueryParam";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fkandan_5fsmall_2eproto);
    return ::descriptor_table_proto_5fkandan_5fsmall_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQueryIdFieldNumber = 1,
    kQ0Param0UidFieldNumber = 2,
  };
  // uint32 query_id = 1;
  void clear_query_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 query_id() const;
  void set_query_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_query_id() const;
  void _internal_set_query_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 q_0_param_0_uid = 2;
  void clear_q_0_param_0_uid();
  ::PROTOBUF_NAMESPACE_ID::uint32 q_0_param_0_uid() const;
  void set_q_0_param_0_uid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_q_0_param_0_uid() const;
  void _internal_set_q_0_param_0_uid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kandan_small.QueryParam)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 query_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 q_0_param_0_uid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fkandan_5fsmall_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PUser_PChannelsInUser_PActivitiesInChannel

// uint32 id = 1;
inline void PUser_PChannelsInUser_PActivitiesInChannel::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PActivitiesInChannel::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PActivitiesInChannel::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.id)
  return _internal_id();
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.id)
}

// uint32 created_at = 2;
inline void PUser_PChannelsInUser_PActivitiesInChannel::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PActivitiesInChannel::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PActivitiesInChannel::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.created_at)
  return _internal_created_at();
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.created_at)
}

// uint32 updated_at = 3;
inline void PUser_PChannelsInUser_PActivitiesInChannel::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PActivitiesInChannel::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PActivitiesInChannel::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.updated_at)
  return _internal_updated_at();
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.updated_at)
}

// string action = 4;
inline void PUser_PChannelsInUser_PActivitiesInChannel::clear_action() {
  action_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser_PChannelsInUser_PActivitiesInChannel::action() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.action)
  return _internal_action();
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::set_action(const std::string& value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.action)
}
inline std::string* PUser_PChannelsInUser_PActivitiesInChannel::mutable_action() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.action)
  return _internal_mutable_action();
}
inline const std::string& PUser_PChannelsInUser_PActivitiesInChannel::_internal_action() const {
  return action_.GetNoArena();
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::_internal_set_action(const std::string& value) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::set_action(std::string&& value) {
  
  action_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.action)
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::set_action(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.action)
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.action)
}
inline std::string* PUser_PChannelsInUser_PActivitiesInChannel::_internal_mutable_action() {
  
  return action_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser_PChannelsInUser_PActivitiesInChannel::release_action() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.action)
  
  return action_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::set_allocated_action(std::string* action) {
  if (action != nullptr) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.action)
}

// string content = 5;
inline void PUser_PChannelsInUser_PActivitiesInChannel::clear_content() {
  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser_PChannelsInUser_PActivitiesInChannel::content() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.content)
  return _internal_content();
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.content)
}
inline std::string* PUser_PChannelsInUser_PActivitiesInChannel::mutable_content() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.content)
  return _internal_mutable_content();
}
inline const std::string& PUser_PChannelsInUser_PActivitiesInChannel::_internal_content() const {
  return content_.GetNoArena();
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::_internal_set_content(const std::string& value) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::set_content(std::string&& value) {
  
  content_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.content)
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.content)
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.content)
}
inline std::string* PUser_PChannelsInUser_PActivitiesInChannel::_internal_mutable_content() {
  
  return content_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser_PChannelsInUser_PActivitiesInChannel::release_content() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.content)
  
  return content_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.content)
}

// uint32 channel_id = 6;
inline void PUser_PChannelsInUser_PActivitiesInChannel::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PActivitiesInChannel::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PActivitiesInChannel::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.channel_id)
  return _internal_channel_id();
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.channel_id)
}

// uint32 user_id = 7;
inline void PUser_PChannelsInUser_PActivitiesInChannel::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PActivitiesInChannel::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PActivitiesInChannel::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.user_id)
  return _internal_user_id();
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PUser_PChannelsInUser_PActivitiesInChannel::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.PActivitiesInChannel.user_id)
}

// -------------------------------------------------------------------

// PUser_PChannelsInUser_PAttachmentsInChannel

// uint32 id = 1;
inline void PUser_PChannelsInUser_PAttachmentsInChannel::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PAttachmentsInChannel::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PAttachmentsInChannel::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.id)
  return _internal_id();
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.id)
}

// string file_file_name = 2;
inline void PUser_PChannelsInUser_PAttachmentsInChannel::clear_file_file_name() {
  file_file_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser_PChannelsInUser_PAttachmentsInChannel::file_file_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.file_file_name)
  return _internal_file_file_name();
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::set_file_file_name(const std::string& value) {
  _internal_set_file_file_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.file_file_name)
}
inline std::string* PUser_PChannelsInUser_PAttachmentsInChannel::mutable_file_file_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.file_file_name)
  return _internal_mutable_file_file_name();
}
inline const std::string& PUser_PChannelsInUser_PAttachmentsInChannel::_internal_file_file_name() const {
  return file_file_name_.GetNoArena();
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::_internal_set_file_file_name(const std::string& value) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::set_file_file_name(std::string&& value) {
  
  file_file_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.file_file_name)
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::set_file_file_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.file_file_name)
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::set_file_file_name(const char* value, size_t size) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.file_file_name)
}
inline std::string* PUser_PChannelsInUser_PAttachmentsInChannel::_internal_mutable_file_file_name() {
  
  return file_file_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser_PChannelsInUser_PAttachmentsInChannel::release_file_file_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.file_file_name)
  
  return file_file_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::set_allocated_file_file_name(std::string* file_file_name) {
  if (file_file_name != nullptr) {
    
  } else {
    
  }
  file_file_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_file_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.file_file_name)
}

// string file_content_type = 3;
inline void PUser_PChannelsInUser_PAttachmentsInChannel::clear_file_content_type() {
  file_content_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser_PChannelsInUser_PAttachmentsInChannel::file_content_type() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.file_content_type)
  return _internal_file_content_type();
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::set_file_content_type(const std::string& value) {
  _internal_set_file_content_type(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.file_content_type)
}
inline std::string* PUser_PChannelsInUser_PAttachmentsInChannel::mutable_file_content_type() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.file_content_type)
  return _internal_mutable_file_content_type();
}
inline const std::string& PUser_PChannelsInUser_PAttachmentsInChannel::_internal_file_content_type() const {
  return file_content_type_.GetNoArena();
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::_internal_set_file_content_type(const std::string& value) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::set_file_content_type(std::string&& value) {
  
  file_content_type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.file_content_type)
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::set_file_content_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.file_content_type)
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::set_file_content_type(const char* value, size_t size) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.file_content_type)
}
inline std::string* PUser_PChannelsInUser_PAttachmentsInChannel::_internal_mutable_file_content_type() {
  
  return file_content_type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser_PChannelsInUser_PAttachmentsInChannel::release_file_content_type() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.file_content_type)
  
  return file_content_type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::set_allocated_file_content_type(std::string* file_content_type) {
  if (file_content_type != nullptr) {
    
  } else {
    
  }
  file_content_type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_content_type);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.file_content_type)
}

// uint32 file_file_size = 4;
inline void PUser_PChannelsInUser_PAttachmentsInChannel::clear_file_file_size() {
  file_file_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PAttachmentsInChannel::_internal_file_file_size() const {
  return file_file_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PAttachmentsInChannel::file_file_size() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.file_file_size)
  return _internal_file_file_size();
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::_internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_file_size_ = value;
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_file_size(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.file_file_size)
}

// uint32 message_id = 5;
inline void PUser_PChannelsInUser_PAttachmentsInChannel::clear_message_id() {
  message_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PAttachmentsInChannel::_internal_message_id() const {
  return message_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PAttachmentsInChannel::message_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.message_id)
  return _internal_message_id();
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::_internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  message_id_ = value;
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.message_id)
}

// uint32 file_updated_at = 6;
inline void PUser_PChannelsInUser_PAttachmentsInChannel::clear_file_updated_at() {
  file_updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PAttachmentsInChannel::_internal_file_updated_at() const {
  return file_updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PAttachmentsInChannel::file_updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.file_updated_at)
  return _internal_file_updated_at();
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::_internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_updated_at_ = value;
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.file_updated_at)
}

// uint32 created_at = 7;
inline void PUser_PChannelsInUser_PAttachmentsInChannel::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PAttachmentsInChannel::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PAttachmentsInChannel::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.created_at)
  return _internal_created_at();
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.created_at)
}

// uint32 updated_at = 8;
inline void PUser_PChannelsInUser_PAttachmentsInChannel::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PAttachmentsInChannel::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PAttachmentsInChannel::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.updated_at)
  return _internal_updated_at();
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.updated_at)
}

// uint32 user_id = 9;
inline void PUser_PChannelsInUser_PAttachmentsInChannel::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PAttachmentsInChannel::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PAttachmentsInChannel::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.user_id)
  return _internal_user_id();
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.user_id)
}

// uint32 channel_id = 10;
inline void PUser_PChannelsInUser_PAttachmentsInChannel::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PAttachmentsInChannel::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser_PAttachmentsInChannel::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.channel_id)
  return _internal_channel_id();
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PUser_PChannelsInUser_PAttachmentsInChannel::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel.channel_id)
}

// -------------------------------------------------------------------

// PUser_PChannelsInUser

// uint32 id = 1;
inline void PUser_PChannelsInUser::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.id)
  return _internal_id();
}
inline void PUser_PChannelsInUser::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PUser_PChannelsInUser::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.id)
}

// string name = 2;
inline void PUser_PChannelsInUser::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser_PChannelsInUser::name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.name)
  return _internal_name();
}
inline void PUser_PChannelsInUser::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.name)
}
inline std::string* PUser_PChannelsInUser::mutable_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PChannelsInUser.name)
  return _internal_mutable_name();
}
inline const std::string& PUser_PChannelsInUser::_internal_name() const {
  return name_.GetNoArena();
}
inline void PUser_PChannelsInUser::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser_PChannelsInUser::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.PChannelsInUser.name)
}
inline void PUser_PChannelsInUser::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.PChannelsInUser.name)
}
inline void PUser_PChannelsInUser::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.PChannelsInUser.name)
}
inline std::string* PUser_PChannelsInUser::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser_PChannelsInUser::release_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.PChannelsInUser.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser_PChannelsInUser::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.PChannelsInUser.name)
}

// uint32 created_at = 3;
inline void PUser_PChannelsInUser::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.created_at)
  return _internal_created_at();
}
inline void PUser_PChannelsInUser::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PUser_PChannelsInUser::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.created_at)
}

// uint32 updated_at = 4;
inline void PUser_PChannelsInUser::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.updated_at)
  return _internal_updated_at();
}
inline void PUser_PChannelsInUser::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PUser_PChannelsInUser::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.updated_at)
}

// uint32 user_id = 5;
inline void PUser_PChannelsInUser::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.user_id)
  return _internal_user_id();
}
inline void PUser_PChannelsInUser::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PUser_PChannelsInUser::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.user_id)
}

// uint32 count = 6;
inline void PUser_PChannelsInUser::clear_count() {
  count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PChannelsInUser::count() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.count)
  return _internal_count();
}
inline void PUser_PChannelsInUser::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  count_ = value;
}
inline void PUser_PChannelsInUser::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PChannelsInUser.count)
}

// repeated .kandan_small.PUser.PChannelsInUser.PActivitiesInChannel activities = 7;
inline int PUser_PChannelsInUser::_internal_activities_size() const {
  return activities_.size();
}
inline int PUser_PChannelsInUser::activities_size() const {
  return _internal_activities_size();
}
inline void PUser_PChannelsInUser::clear_activities() {
  activities_.Clear();
}
inline ::kandan_small::PUser_PChannelsInUser_PActivitiesInChannel* PUser_PChannelsInUser::mutable_activities(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PChannelsInUser.activities)
  return activities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PChannelsInUser_PActivitiesInChannel >*
PUser_PChannelsInUser::mutable_activities() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PUser.PChannelsInUser.activities)
  return &activities_;
}
inline const ::kandan_small::PUser_PChannelsInUser_PActivitiesInChannel& PUser_PChannelsInUser::_internal_activities(int index) const {
  return activities_.Get(index);
}
inline const ::kandan_small::PUser_PChannelsInUser_PActivitiesInChannel& PUser_PChannelsInUser::activities(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.activities)
  return _internal_activities(index);
}
inline ::kandan_small::PUser_PChannelsInUser_PActivitiesInChannel* PUser_PChannelsInUser::_internal_add_activities() {
  return activities_.Add();
}
inline ::kandan_small::PUser_PChannelsInUser_PActivitiesInChannel* PUser_PChannelsInUser::add_activities() {
  // @@protoc_insertion_point(field_add:kandan_small.PUser.PChannelsInUser.activities)
  return _internal_add_activities();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PChannelsInUser_PActivitiesInChannel >&
PUser_PChannelsInUser::activities() const {
  // @@protoc_insertion_point(field_list:kandan_small.PUser.PChannelsInUser.activities)
  return activities_;
}

// repeated .kandan_small.PUser.PChannelsInUser.PAttachmentsInChannel attachments = 8;
inline int PUser_PChannelsInUser::_internal_attachments_size() const {
  return attachments_.size();
}
inline int PUser_PChannelsInUser::attachments_size() const {
  return _internal_attachments_size();
}
inline void PUser_PChannelsInUser::clear_attachments() {
  attachments_.Clear();
}
inline ::kandan_small::PUser_PChannelsInUser_PAttachmentsInChannel* PUser_PChannelsInUser::mutable_attachments(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PChannelsInUser.attachments)
  return attachments_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PChannelsInUser_PAttachmentsInChannel >*
PUser_PChannelsInUser::mutable_attachments() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PUser.PChannelsInUser.attachments)
  return &attachments_;
}
inline const ::kandan_small::PUser_PChannelsInUser_PAttachmentsInChannel& PUser_PChannelsInUser::_internal_attachments(int index) const {
  return attachments_.Get(index);
}
inline const ::kandan_small::PUser_PChannelsInUser_PAttachmentsInChannel& PUser_PChannelsInUser::attachments(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PChannelsInUser.attachments)
  return _internal_attachments(index);
}
inline ::kandan_small::PUser_PChannelsInUser_PAttachmentsInChannel* PUser_PChannelsInUser::_internal_add_attachments() {
  return attachments_.Add();
}
inline ::kandan_small::PUser_PChannelsInUser_PAttachmentsInChannel* PUser_PChannelsInUser::add_attachments() {
  // @@protoc_insertion_point(field_add:kandan_small.PUser.PChannelsInUser.attachments)
  return _internal_add_attachments();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PChannelsInUser_PAttachmentsInChannel >&
PUser_PChannelsInUser::attachments() const {
  // @@protoc_insertion_point(field_list:kandan_small.PUser.PChannelsInUser.attachments)
  return attachments_;
}

// -------------------------------------------------------------------

// PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel

// uint32 id = 1;
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.id)
  return _internal_id();
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.id)
}

// string file_file_name = 2;
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::clear_file_file_name() {
  file_file_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::file_file_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.file_file_name)
  return _internal_file_file_name();
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::set_file_file_name(const std::string& value) {
  _internal_set_file_file_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.file_file_name)
}
inline std::string* PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::mutable_file_file_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.file_file_name)
  return _internal_mutable_file_file_name();
}
inline const std::string& PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_file_file_name() const {
  return file_file_name_.GetNoArena();
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_set_file_file_name(const std::string& value) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::set_file_file_name(std::string&& value) {
  
  file_file_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.file_file_name)
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::set_file_file_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.file_file_name)
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::set_file_file_name(const char* value, size_t size) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.file_file_name)
}
inline std::string* PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_mutable_file_file_name() {
  
  return file_file_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::release_file_file_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.file_file_name)
  
  return file_file_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::set_allocated_file_file_name(std::string* file_file_name) {
  if (file_file_name != nullptr) {
    
  } else {
    
  }
  file_file_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_file_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.file_file_name)
}

// string file_content_type = 3;
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::clear_file_content_type() {
  file_content_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::file_content_type() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.file_content_type)
  return _internal_file_content_type();
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::set_file_content_type(const std::string& value) {
  _internal_set_file_content_type(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.file_content_type)
}
inline std::string* PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::mutable_file_content_type() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.file_content_type)
  return _internal_mutable_file_content_type();
}
inline const std::string& PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_file_content_type() const {
  return file_content_type_.GetNoArena();
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_set_file_content_type(const std::string& value) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::set_file_content_type(std::string&& value) {
  
  file_content_type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.file_content_type)
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::set_file_content_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.file_content_type)
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::set_file_content_type(const char* value, size_t size) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.file_content_type)
}
inline std::string* PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_mutable_file_content_type() {
  
  return file_content_type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::release_file_content_type() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.file_content_type)
  
  return file_content_type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::set_allocated_file_content_type(std::string* file_content_type) {
  if (file_content_type != nullptr) {
    
  } else {
    
  }
  file_content_type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_content_type);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.file_content_type)
}

// uint32 file_file_size = 4;
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::clear_file_file_size() {
  file_file_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_file_file_size() const {
  return file_file_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::file_file_size() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.file_file_size)
  return _internal_file_file_size();
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_file_size_ = value;
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_file_size(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.file_file_size)
}

// uint32 message_id = 5;
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::clear_message_id() {
  message_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_message_id() const {
  return message_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::message_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.message_id)
  return _internal_message_id();
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  message_id_ = value;
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.message_id)
}

// uint32 file_updated_at = 6;
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::clear_file_updated_at() {
  file_updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_file_updated_at() const {
  return file_updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::file_updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.file_updated_at)
  return _internal_file_updated_at();
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_updated_at_ = value;
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.file_updated_at)
}

// uint32 created_at = 7;
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.created_at)
  return _internal_created_at();
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.created_at)
}

// uint32 updated_at = 8;
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.updated_at)
  return _internal_updated_at();
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.updated_at)
}

// uint32 user_id = 9;
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.user_id)
  return _internal_user_id();
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.user_id)
}

// uint32 channel_id = 10;
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.channel_id)
  return _internal_channel_id();
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel.channel_id)
}

// -------------------------------------------------------------------

// PUser_PActivitiesInUser_PChannelInActivity

// uint32 id = 1;
inline void PUser_PActivitiesInUser_PChannelInActivity::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.id)
  return _internal_id();
}
inline void PUser_PActivitiesInUser_PChannelInActivity::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PUser_PActivitiesInUser_PChannelInActivity::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.id)
}

// string name = 2;
inline void PUser_PActivitiesInUser_PChannelInActivity::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser_PActivitiesInUser_PChannelInActivity::name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.name)
  return _internal_name();
}
inline void PUser_PActivitiesInUser_PChannelInActivity::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.name)
}
inline std::string* PUser_PActivitiesInUser_PChannelInActivity::mutable_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.name)
  return _internal_mutable_name();
}
inline const std::string& PUser_PActivitiesInUser_PChannelInActivity::_internal_name() const {
  return name_.GetNoArena();
}
inline void PUser_PActivitiesInUser_PChannelInActivity::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser_PActivitiesInUser_PChannelInActivity::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.name)
}
inline void PUser_PActivitiesInUser_PChannelInActivity::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.name)
}
inline void PUser_PActivitiesInUser_PChannelInActivity::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.name)
}
inline std::string* PUser_PActivitiesInUser_PChannelInActivity::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser_PActivitiesInUser_PChannelInActivity::release_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser_PActivitiesInUser_PChannelInActivity::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.name)
}

// uint32 created_at = 3;
inline void PUser_PActivitiesInUser_PChannelInActivity::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.created_at)
  return _internal_created_at();
}
inline void PUser_PActivitiesInUser_PChannelInActivity::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PUser_PActivitiesInUser_PChannelInActivity::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.created_at)
}

// uint32 updated_at = 4;
inline void PUser_PActivitiesInUser_PChannelInActivity::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.updated_at)
  return _internal_updated_at();
}
inline void PUser_PActivitiesInUser_PChannelInActivity::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PUser_PActivitiesInUser_PChannelInActivity::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.updated_at)
}

// uint32 user_id = 5;
inline void PUser_PActivitiesInUser_PChannelInActivity::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.user_id)
  return _internal_user_id();
}
inline void PUser_PActivitiesInUser_PChannelInActivity::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PUser_PActivitiesInUser_PChannelInActivity::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.user_id)
}

// uint32 count = 6;
inline void PUser_PActivitiesInUser_PChannelInActivity::clear_count() {
  count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser_PChannelInActivity::count() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.count)
  return _internal_count();
}
inline void PUser_PActivitiesInUser_PChannelInActivity::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  count_ = value;
}
inline void PUser_PActivitiesInUser_PChannelInActivity::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.count)
}

// repeated .kandan_small.PUser.PActivitiesInUser.PChannelInActivity.PAttachmentsInChannel attachments = 7;
inline int PUser_PActivitiesInUser_PChannelInActivity::_internal_attachments_size() const {
  return attachments_.size();
}
inline int PUser_PActivitiesInUser_PChannelInActivity::attachments_size() const {
  return _internal_attachments_size();
}
inline void PUser_PActivitiesInUser_PChannelInActivity::clear_attachments() {
  attachments_.Clear();
}
inline ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel* PUser_PActivitiesInUser_PChannelInActivity::mutable_attachments(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.attachments)
  return attachments_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel >*
PUser_PActivitiesInUser_PChannelInActivity::mutable_attachments() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.attachments)
  return &attachments_;
}
inline const ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel& PUser_PActivitiesInUser_PChannelInActivity::_internal_attachments(int index) const {
  return attachments_.Get(index);
}
inline const ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel& PUser_PActivitiesInUser_PChannelInActivity::attachments(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.attachments)
  return _internal_attachments(index);
}
inline ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel* PUser_PActivitiesInUser_PChannelInActivity::_internal_add_attachments() {
  return attachments_.Add();
}
inline ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel* PUser_PActivitiesInUser_PChannelInActivity::add_attachments() {
  // @@protoc_insertion_point(field_add:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.attachments)
  return _internal_add_attachments();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity_PAttachmentsInChannel >&
PUser_PActivitiesInUser_PChannelInActivity::attachments() const {
  // @@protoc_insertion_point(field_list:kandan_small.PUser.PActivitiesInUser.PChannelInActivity.attachments)
  return attachments_;
}

// -------------------------------------------------------------------

// PUser_PActivitiesInUser

// uint32 id = 1;
inline void PUser_PActivitiesInUser::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.id)
  return _internal_id();
}
inline void PUser_PActivitiesInUser::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PUser_PActivitiesInUser::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.id)
}

// uint32 created_at = 2;
inline void PUser_PActivitiesInUser::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.created_at)
  return _internal_created_at();
}
inline void PUser_PActivitiesInUser::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PUser_PActivitiesInUser::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.created_at)
}

// uint32 updated_at = 3;
inline void PUser_PActivitiesInUser::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.updated_at)
  return _internal_updated_at();
}
inline void PUser_PActivitiesInUser::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PUser_PActivitiesInUser::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.updated_at)
}

// string action = 4;
inline void PUser_PActivitiesInUser::clear_action() {
  action_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser_PActivitiesInUser::action() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.action)
  return _internal_action();
}
inline void PUser_PActivitiesInUser::set_action(const std::string& value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.action)
}
inline std::string* PUser_PActivitiesInUser::mutable_action() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PActivitiesInUser.action)
  return _internal_mutable_action();
}
inline const std::string& PUser_PActivitiesInUser::_internal_action() const {
  return action_.GetNoArena();
}
inline void PUser_PActivitiesInUser::_internal_set_action(const std::string& value) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser_PActivitiesInUser::set_action(std::string&& value) {
  
  action_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.PActivitiesInUser.action)
}
inline void PUser_PActivitiesInUser::set_action(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.PActivitiesInUser.action)
}
inline void PUser_PActivitiesInUser::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.PActivitiesInUser.action)
}
inline std::string* PUser_PActivitiesInUser::_internal_mutable_action() {
  
  return action_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser_PActivitiesInUser::release_action() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.PActivitiesInUser.action)
  
  return action_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser_PActivitiesInUser::set_allocated_action(std::string* action) {
  if (action != nullptr) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.PActivitiesInUser.action)
}

// string content = 5;
inline void PUser_PActivitiesInUser::clear_content() {
  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser_PActivitiesInUser::content() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.content)
  return _internal_content();
}
inline void PUser_PActivitiesInUser::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.content)
}
inline std::string* PUser_PActivitiesInUser::mutable_content() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PActivitiesInUser.content)
  return _internal_mutable_content();
}
inline const std::string& PUser_PActivitiesInUser::_internal_content() const {
  return content_.GetNoArena();
}
inline void PUser_PActivitiesInUser::_internal_set_content(const std::string& value) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser_PActivitiesInUser::set_content(std::string&& value) {
  
  content_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.PActivitiesInUser.content)
}
inline void PUser_PActivitiesInUser::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.PActivitiesInUser.content)
}
inline void PUser_PActivitiesInUser::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.PActivitiesInUser.content)
}
inline std::string* PUser_PActivitiesInUser::_internal_mutable_content() {
  
  return content_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser_PActivitiesInUser::release_content() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.PActivitiesInUser.content)
  
  return content_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser_PActivitiesInUser::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.PActivitiesInUser.content)
}

// uint32 channel_id = 6;
inline void PUser_PActivitiesInUser::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.channel_id)
  return _internal_channel_id();
}
inline void PUser_PActivitiesInUser::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PUser_PActivitiesInUser::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.channel_id)
}

// uint32 user_id = 7;
inline void PUser_PActivitiesInUser::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PActivitiesInUser::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.user_id)
  return _internal_user_id();
}
inline void PUser_PActivitiesInUser::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PUser_PActivitiesInUser::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PActivitiesInUser.user_id)
}

// .kandan_small.PUser.PActivitiesInUser.PChannelInActivity channel = 8;
inline bool PUser_PActivitiesInUser::_internal_has_channel() const {
  return this != internal_default_instance() && channel_ != nullptr;
}
inline bool PUser_PActivitiesInUser::has_channel() const {
  return _internal_has_channel();
}
inline void PUser_PActivitiesInUser::clear_channel() {
  if (GetArenaNoVirtual() == nullptr && channel_ != nullptr) {
    delete channel_;
  }
  channel_ = nullptr;
}
inline const ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity& PUser_PActivitiesInUser::_internal_channel() const {
  const ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity* p = channel_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity*>(
      &::kandan_small::_PUser_PActivitiesInUser_PChannelInActivity_default_instance_);
}
inline const ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity& PUser_PActivitiesInUser::channel() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PActivitiesInUser.channel)
  return _internal_channel();
}
inline ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity* PUser_PActivitiesInUser::release_channel() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.PActivitiesInUser.channel)
  
  ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity* temp = channel_;
  channel_ = nullptr;
  return temp;
}
inline ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity* PUser_PActivitiesInUser::_internal_mutable_channel() {
  
  if (channel_ == nullptr) {
    auto* p = CreateMaybeMessage<::kandan_small::PUser_PActivitiesInUser_PChannelInActivity>(GetArenaNoVirtual());
    channel_ = p;
  }
  return channel_;
}
inline ::kandan_small::PUser_PActivitiesInUser_PChannelInActivity* PUser_PActivitiesInUser::mutable_channel() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PActivitiesInUser.channel)
  return _internal_mutable_channel();
}
inline void PUser_PActivitiesInUser::set_allocated_channel(::kandan_small::PUser_PActivitiesInUser_PChannelInActivity* channel) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete channel_;
  }
  if (channel) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      channel = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, channel, submessage_arena);
    }
    
  } else {
    
  }
  channel_ = channel;
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.PActivitiesInUser.channel)
}

// -------------------------------------------------------------------

// PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel

// uint32 id = 1;
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.id)
  return _internal_id();
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.id)
}

// uint32 created_at = 2;
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.created_at)
  return _internal_created_at();
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.created_at)
}

// uint32 updated_at = 3;
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.updated_at)
  return _internal_updated_at();
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.updated_at)
}

// string action = 4;
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::clear_action() {
  action_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::action() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.action)
  return _internal_action();
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::set_action(const std::string& value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.action)
}
inline std::string* PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::mutable_action() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.action)
  return _internal_mutable_action();
}
inline const std::string& PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::_internal_action() const {
  return action_.GetNoArena();
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::_internal_set_action(const std::string& value) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::set_action(std::string&& value) {
  
  action_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.action)
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::set_action(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.action)
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.action)
}
inline std::string* PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::_internal_mutable_action() {
  
  return action_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::release_action() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.action)
  
  return action_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::set_allocated_action(std::string* action) {
  if (action != nullptr) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.action)
}

// string content = 5;
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::clear_content() {
  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::content() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.content)
  return _internal_content();
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.content)
}
inline std::string* PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::mutable_content() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.content)
  return _internal_mutable_content();
}
inline const std::string& PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::_internal_content() const {
  return content_.GetNoArena();
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::_internal_set_content(const std::string& value) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::set_content(std::string&& value) {
  
  content_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.content)
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.content)
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.content)
}
inline std::string* PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::_internal_mutable_content() {
  
  return content_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::release_content() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.content)
  
  return content_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.content)
}

// uint32 channel_id = 6;
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.channel_id)
  return _internal_channel_id();
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.channel_id)
}

// uint32 user_id = 7;
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.user_id)
  return _internal_user_id();
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel.user_id)
}

// -------------------------------------------------------------------

// PUser_PAttachmentsInUser_PChannelInAttachment

// uint32 id = 1;
inline void PUser_PAttachmentsInUser_PChannelInAttachment::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser_PChannelInAttachment::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser_PChannelInAttachment::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.id)
  return _internal_id();
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.id)
}

// string name = 2;
inline void PUser_PAttachmentsInUser_PChannelInAttachment::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser_PAttachmentsInUser_PChannelInAttachment::name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.name)
  return _internal_name();
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.name)
}
inline std::string* PUser_PAttachmentsInUser_PChannelInAttachment::mutable_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.name)
  return _internal_mutable_name();
}
inline const std::string& PUser_PAttachmentsInUser_PChannelInAttachment::_internal_name() const {
  return name_.GetNoArena();
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.name)
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.name)
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.name)
}
inline std::string* PUser_PAttachmentsInUser_PChannelInAttachment::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser_PAttachmentsInUser_PChannelInAttachment::release_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.name)
}

// uint32 created_at = 3;
inline void PUser_PAttachmentsInUser_PChannelInAttachment::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser_PChannelInAttachment::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser_PChannelInAttachment::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.created_at)
  return _internal_created_at();
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.created_at)
}

// uint32 updated_at = 4;
inline void PUser_PAttachmentsInUser_PChannelInAttachment::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser_PChannelInAttachment::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser_PChannelInAttachment::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.updated_at)
  return _internal_updated_at();
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.updated_at)
}

// uint32 user_id = 5;
inline void PUser_PAttachmentsInUser_PChannelInAttachment::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser_PChannelInAttachment::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser_PChannelInAttachment::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.user_id)
  return _internal_user_id();
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.user_id)
}

// uint32 count = 6;
inline void PUser_PAttachmentsInUser_PChannelInAttachment::clear_count() {
  count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser_PChannelInAttachment::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser_PChannelInAttachment::count() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.count)
  return _internal_count();
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  count_ = value;
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.count)
}

// repeated .kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.PActivitiesInChannel activities = 7;
inline int PUser_PAttachmentsInUser_PChannelInAttachment::_internal_activities_size() const {
  return activities_.size();
}
inline int PUser_PAttachmentsInUser_PChannelInAttachment::activities_size() const {
  return _internal_activities_size();
}
inline void PUser_PAttachmentsInUser_PChannelInAttachment::clear_activities() {
  activities_.Clear();
}
inline ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel* PUser_PAttachmentsInUser_PChannelInAttachment::mutable_activities(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.activities)
  return activities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel >*
PUser_PAttachmentsInUser_PChannelInAttachment::mutable_activities() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.activities)
  return &activities_;
}
inline const ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel& PUser_PAttachmentsInUser_PChannelInAttachment::_internal_activities(int index) const {
  return activities_.Get(index);
}
inline const ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel& PUser_PAttachmentsInUser_PChannelInAttachment::activities(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.activities)
  return _internal_activities(index);
}
inline ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel* PUser_PAttachmentsInUser_PChannelInAttachment::_internal_add_activities() {
  return activities_.Add();
}
inline ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel* PUser_PAttachmentsInUser_PChannelInAttachment::add_activities() {
  // @@protoc_insertion_point(field_add:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.activities)
  return _internal_add_activities();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment_PActivitiesInChannel >&
PUser_PAttachmentsInUser_PChannelInAttachment::activities() const {
  // @@protoc_insertion_point(field_list:kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment.activities)
  return activities_;
}

// -------------------------------------------------------------------

// PUser_PAttachmentsInUser

// uint32 id = 1;
inline void PUser_PAttachmentsInUser::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.id)
  return _internal_id();
}
inline void PUser_PAttachmentsInUser::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PUser_PAttachmentsInUser::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.id)
}

// string file_file_name = 2;
inline void PUser_PAttachmentsInUser::clear_file_file_name() {
  file_file_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser_PAttachmentsInUser::file_file_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.file_file_name)
  return _internal_file_file_name();
}
inline void PUser_PAttachmentsInUser::set_file_file_name(const std::string& value) {
  _internal_set_file_file_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.file_file_name)
}
inline std::string* PUser_PAttachmentsInUser::mutable_file_file_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PAttachmentsInUser.file_file_name)
  return _internal_mutable_file_file_name();
}
inline const std::string& PUser_PAttachmentsInUser::_internal_file_file_name() const {
  return file_file_name_.GetNoArena();
}
inline void PUser_PAttachmentsInUser::_internal_set_file_file_name(const std::string& value) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser_PAttachmentsInUser::set_file_file_name(std::string&& value) {
  
  file_file_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.PAttachmentsInUser.file_file_name)
}
inline void PUser_PAttachmentsInUser::set_file_file_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.PAttachmentsInUser.file_file_name)
}
inline void PUser_PAttachmentsInUser::set_file_file_name(const char* value, size_t size) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.PAttachmentsInUser.file_file_name)
}
inline std::string* PUser_PAttachmentsInUser::_internal_mutable_file_file_name() {
  
  return file_file_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser_PAttachmentsInUser::release_file_file_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.PAttachmentsInUser.file_file_name)
  
  return file_file_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser_PAttachmentsInUser::set_allocated_file_file_name(std::string* file_file_name) {
  if (file_file_name != nullptr) {
    
  } else {
    
  }
  file_file_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_file_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.PAttachmentsInUser.file_file_name)
}

// string file_content_type = 3;
inline void PUser_PAttachmentsInUser::clear_file_content_type() {
  file_content_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser_PAttachmentsInUser::file_content_type() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.file_content_type)
  return _internal_file_content_type();
}
inline void PUser_PAttachmentsInUser::set_file_content_type(const std::string& value) {
  _internal_set_file_content_type(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.file_content_type)
}
inline std::string* PUser_PAttachmentsInUser::mutable_file_content_type() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PAttachmentsInUser.file_content_type)
  return _internal_mutable_file_content_type();
}
inline const std::string& PUser_PAttachmentsInUser::_internal_file_content_type() const {
  return file_content_type_.GetNoArena();
}
inline void PUser_PAttachmentsInUser::_internal_set_file_content_type(const std::string& value) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser_PAttachmentsInUser::set_file_content_type(std::string&& value) {
  
  file_content_type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.PAttachmentsInUser.file_content_type)
}
inline void PUser_PAttachmentsInUser::set_file_content_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.PAttachmentsInUser.file_content_type)
}
inline void PUser_PAttachmentsInUser::set_file_content_type(const char* value, size_t size) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.PAttachmentsInUser.file_content_type)
}
inline std::string* PUser_PAttachmentsInUser::_internal_mutable_file_content_type() {
  
  return file_content_type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser_PAttachmentsInUser::release_file_content_type() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.PAttachmentsInUser.file_content_type)
  
  return file_content_type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser_PAttachmentsInUser::set_allocated_file_content_type(std::string* file_content_type) {
  if (file_content_type != nullptr) {
    
  } else {
    
  }
  file_content_type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_content_type);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.PAttachmentsInUser.file_content_type)
}

// uint32 file_file_size = 4;
inline void PUser_PAttachmentsInUser::clear_file_file_size() {
  file_file_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser::_internal_file_file_size() const {
  return file_file_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser::file_file_size() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.file_file_size)
  return _internal_file_file_size();
}
inline void PUser_PAttachmentsInUser::_internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_file_size_ = value;
}
inline void PUser_PAttachmentsInUser::set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_file_size(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.file_file_size)
}

// uint32 message_id = 5;
inline void PUser_PAttachmentsInUser::clear_message_id() {
  message_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser::_internal_message_id() const {
  return message_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser::message_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.message_id)
  return _internal_message_id();
}
inline void PUser_PAttachmentsInUser::_internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  message_id_ = value;
}
inline void PUser_PAttachmentsInUser::set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.message_id)
}

// uint32 file_updated_at = 6;
inline void PUser_PAttachmentsInUser::clear_file_updated_at() {
  file_updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser::_internal_file_updated_at() const {
  return file_updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser::file_updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.file_updated_at)
  return _internal_file_updated_at();
}
inline void PUser_PAttachmentsInUser::_internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_updated_at_ = value;
}
inline void PUser_PAttachmentsInUser::set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.file_updated_at)
}

// uint32 created_at = 7;
inline void PUser_PAttachmentsInUser::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.created_at)
  return _internal_created_at();
}
inline void PUser_PAttachmentsInUser::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PUser_PAttachmentsInUser::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.created_at)
}

// uint32 updated_at = 8;
inline void PUser_PAttachmentsInUser::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.updated_at)
  return _internal_updated_at();
}
inline void PUser_PAttachmentsInUser::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PUser_PAttachmentsInUser::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.updated_at)
}

// uint32 user_id = 9;
inline void PUser_PAttachmentsInUser::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.user_id)
  return _internal_user_id();
}
inline void PUser_PAttachmentsInUser::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PUser_PAttachmentsInUser::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.user_id)
}

// uint32 channel_id = 10;
inline void PUser_PAttachmentsInUser::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser_PAttachmentsInUser::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.channel_id)
  return _internal_channel_id();
}
inline void PUser_PAttachmentsInUser::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PUser_PAttachmentsInUser::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.PAttachmentsInUser.channel_id)
}

// .kandan_small.PUser.PAttachmentsInUser.PChannelInAttachment channel = 11;
inline bool PUser_PAttachmentsInUser::_internal_has_channel() const {
  return this != internal_default_instance() && channel_ != nullptr;
}
inline bool PUser_PAttachmentsInUser::has_channel() const {
  return _internal_has_channel();
}
inline void PUser_PAttachmentsInUser::clear_channel() {
  if (GetArenaNoVirtual() == nullptr && channel_ != nullptr) {
    delete channel_;
  }
  channel_ = nullptr;
}
inline const ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment& PUser_PAttachmentsInUser::_internal_channel() const {
  const ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment* p = channel_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment*>(
      &::kandan_small::_PUser_PAttachmentsInUser_PChannelInAttachment_default_instance_);
}
inline const ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment& PUser_PAttachmentsInUser::channel() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.PAttachmentsInUser.channel)
  return _internal_channel();
}
inline ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment* PUser_PAttachmentsInUser::release_channel() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.PAttachmentsInUser.channel)
  
  ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment* temp = channel_;
  channel_ = nullptr;
  return temp;
}
inline ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment* PUser_PAttachmentsInUser::_internal_mutable_channel() {
  
  if (channel_ == nullptr) {
    auto* p = CreateMaybeMessage<::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment>(GetArenaNoVirtual());
    channel_ = p;
  }
  return channel_;
}
inline ::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment* PUser_PAttachmentsInUser::mutable_channel() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.PAttachmentsInUser.channel)
  return _internal_mutable_channel();
}
inline void PUser_PAttachmentsInUser::set_allocated_channel(::kandan_small::PUser_PAttachmentsInUser_PChannelInAttachment* channel) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete channel_;
  }
  if (channel) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      channel = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, channel, submessage_arena);
    }
    
  } else {
    
  }
  channel_ = channel;
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.PAttachmentsInUser.channel)
}

// -------------------------------------------------------------------

// PUser

// uint32 id = 1;
inline void PUser::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.id)
  return _internal_id();
}
inline void PUser::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PUser::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.id)
}

// string email = 2;
inline void PUser::clear_email() {
  email_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser::email() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.email)
  return _internal_email();
}
inline void PUser::set_email(const std::string& value) {
  _internal_set_email(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.email)
}
inline std::string* PUser::mutable_email() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.email)
  return _internal_mutable_email();
}
inline const std::string& PUser::_internal_email() const {
  return email_.GetNoArena();
}
inline void PUser::_internal_set_email(const std::string& value) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser::set_email(std::string&& value) {
  
  email_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.email)
}
inline void PUser::set_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.email)
}
inline void PUser::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.email)
}
inline std::string* PUser::_internal_mutable_email() {
  
  return email_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser::release_email() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.email)
  
  return email_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser::set_allocated_email(std::string* email) {
  if (email != nullptr) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.email)
}

// string encrypted_password = 3;
inline void PUser::clear_encrypted_password() {
  encrypted_password_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser::encrypted_password() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.encrypted_password)
  return _internal_encrypted_password();
}
inline void PUser::set_encrypted_password(const std::string& value) {
  _internal_set_encrypted_password(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.encrypted_password)
}
inline std::string* PUser::mutable_encrypted_password() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.encrypted_password)
  return _internal_mutable_encrypted_password();
}
inline const std::string& PUser::_internal_encrypted_password() const {
  return encrypted_password_.GetNoArena();
}
inline void PUser::_internal_set_encrypted_password(const std::string& value) {
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser::set_encrypted_password(std::string&& value) {
  
  encrypted_password_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.encrypted_password)
}
inline void PUser::set_encrypted_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.encrypted_password)
}
inline void PUser::set_encrypted_password(const char* value, size_t size) {
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.encrypted_password)
}
inline std::string* PUser::_internal_mutable_encrypted_password() {
  
  return encrypted_password_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser::release_encrypted_password() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.encrypted_password)
  
  return encrypted_password_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser::set_allocated_encrypted_password(std::string* encrypted_password) {
  if (encrypted_password != nullptr) {
    
  } else {
    
  }
  encrypted_password_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), encrypted_password);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.encrypted_password)
}

// string reset_password_token = 4;
inline void PUser::clear_reset_password_token() {
  reset_password_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser::reset_password_token() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.reset_password_token)
  return _internal_reset_password_token();
}
inline void PUser::set_reset_password_token(const std::string& value) {
  _internal_set_reset_password_token(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.reset_password_token)
}
inline std::string* PUser::mutable_reset_password_token() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.reset_password_token)
  return _internal_mutable_reset_password_token();
}
inline const std::string& PUser::_internal_reset_password_token() const {
  return reset_password_token_.GetNoArena();
}
inline void PUser::_internal_set_reset_password_token(const std::string& value) {
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser::set_reset_password_token(std::string&& value) {
  
  reset_password_token_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.reset_password_token)
}
inline void PUser::set_reset_password_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.reset_password_token)
}
inline void PUser::set_reset_password_token(const char* value, size_t size) {
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.reset_password_token)
}
inline std::string* PUser::_internal_mutable_reset_password_token() {
  
  return reset_password_token_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser::release_reset_password_token() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.reset_password_token)
  
  return reset_password_token_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser::set_allocated_reset_password_token(std::string* reset_password_token) {
  if (reset_password_token != nullptr) {
    
  } else {
    
  }
  reset_password_token_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reset_password_token);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.reset_password_token)
}

// uint32 reset_password_sent_at = 5;
inline void PUser::clear_reset_password_sent_at() {
  reset_password_sent_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser::_internal_reset_password_sent_at() const {
  return reset_password_sent_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser::reset_password_sent_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.reset_password_sent_at)
  return _internal_reset_password_sent_at();
}
inline void PUser::_internal_set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  reset_password_sent_at_ = value;
}
inline void PUser::set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reset_password_sent_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.reset_password_sent_at)
}

// uint32 remember_created_at = 6;
inline void PUser::clear_remember_created_at() {
  remember_created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser::_internal_remember_created_at() const {
  return remember_created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser::remember_created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.remember_created_at)
  return _internal_remember_created_at();
}
inline void PUser::_internal_set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  remember_created_at_ = value;
}
inline void PUser::set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_remember_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.remember_created_at)
}

// string first_name = 7;
inline void PUser::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser::first_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.first_name)
  return _internal_first_name();
}
inline void PUser::set_first_name(const std::string& value) {
  _internal_set_first_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.first_name)
}
inline std::string* PUser::mutable_first_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.first_name)
  return _internal_mutable_first_name();
}
inline const std::string& PUser::_internal_first_name() const {
  return first_name_.GetNoArena();
}
inline void PUser::_internal_set_first_name(const std::string& value) {
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser::set_first_name(std::string&& value) {
  
  first_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.first_name)
}
inline void PUser::set_first_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.first_name)
}
inline void PUser::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.first_name)
}
inline std::string* PUser::_internal_mutable_first_name() {
  
  return first_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser::release_first_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.first_name)
  
  return first_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser::set_allocated_first_name(std::string* first_name) {
  if (first_name != nullptr) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.first_name)
}

// string last_name = 8;
inline void PUser::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser::last_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.last_name)
  return _internal_last_name();
}
inline void PUser::set_last_name(const std::string& value) {
  _internal_set_last_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.last_name)
}
inline std::string* PUser::mutable_last_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.last_name)
  return _internal_mutable_last_name();
}
inline const std::string& PUser::_internal_last_name() const {
  return last_name_.GetNoArena();
}
inline void PUser::_internal_set_last_name(const std::string& value) {
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser::set_last_name(std::string&& value) {
  
  last_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.last_name)
}
inline void PUser::set_last_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.last_name)
}
inline void PUser::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.last_name)
}
inline std::string* PUser::_internal_mutable_last_name() {
  
  return last_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser::release_last_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.last_name)
  
  return last_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser::set_allocated_last_name(std::string* last_name) {
  if (last_name != nullptr) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.last_name)
}

// uint32 signin_count = 9;
inline void PUser::clear_signin_count() {
  signin_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser::_internal_signin_count() const {
  return signin_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser::signin_count() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.signin_count)
  return _internal_signin_count();
}
inline void PUser::_internal_set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  signin_count_ = value;
}
inline void PUser::set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_signin_count(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.signin_count)
}

// uint32 current_sign_in_at = 10;
inline void PUser::clear_current_sign_in_at() {
  current_sign_in_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser::_internal_current_sign_in_at() const {
  return current_sign_in_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser::current_sign_in_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.current_sign_in_at)
  return _internal_current_sign_in_at();
}
inline void PUser::_internal_set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  current_sign_in_at_ = value;
}
inline void PUser::set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_current_sign_in_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.current_sign_in_at)
}

// string current_sign_in_ip = 11;
inline void PUser::clear_current_sign_in_ip() {
  current_sign_in_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser::current_sign_in_ip() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.current_sign_in_ip)
  return _internal_current_sign_in_ip();
}
inline void PUser::set_current_sign_in_ip(const std::string& value) {
  _internal_set_current_sign_in_ip(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.current_sign_in_ip)
}
inline std::string* PUser::mutable_current_sign_in_ip() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.current_sign_in_ip)
  return _internal_mutable_current_sign_in_ip();
}
inline const std::string& PUser::_internal_current_sign_in_ip() const {
  return current_sign_in_ip_.GetNoArena();
}
inline void PUser::_internal_set_current_sign_in_ip(const std::string& value) {
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser::set_current_sign_in_ip(std::string&& value) {
  
  current_sign_in_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.current_sign_in_ip)
}
inline void PUser::set_current_sign_in_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.current_sign_in_ip)
}
inline void PUser::set_current_sign_in_ip(const char* value, size_t size) {
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.current_sign_in_ip)
}
inline std::string* PUser::_internal_mutable_current_sign_in_ip() {
  
  return current_sign_in_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser::release_current_sign_in_ip() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.current_sign_in_ip)
  
  return current_sign_in_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser::set_allocated_current_sign_in_ip(std::string* current_sign_in_ip) {
  if (current_sign_in_ip != nullptr) {
    
  } else {
    
  }
  current_sign_in_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), current_sign_in_ip);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.current_sign_in_ip)
}

// uint32 last_sign_in_at = 12;
inline void PUser::clear_last_sign_in_at() {
  last_sign_in_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser::_internal_last_sign_in_at() const {
  return last_sign_in_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser::last_sign_in_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.last_sign_in_at)
  return _internal_last_sign_in_at();
}
inline void PUser::_internal_set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  last_sign_in_at_ = value;
}
inline void PUser::set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_sign_in_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.last_sign_in_at)
}

// string last_sign_in_ip = 13;
inline void PUser::clear_last_sign_in_ip() {
  last_sign_in_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser::last_sign_in_ip() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.last_sign_in_ip)
  return _internal_last_sign_in_ip();
}
inline void PUser::set_last_sign_in_ip(const std::string& value) {
  _internal_set_last_sign_in_ip(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.last_sign_in_ip)
}
inline std::string* PUser::mutable_last_sign_in_ip() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.last_sign_in_ip)
  return _internal_mutable_last_sign_in_ip();
}
inline const std::string& PUser::_internal_last_sign_in_ip() const {
  return last_sign_in_ip_.GetNoArena();
}
inline void PUser::_internal_set_last_sign_in_ip(const std::string& value) {
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser::set_last_sign_in_ip(std::string&& value) {
  
  last_sign_in_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.last_sign_in_ip)
}
inline void PUser::set_last_sign_in_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.last_sign_in_ip)
}
inline void PUser::set_last_sign_in_ip(const char* value, size_t size) {
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.last_sign_in_ip)
}
inline std::string* PUser::_internal_mutable_last_sign_in_ip() {
  
  return last_sign_in_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser::release_last_sign_in_ip() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.last_sign_in_ip)
  
  return last_sign_in_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser::set_allocated_last_sign_in_ip(std::string* last_sign_in_ip) {
  if (last_sign_in_ip != nullptr) {
    
  } else {
    
  }
  last_sign_in_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_sign_in_ip);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.last_sign_in_ip)
}

// string auth_token = 14;
inline void PUser::clear_auth_token() {
  auth_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser::auth_token() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.auth_token)
  return _internal_auth_token();
}
inline void PUser::set_auth_token(const std::string& value) {
  _internal_set_auth_token(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.auth_token)
}
inline std::string* PUser::mutable_auth_token() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.auth_token)
  return _internal_mutable_auth_token();
}
inline const std::string& PUser::_internal_auth_token() const {
  return auth_token_.GetNoArena();
}
inline void PUser::_internal_set_auth_token(const std::string& value) {
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser::set_auth_token(std::string&& value) {
  
  auth_token_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.auth_token)
}
inline void PUser::set_auth_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.auth_token)
}
inline void PUser::set_auth_token(const char* value, size_t size) {
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.auth_token)
}
inline std::string* PUser::_internal_mutable_auth_token() {
  
  return auth_token_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser::release_auth_token() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.auth_token)
  
  return auth_token_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser::set_allocated_auth_token(std::string* auth_token) {
  if (auth_token != nullptr) {
    
  } else {
    
  }
  auth_token_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), auth_token);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.auth_token)
}

// string locale = 15;
inline void PUser::clear_locale() {
  locale_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser::locale() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.locale)
  return _internal_locale();
}
inline void PUser::set_locale(const std::string& value) {
  _internal_set_locale(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.locale)
}
inline std::string* PUser::mutable_locale() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.locale)
  return _internal_mutable_locale();
}
inline const std::string& PUser::_internal_locale() const {
  return locale_.GetNoArena();
}
inline void PUser::_internal_set_locale(const std::string& value) {
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser::set_locale(std::string&& value) {
  
  locale_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.locale)
}
inline void PUser::set_locale(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.locale)
}
inline void PUser::set_locale(const char* value, size_t size) {
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.locale)
}
inline std::string* PUser::_internal_mutable_locale() {
  
  return locale_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser::release_locale() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.locale)
  
  return locale_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser::set_allocated_locale(std::string* locale) {
  if (locale != nullptr) {
    
  } else {
    
  }
  locale_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), locale);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.locale)
}

// string gravatar_hash = 16;
inline void PUser::clear_gravatar_hash() {
  gravatar_hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser::gravatar_hash() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.gravatar_hash)
  return _internal_gravatar_hash();
}
inline void PUser::set_gravatar_hash(const std::string& value) {
  _internal_set_gravatar_hash(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.gravatar_hash)
}
inline std::string* PUser::mutable_gravatar_hash() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.gravatar_hash)
  return _internal_mutable_gravatar_hash();
}
inline const std::string& PUser::_internal_gravatar_hash() const {
  return gravatar_hash_.GetNoArena();
}
inline void PUser::_internal_set_gravatar_hash(const std::string& value) {
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser::set_gravatar_hash(std::string&& value) {
  
  gravatar_hash_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.gravatar_hash)
}
inline void PUser::set_gravatar_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.gravatar_hash)
}
inline void PUser::set_gravatar_hash(const char* value, size_t size) {
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.gravatar_hash)
}
inline std::string* PUser::_internal_mutable_gravatar_hash() {
  
  return gravatar_hash_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser::release_gravatar_hash() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.gravatar_hash)
  
  return gravatar_hash_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser::set_allocated_gravatar_hash(std::string* gravatar_hash) {
  if (gravatar_hash != nullptr) {
    
  } else {
    
  }
  gravatar_hash_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gravatar_hash);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.gravatar_hash)
}

// string username = 17;
inline void PUser::clear_username() {
  username_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser::username() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.username)
  return _internal_username();
}
inline void PUser::set_username(const std::string& value) {
  _internal_set_username(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.username)
}
inline std::string* PUser::mutable_username() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.username)
  return _internal_mutable_username();
}
inline const std::string& PUser::_internal_username() const {
  return username_.GetNoArena();
}
inline void PUser::_internal_set_username(const std::string& value) {
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser::set_username(std::string&& value) {
  
  username_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.username)
}
inline void PUser::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.username)
}
inline void PUser::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.username)
}
inline std::string* PUser::_internal_mutable_username() {
  
  return username_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser::release_username() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.username)
  
  return username_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser::set_allocated_username(std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.username)
}

// string regstatus = 18;
inline void PUser::clear_regstatus() {
  regstatus_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser::regstatus() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.regstatus)
  return _internal_regstatus();
}
inline void PUser::set_regstatus(const std::string& value) {
  _internal_set_regstatus(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.regstatus)
}
inline std::string* PUser::mutable_regstatus() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.regstatus)
  return _internal_mutable_regstatus();
}
inline const std::string& PUser::_internal_regstatus() const {
  return regstatus_.GetNoArena();
}
inline void PUser::_internal_set_regstatus(const std::string& value) {
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser::set_regstatus(std::string&& value) {
  
  regstatus_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.regstatus)
}
inline void PUser::set_regstatus(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.regstatus)
}
inline void PUser::set_regstatus(const char* value, size_t size) {
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.regstatus)
}
inline std::string* PUser::_internal_mutable_regstatus() {
  
  return regstatus_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser::release_regstatus() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.regstatus)
  
  return regstatus_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser::set_allocated_regstatus(std::string* regstatus) {
  if (regstatus != nullptr) {
    
  } else {
    
  }
  regstatus_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), regstatus);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.regstatus)
}

// bool active = 19;
inline void PUser::clear_active() {
  active_ = false;
}
inline bool PUser::_internal_active() const {
  return active_;
}
inline bool PUser::active() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.active)
  return _internal_active();
}
inline void PUser::_internal_set_active(bool value) {
  
  active_ = value;
}
inline void PUser::set_active(bool value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.active)
}

// bool is_admin = 20;
inline void PUser::clear_is_admin() {
  is_admin_ = false;
}
inline bool PUser::_internal_is_admin() const {
  return is_admin_;
}
inline bool PUser::is_admin() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.is_admin)
  return _internal_is_admin();
}
inline void PUser::_internal_set_is_admin(bool value) {
  
  is_admin_ = value;
}
inline void PUser::set_is_admin(bool value) {
  _internal_set_is_admin(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.is_admin)
}

// string avatar_url = 21;
inline void PUser::clear_avatar_url() {
  avatar_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PUser::avatar_url() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.avatar_url)
  return _internal_avatar_url();
}
inline void PUser::set_avatar_url(const std::string& value) {
  _internal_set_avatar_url(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.avatar_url)
}
inline std::string* PUser::mutable_avatar_url() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.avatar_url)
  return _internal_mutable_avatar_url();
}
inline const std::string& PUser::_internal_avatar_url() const {
  return avatar_url_.GetNoArena();
}
inline void PUser::_internal_set_avatar_url(const std::string& value) {
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PUser::set_avatar_url(std::string&& value) {
  
  avatar_url_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PUser.avatar_url)
}
inline void PUser::set_avatar_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PUser.avatar_url)
}
inline void PUser::set_avatar_url(const char* value, size_t size) {
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PUser.avatar_url)
}
inline std::string* PUser::_internal_mutable_avatar_url() {
  
  return avatar_url_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PUser::release_avatar_url() {
  // @@protoc_insertion_point(field_release:kandan_small.PUser.avatar_url)
  
  return avatar_url_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PUser::set_allocated_avatar_url(std::string* avatar_url) {
  if (avatar_url != nullptr) {
    
  } else {
    
  }
  avatar_url_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar_url);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PUser.avatar_url)
}

// uint32 created_at = 22;
inline void PUser::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.created_at)
  return _internal_created_at();
}
inline void PUser::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PUser::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.created_at)
}

// uint32 updated_at = 23;
inline void PUser::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PUser::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.updated_at)
  return _internal_updated_at();
}
inline void PUser::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PUser::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PUser.updated_at)
}

// repeated .kandan_small.PUser.PChannelsInUser channels = 24;
inline int PUser::_internal_channels_size() const {
  return channels_.size();
}
inline int PUser::channels_size() const {
  return _internal_channels_size();
}
inline void PUser::clear_channels() {
  channels_.Clear();
}
inline ::kandan_small::PUser_PChannelsInUser* PUser::mutable_channels(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.channels)
  return channels_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PChannelsInUser >*
PUser::mutable_channels() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PUser.channels)
  return &channels_;
}
inline const ::kandan_small::PUser_PChannelsInUser& PUser::_internal_channels(int index) const {
  return channels_.Get(index);
}
inline const ::kandan_small::PUser_PChannelsInUser& PUser::channels(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.channels)
  return _internal_channels(index);
}
inline ::kandan_small::PUser_PChannelsInUser* PUser::_internal_add_channels() {
  return channels_.Add();
}
inline ::kandan_small::PUser_PChannelsInUser* PUser::add_channels() {
  // @@protoc_insertion_point(field_add:kandan_small.PUser.channels)
  return _internal_add_channels();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PChannelsInUser >&
PUser::channels() const {
  // @@protoc_insertion_point(field_list:kandan_small.PUser.channels)
  return channels_;
}

// repeated .kandan_small.PUser.PActivitiesInUser activities = 25;
inline int PUser::_internal_activities_size() const {
  return activities_.size();
}
inline int PUser::activities_size() const {
  return _internal_activities_size();
}
inline void PUser::clear_activities() {
  activities_.Clear();
}
inline ::kandan_small::PUser_PActivitiesInUser* PUser::mutable_activities(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.activities)
  return activities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PActivitiesInUser >*
PUser::mutable_activities() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PUser.activities)
  return &activities_;
}
inline const ::kandan_small::PUser_PActivitiesInUser& PUser::_internal_activities(int index) const {
  return activities_.Get(index);
}
inline const ::kandan_small::PUser_PActivitiesInUser& PUser::activities(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.activities)
  return _internal_activities(index);
}
inline ::kandan_small::PUser_PActivitiesInUser* PUser::_internal_add_activities() {
  return activities_.Add();
}
inline ::kandan_small::PUser_PActivitiesInUser* PUser::add_activities() {
  // @@protoc_insertion_point(field_add:kandan_small.PUser.activities)
  return _internal_add_activities();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PActivitiesInUser >&
PUser::activities() const {
  // @@protoc_insertion_point(field_list:kandan_small.PUser.activities)
  return activities_;
}

// repeated .kandan_small.PUser.PAttachmentsInUser attachments = 26;
inline int PUser::_internal_attachments_size() const {
  return attachments_.size();
}
inline int PUser::attachments_size() const {
  return _internal_attachments_size();
}
inline void PUser::clear_attachments() {
  attachments_.Clear();
}
inline ::kandan_small::PUser_PAttachmentsInUser* PUser::mutable_attachments(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUser.attachments)
  return attachments_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PAttachmentsInUser >*
PUser::mutable_attachments() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PUser.attachments)
  return &attachments_;
}
inline const ::kandan_small::PUser_PAttachmentsInUser& PUser::_internal_attachments(int index) const {
  return attachments_.Get(index);
}
inline const ::kandan_small::PUser_PAttachmentsInUser& PUser::attachments(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PUser.attachments)
  return _internal_attachments(index);
}
inline ::kandan_small::PUser_PAttachmentsInUser* PUser::_internal_add_attachments() {
  return attachments_.Add();
}
inline ::kandan_small::PUser_PAttachmentsInUser* PUser::add_attachments() {
  // @@protoc_insertion_point(field_add:kandan_small.PUser.attachments)
  return _internal_add_attachments();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser_PAttachmentsInUser >&
PUser::attachments() const {
  // @@protoc_insertion_point(field_list:kandan_small.PUser.attachments)
  return attachments_;
}

// -------------------------------------------------------------------

// PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser

// uint32 id = 1;
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.id)
  return _internal_id();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.id)
}

// string file_file_name = 2;
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::clear_file_file_name() {
  file_file_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::file_file_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.file_file_name)
  return _internal_file_file_name();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::set_file_file_name(const std::string& value) {
  _internal_set_file_file_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.file_file_name)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::mutable_file_file_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.file_file_name)
  return _internal_mutable_file_file_name();
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_file_file_name() const {
  return file_file_name_.GetNoArena();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_set_file_file_name(const std::string& value) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::set_file_file_name(std::string&& value) {
  
  file_file_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.file_file_name)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::set_file_file_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.file_file_name)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::set_file_file_name(const char* value, size_t size) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.file_file_name)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_mutable_file_file_name() {
  
  return file_file_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::release_file_file_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.file_file_name)
  
  return file_file_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::set_allocated_file_file_name(std::string* file_file_name) {
  if (file_file_name != nullptr) {
    
  } else {
    
  }
  file_file_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_file_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.file_file_name)
}

// string file_content_type = 3;
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::clear_file_content_type() {
  file_content_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::file_content_type() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.file_content_type)
  return _internal_file_content_type();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::set_file_content_type(const std::string& value) {
  _internal_set_file_content_type(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.file_content_type)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::mutable_file_content_type() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.file_content_type)
  return _internal_mutable_file_content_type();
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_file_content_type() const {
  return file_content_type_.GetNoArena();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_set_file_content_type(const std::string& value) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::set_file_content_type(std::string&& value) {
  
  file_content_type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.file_content_type)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::set_file_content_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.file_content_type)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::set_file_content_type(const char* value, size_t size) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.file_content_type)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_mutable_file_content_type() {
  
  return file_content_type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::release_file_content_type() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.file_content_type)
  
  return file_content_type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::set_allocated_file_content_type(std::string* file_content_type) {
  if (file_content_type != nullptr) {
    
  } else {
    
  }
  file_content_type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_content_type);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.file_content_type)
}

// uint32 file_file_size = 4;
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::clear_file_file_size() {
  file_file_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_file_file_size() const {
  return file_file_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::file_file_size() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.file_file_size)
  return _internal_file_file_size();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_file_size_ = value;
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_file_size(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.file_file_size)
}

// uint32 message_id = 5;
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::clear_message_id() {
  message_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_message_id() const {
  return message_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::message_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.message_id)
  return _internal_message_id();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  message_id_ = value;
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.message_id)
}

// uint32 file_updated_at = 6;
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::clear_file_updated_at() {
  file_updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_file_updated_at() const {
  return file_updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::file_updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.file_updated_at)
  return _internal_file_updated_at();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_updated_at_ = value;
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.file_updated_at)
}

// uint32 created_at = 7;
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.created_at)
  return _internal_created_at();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.created_at)
}

// uint32 updated_at = 8;
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.updated_at)
  return _internal_updated_at();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.updated_at)
}

// uint32 user_id = 9;
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.user_id)
  return _internal_user_id();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.user_id)
}

// uint32 channel_id = 10;
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.channel_id)
  return _internal_channel_id();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser.channel_id)
}

// -------------------------------------------------------------------

// PChannel_PActivitiesInChannel_PUserInActivity

// uint32 id = 1;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.id)
  return _internal_id();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.id)
}

// string email = 2;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_email() {
  email_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::email() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.email)
  return _internal_email();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_email(const std::string& value) {
  _internal_set_email(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.email)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::mutable_email() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.email)
  return _internal_mutable_email();
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::_internal_email() const {
  return email_.GetNoArena();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_email(const std::string& value) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_email(std::string&& value) {
  
  email_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.email)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.email)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.email)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::_internal_mutable_email() {
  
  return email_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::release_email() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.email)
  
  return email_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_allocated_email(std::string* email) {
  if (email != nullptr) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.email)
}

// string encrypted_password = 3;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_encrypted_password() {
  encrypted_password_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::encrypted_password() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.encrypted_password)
  return _internal_encrypted_password();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_encrypted_password(const std::string& value) {
  _internal_set_encrypted_password(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.encrypted_password)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::mutable_encrypted_password() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.encrypted_password)
  return _internal_mutable_encrypted_password();
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::_internal_encrypted_password() const {
  return encrypted_password_.GetNoArena();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_encrypted_password(const std::string& value) {
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_encrypted_password(std::string&& value) {
  
  encrypted_password_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.encrypted_password)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_encrypted_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.encrypted_password)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_encrypted_password(const char* value, size_t size) {
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.encrypted_password)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::_internal_mutable_encrypted_password() {
  
  return encrypted_password_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::release_encrypted_password() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.encrypted_password)
  
  return encrypted_password_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_allocated_encrypted_password(std::string* encrypted_password) {
  if (encrypted_password != nullptr) {
    
  } else {
    
  }
  encrypted_password_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), encrypted_password);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.encrypted_password)
}

// string reset_password_token = 4;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_reset_password_token() {
  reset_password_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::reset_password_token() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.reset_password_token)
  return _internal_reset_password_token();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_reset_password_token(const std::string& value) {
  _internal_set_reset_password_token(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.reset_password_token)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::mutable_reset_password_token() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.reset_password_token)
  return _internal_mutable_reset_password_token();
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::_internal_reset_password_token() const {
  return reset_password_token_.GetNoArena();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_reset_password_token(const std::string& value) {
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_reset_password_token(std::string&& value) {
  
  reset_password_token_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.reset_password_token)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_reset_password_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.reset_password_token)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_reset_password_token(const char* value, size_t size) {
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.reset_password_token)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::_internal_mutable_reset_password_token() {
  
  return reset_password_token_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::release_reset_password_token() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.reset_password_token)
  
  return reset_password_token_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_allocated_reset_password_token(std::string* reset_password_token) {
  if (reset_password_token != nullptr) {
    
  } else {
    
  }
  reset_password_token_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reset_password_token);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.reset_password_token)
}

// uint32 reset_password_sent_at = 5;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_reset_password_sent_at() {
  reset_password_sent_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity::_internal_reset_password_sent_at() const {
  return reset_password_sent_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity::reset_password_sent_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.reset_password_sent_at)
  return _internal_reset_password_sent_at();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  reset_password_sent_at_ = value;
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reset_password_sent_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.reset_password_sent_at)
}

// uint32 remember_created_at = 6;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_remember_created_at() {
  remember_created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity::_internal_remember_created_at() const {
  return remember_created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity::remember_created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.remember_created_at)
  return _internal_remember_created_at();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  remember_created_at_ = value;
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_remember_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.remember_created_at)
}

// string first_name = 7;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::first_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.first_name)
  return _internal_first_name();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_first_name(const std::string& value) {
  _internal_set_first_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.first_name)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::mutable_first_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.first_name)
  return _internal_mutable_first_name();
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::_internal_first_name() const {
  return first_name_.GetNoArena();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_first_name(const std::string& value) {
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_first_name(std::string&& value) {
  
  first_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.first_name)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_first_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.first_name)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.first_name)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::_internal_mutable_first_name() {
  
  return first_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::release_first_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.first_name)
  
  return first_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_allocated_first_name(std::string* first_name) {
  if (first_name != nullptr) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.first_name)
}

// string last_name = 8;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::last_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.last_name)
  return _internal_last_name();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_last_name(const std::string& value) {
  _internal_set_last_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.last_name)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::mutable_last_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.last_name)
  return _internal_mutable_last_name();
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::_internal_last_name() const {
  return last_name_.GetNoArena();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_last_name(const std::string& value) {
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_last_name(std::string&& value) {
  
  last_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.last_name)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_last_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.last_name)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.last_name)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::_internal_mutable_last_name() {
  
  return last_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::release_last_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.last_name)
  
  return last_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_allocated_last_name(std::string* last_name) {
  if (last_name != nullptr) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.last_name)
}

// uint32 signin_count = 9;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_signin_count() {
  signin_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity::_internal_signin_count() const {
  return signin_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity::signin_count() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.signin_count)
  return _internal_signin_count();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  signin_count_ = value;
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_signin_count(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.signin_count)
}

// uint32 current_sign_in_at = 10;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_current_sign_in_at() {
  current_sign_in_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity::_internal_current_sign_in_at() const {
  return current_sign_in_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity::current_sign_in_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.current_sign_in_at)
  return _internal_current_sign_in_at();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  current_sign_in_at_ = value;
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_current_sign_in_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.current_sign_in_at)
}

// string current_sign_in_ip = 11;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_current_sign_in_ip() {
  current_sign_in_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::current_sign_in_ip() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.current_sign_in_ip)
  return _internal_current_sign_in_ip();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_current_sign_in_ip(const std::string& value) {
  _internal_set_current_sign_in_ip(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.current_sign_in_ip)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::mutable_current_sign_in_ip() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.current_sign_in_ip)
  return _internal_mutable_current_sign_in_ip();
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::_internal_current_sign_in_ip() const {
  return current_sign_in_ip_.GetNoArena();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_current_sign_in_ip(const std::string& value) {
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_current_sign_in_ip(std::string&& value) {
  
  current_sign_in_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.current_sign_in_ip)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_current_sign_in_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.current_sign_in_ip)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_current_sign_in_ip(const char* value, size_t size) {
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.current_sign_in_ip)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::_internal_mutable_current_sign_in_ip() {
  
  return current_sign_in_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::release_current_sign_in_ip() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.current_sign_in_ip)
  
  return current_sign_in_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_allocated_current_sign_in_ip(std::string* current_sign_in_ip) {
  if (current_sign_in_ip != nullptr) {
    
  } else {
    
  }
  current_sign_in_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), current_sign_in_ip);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.current_sign_in_ip)
}

// uint32 last_sign_in_at = 12;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_last_sign_in_at() {
  last_sign_in_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity::_internal_last_sign_in_at() const {
  return last_sign_in_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity::last_sign_in_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.last_sign_in_at)
  return _internal_last_sign_in_at();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  last_sign_in_at_ = value;
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_sign_in_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.last_sign_in_at)
}

// string last_sign_in_ip = 13;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_last_sign_in_ip() {
  last_sign_in_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::last_sign_in_ip() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.last_sign_in_ip)
  return _internal_last_sign_in_ip();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_last_sign_in_ip(const std::string& value) {
  _internal_set_last_sign_in_ip(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.last_sign_in_ip)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::mutable_last_sign_in_ip() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.last_sign_in_ip)
  return _internal_mutable_last_sign_in_ip();
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::_internal_last_sign_in_ip() const {
  return last_sign_in_ip_.GetNoArena();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_last_sign_in_ip(const std::string& value) {
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_last_sign_in_ip(std::string&& value) {
  
  last_sign_in_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.last_sign_in_ip)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_last_sign_in_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.last_sign_in_ip)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_last_sign_in_ip(const char* value, size_t size) {
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.last_sign_in_ip)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::_internal_mutable_last_sign_in_ip() {
  
  return last_sign_in_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::release_last_sign_in_ip() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.last_sign_in_ip)
  
  return last_sign_in_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_allocated_last_sign_in_ip(std::string* last_sign_in_ip) {
  if (last_sign_in_ip != nullptr) {
    
  } else {
    
  }
  last_sign_in_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_sign_in_ip);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.last_sign_in_ip)
}

// string auth_token = 14;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_auth_token() {
  auth_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::auth_token() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.auth_token)
  return _internal_auth_token();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_auth_token(const std::string& value) {
  _internal_set_auth_token(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.auth_token)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::mutable_auth_token() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.auth_token)
  return _internal_mutable_auth_token();
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::_internal_auth_token() const {
  return auth_token_.GetNoArena();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_auth_token(const std::string& value) {
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_auth_token(std::string&& value) {
  
  auth_token_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.auth_token)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_auth_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.auth_token)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_auth_token(const char* value, size_t size) {
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.auth_token)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::_internal_mutable_auth_token() {
  
  return auth_token_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::release_auth_token() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.auth_token)
  
  return auth_token_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_allocated_auth_token(std::string* auth_token) {
  if (auth_token != nullptr) {
    
  } else {
    
  }
  auth_token_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), auth_token);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.auth_token)
}

// string locale = 15;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_locale() {
  locale_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::locale() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.locale)
  return _internal_locale();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_locale(const std::string& value) {
  _internal_set_locale(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.locale)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::mutable_locale() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.locale)
  return _internal_mutable_locale();
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::_internal_locale() const {
  return locale_.GetNoArena();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_locale(const std::string& value) {
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_locale(std::string&& value) {
  
  locale_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.locale)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_locale(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.locale)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_locale(const char* value, size_t size) {
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.locale)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::_internal_mutable_locale() {
  
  return locale_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::release_locale() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.locale)
  
  return locale_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_allocated_locale(std::string* locale) {
  if (locale != nullptr) {
    
  } else {
    
  }
  locale_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), locale);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.locale)
}

// string gravatar_hash = 16;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_gravatar_hash() {
  gravatar_hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::gravatar_hash() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.gravatar_hash)
  return _internal_gravatar_hash();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_gravatar_hash(const std::string& value) {
  _internal_set_gravatar_hash(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.gravatar_hash)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::mutable_gravatar_hash() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.gravatar_hash)
  return _internal_mutable_gravatar_hash();
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::_internal_gravatar_hash() const {
  return gravatar_hash_.GetNoArena();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_gravatar_hash(const std::string& value) {
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_gravatar_hash(std::string&& value) {
  
  gravatar_hash_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.gravatar_hash)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_gravatar_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.gravatar_hash)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_gravatar_hash(const char* value, size_t size) {
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.gravatar_hash)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::_internal_mutable_gravatar_hash() {
  
  return gravatar_hash_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::release_gravatar_hash() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.gravatar_hash)
  
  return gravatar_hash_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_allocated_gravatar_hash(std::string* gravatar_hash) {
  if (gravatar_hash != nullptr) {
    
  } else {
    
  }
  gravatar_hash_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gravatar_hash);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.gravatar_hash)
}

// string username = 17;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_username() {
  username_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::username() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.username)
  return _internal_username();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_username(const std::string& value) {
  _internal_set_username(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.username)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::mutable_username() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.username)
  return _internal_mutable_username();
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::_internal_username() const {
  return username_.GetNoArena();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_username(const std::string& value) {
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_username(std::string&& value) {
  
  username_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.username)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.username)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.username)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::_internal_mutable_username() {
  
  return username_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::release_username() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.username)
  
  return username_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_allocated_username(std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.username)
}

// string regstatus = 18;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_regstatus() {
  regstatus_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::regstatus() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.regstatus)
  return _internal_regstatus();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_regstatus(const std::string& value) {
  _internal_set_regstatus(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.regstatus)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::mutable_regstatus() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.regstatus)
  return _internal_mutable_regstatus();
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::_internal_regstatus() const {
  return regstatus_.GetNoArena();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_regstatus(const std::string& value) {
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_regstatus(std::string&& value) {
  
  regstatus_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.regstatus)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_regstatus(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.regstatus)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_regstatus(const char* value, size_t size) {
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.regstatus)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::_internal_mutable_regstatus() {
  
  return regstatus_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::release_regstatus() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.regstatus)
  
  return regstatus_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_allocated_regstatus(std::string* regstatus) {
  if (regstatus != nullptr) {
    
  } else {
    
  }
  regstatus_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), regstatus);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.regstatus)
}

// bool active = 19;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_active() {
  active_ = false;
}
inline bool PChannel_PActivitiesInChannel_PUserInActivity::_internal_active() const {
  return active_;
}
inline bool PChannel_PActivitiesInChannel_PUserInActivity::active() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.active)
  return _internal_active();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_active(bool value) {
  
  active_ = value;
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_active(bool value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.active)
}

// bool is_admin = 20;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_is_admin() {
  is_admin_ = false;
}
inline bool PChannel_PActivitiesInChannel_PUserInActivity::_internal_is_admin() const {
  return is_admin_;
}
inline bool PChannel_PActivitiesInChannel_PUserInActivity::is_admin() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.is_admin)
  return _internal_is_admin();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_is_admin(bool value) {
  
  is_admin_ = value;
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_is_admin(bool value) {
  _internal_set_is_admin(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.is_admin)
}

// string avatar_url = 21;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_avatar_url() {
  avatar_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::avatar_url() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.avatar_url)
  return _internal_avatar_url();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_avatar_url(const std::string& value) {
  _internal_set_avatar_url(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.avatar_url)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::mutable_avatar_url() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.avatar_url)
  return _internal_mutable_avatar_url();
}
inline const std::string& PChannel_PActivitiesInChannel_PUserInActivity::_internal_avatar_url() const {
  return avatar_url_.GetNoArena();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_avatar_url(const std::string& value) {
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_avatar_url(std::string&& value) {
  
  avatar_url_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.avatar_url)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_avatar_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.avatar_url)
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_avatar_url(const char* value, size_t size) {
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.avatar_url)
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::_internal_mutable_avatar_url() {
  
  return avatar_url_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PActivitiesInChannel_PUserInActivity::release_avatar_url() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.avatar_url)
  
  return avatar_url_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_allocated_avatar_url(std::string* avatar_url) {
  if (avatar_url != nullptr) {
    
  } else {
    
  }
  avatar_url_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar_url);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.avatar_url)
}

// uint32 created_at = 22;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.created_at)
  return _internal_created_at();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.created_at)
}

// uint32 updated_at = 23;
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel_PUserInActivity::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.updated_at)
  return _internal_updated_at();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.updated_at)
}

// repeated .kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.PAttachmentsInUser attachments = 24;
inline int PChannel_PActivitiesInChannel_PUserInActivity::_internal_attachments_size() const {
  return attachments_.size();
}
inline int PChannel_PActivitiesInChannel_PUserInActivity::attachments_size() const {
  return _internal_attachments_size();
}
inline void PChannel_PActivitiesInChannel_PUserInActivity::clear_attachments() {
  attachments_.Clear();
}
inline ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser* PChannel_PActivitiesInChannel_PUserInActivity::mutable_attachments(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.attachments)
  return attachments_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser >*
PChannel_PActivitiesInChannel_PUserInActivity::mutable_attachments() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.attachments)
  return &attachments_;
}
inline const ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser& PChannel_PActivitiesInChannel_PUserInActivity::_internal_attachments(int index) const {
  return attachments_.Get(index);
}
inline const ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser& PChannel_PActivitiesInChannel_PUserInActivity::attachments(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.attachments)
  return _internal_attachments(index);
}
inline ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser* PChannel_PActivitiesInChannel_PUserInActivity::_internal_add_attachments() {
  return attachments_.Add();
}
inline ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser* PChannel_PActivitiesInChannel_PUserInActivity::add_attachments() {
  // @@protoc_insertion_point(field_add:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.attachments)
  return _internal_add_attachments();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity_PAttachmentsInUser >&
PChannel_PActivitiesInChannel_PUserInActivity::attachments() const {
  // @@protoc_insertion_point(field_list:kandan_small.PChannel.PActivitiesInChannel.PUserInActivity.attachments)
  return attachments_;
}

// -------------------------------------------------------------------

// PChannel_PActivitiesInChannel

// uint32 id = 1;
inline void PChannel_PActivitiesInChannel::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.id)
  return _internal_id();
}
inline void PChannel_PActivitiesInChannel::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PChannel_PActivitiesInChannel::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.id)
}

// uint32 created_at = 2;
inline void PChannel_PActivitiesInChannel::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.created_at)
  return _internal_created_at();
}
inline void PChannel_PActivitiesInChannel::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PChannel_PActivitiesInChannel::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.created_at)
}

// uint32 updated_at = 3;
inline void PChannel_PActivitiesInChannel::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.updated_at)
  return _internal_updated_at();
}
inline void PChannel_PActivitiesInChannel::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PChannel_PActivitiesInChannel::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.updated_at)
}

// string action = 4;
inline void PChannel_PActivitiesInChannel::clear_action() {
  action_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PActivitiesInChannel::action() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.action)
  return _internal_action();
}
inline void PChannel_PActivitiesInChannel::set_action(const std::string& value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.action)
}
inline std::string* PChannel_PActivitiesInChannel::mutable_action() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PActivitiesInChannel.action)
  return _internal_mutable_action();
}
inline const std::string& PChannel_PActivitiesInChannel::_internal_action() const {
  return action_.GetNoArena();
}
inline void PChannel_PActivitiesInChannel::_internal_set_action(const std::string& value) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PActivitiesInChannel::set_action(std::string&& value) {
  
  action_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PActivitiesInChannel.action)
}
inline void PChannel_PActivitiesInChannel::set_action(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PActivitiesInChannel.action)
}
inline void PChannel_PActivitiesInChannel::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PActivitiesInChannel.action)
}
inline std::string* PChannel_PActivitiesInChannel::_internal_mutable_action() {
  
  return action_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PActivitiesInChannel::release_action() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PActivitiesInChannel.action)
  
  return action_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PActivitiesInChannel::set_allocated_action(std::string* action) {
  if (action != nullptr) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PActivitiesInChannel.action)
}

// string content = 5;
inline void PChannel_PActivitiesInChannel::clear_content() {
  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PActivitiesInChannel::content() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.content)
  return _internal_content();
}
inline void PChannel_PActivitiesInChannel::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.content)
}
inline std::string* PChannel_PActivitiesInChannel::mutable_content() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PActivitiesInChannel.content)
  return _internal_mutable_content();
}
inline const std::string& PChannel_PActivitiesInChannel::_internal_content() const {
  return content_.GetNoArena();
}
inline void PChannel_PActivitiesInChannel::_internal_set_content(const std::string& value) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PActivitiesInChannel::set_content(std::string&& value) {
  
  content_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PActivitiesInChannel.content)
}
inline void PChannel_PActivitiesInChannel::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PActivitiesInChannel.content)
}
inline void PChannel_PActivitiesInChannel::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PActivitiesInChannel.content)
}
inline std::string* PChannel_PActivitiesInChannel::_internal_mutable_content() {
  
  return content_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PActivitiesInChannel::release_content() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PActivitiesInChannel.content)
  
  return content_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PActivitiesInChannel::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PActivitiesInChannel.content)
}

// uint32 channel_id = 6;
inline void PChannel_PActivitiesInChannel::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.channel_id)
  return _internal_channel_id();
}
inline void PChannel_PActivitiesInChannel::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PChannel_PActivitiesInChannel::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.channel_id)
}

// uint32 user_id = 7;
inline void PChannel_PActivitiesInChannel::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PActivitiesInChannel::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.user_id)
  return _internal_user_id();
}
inline void PChannel_PActivitiesInChannel::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PChannel_PActivitiesInChannel::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PActivitiesInChannel.user_id)
}

// .kandan_small.PChannel.PActivitiesInChannel.PUserInActivity user = 8;
inline bool PChannel_PActivitiesInChannel::_internal_has_user() const {
  return this != internal_default_instance() && user_ != nullptr;
}
inline bool PChannel_PActivitiesInChannel::has_user() const {
  return _internal_has_user();
}
inline void PChannel_PActivitiesInChannel::clear_user() {
  if (GetArenaNoVirtual() == nullptr && user_ != nullptr) {
    delete user_;
  }
  user_ = nullptr;
}
inline const ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity& PChannel_PActivitiesInChannel::_internal_user() const {
  const ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity* p = user_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity*>(
      &::kandan_small::_PChannel_PActivitiesInChannel_PUserInActivity_default_instance_);
}
inline const ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity& PChannel_PActivitiesInChannel::user() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PActivitiesInChannel.user)
  return _internal_user();
}
inline ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity* PChannel_PActivitiesInChannel::release_user() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PActivitiesInChannel.user)
  
  ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity* temp = user_;
  user_ = nullptr;
  return temp;
}
inline ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity* PChannel_PActivitiesInChannel::_internal_mutable_user() {
  
  if (user_ == nullptr) {
    auto* p = CreateMaybeMessage<::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity>(GetArenaNoVirtual());
    user_ = p;
  }
  return user_;
}
inline ::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity* PChannel_PActivitiesInChannel::mutable_user() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PActivitiesInChannel.user)
  return _internal_mutable_user();
}
inline void PChannel_PActivitiesInChannel::set_allocated_user(::kandan_small::PChannel_PActivitiesInChannel_PUserInActivity* user) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete user_;
  }
  if (user) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      user = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user, submessage_arena);
    }
    
  } else {
    
  }
  user_ = user;
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PActivitiesInChannel.user)
}

// -------------------------------------------------------------------

// PChannel_PUserInChannel_PActivitiesInUser

// uint32 id = 1;
inline void PChannel_PUserInChannel_PActivitiesInUser::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PActivitiesInUser::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PActivitiesInUser::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.id)
  return _internal_id();
}
inline void PChannel_PUserInChannel_PActivitiesInUser::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PChannel_PUserInChannel_PActivitiesInUser::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.id)
}

// uint32 created_at = 2;
inline void PChannel_PUserInChannel_PActivitiesInUser::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PActivitiesInUser::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PActivitiesInUser::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.created_at)
  return _internal_created_at();
}
inline void PChannel_PUserInChannel_PActivitiesInUser::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PChannel_PUserInChannel_PActivitiesInUser::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.created_at)
}

// uint32 updated_at = 3;
inline void PChannel_PUserInChannel_PActivitiesInUser::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PActivitiesInUser::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PActivitiesInUser::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.updated_at)
  return _internal_updated_at();
}
inline void PChannel_PUserInChannel_PActivitiesInUser::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PChannel_PUserInChannel_PActivitiesInUser::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.updated_at)
}

// string action = 4;
inline void PChannel_PUserInChannel_PActivitiesInUser::clear_action() {
  action_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PUserInChannel_PActivitiesInUser::action() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.action)
  return _internal_action();
}
inline void PChannel_PUserInChannel_PActivitiesInUser::set_action(const std::string& value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.action)
}
inline std::string* PChannel_PUserInChannel_PActivitiesInUser::mutable_action() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.action)
  return _internal_mutable_action();
}
inline const std::string& PChannel_PUserInChannel_PActivitiesInUser::_internal_action() const {
  return action_.GetNoArena();
}
inline void PChannel_PUserInChannel_PActivitiesInUser::_internal_set_action(const std::string& value) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PUserInChannel_PActivitiesInUser::set_action(std::string&& value) {
  
  action_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.action)
}
inline void PChannel_PUserInChannel_PActivitiesInUser::set_action(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.action)
}
inline void PChannel_PUserInChannel_PActivitiesInUser::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.action)
}
inline std::string* PChannel_PUserInChannel_PActivitiesInUser::_internal_mutable_action() {
  
  return action_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PUserInChannel_PActivitiesInUser::release_action() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.action)
  
  return action_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PUserInChannel_PActivitiesInUser::set_allocated_action(std::string* action) {
  if (action != nullptr) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.action)
}

// string content = 5;
inline void PChannel_PUserInChannel_PActivitiesInUser::clear_content() {
  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PUserInChannel_PActivitiesInUser::content() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.content)
  return _internal_content();
}
inline void PChannel_PUserInChannel_PActivitiesInUser::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.content)
}
inline std::string* PChannel_PUserInChannel_PActivitiesInUser::mutable_content() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.content)
  return _internal_mutable_content();
}
inline const std::string& PChannel_PUserInChannel_PActivitiesInUser::_internal_content() const {
  return content_.GetNoArena();
}
inline void PChannel_PUserInChannel_PActivitiesInUser::_internal_set_content(const std::string& value) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PUserInChannel_PActivitiesInUser::set_content(std::string&& value) {
  
  content_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.content)
}
inline void PChannel_PUserInChannel_PActivitiesInUser::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.content)
}
inline void PChannel_PUserInChannel_PActivitiesInUser::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.content)
}
inline std::string* PChannel_PUserInChannel_PActivitiesInUser::_internal_mutable_content() {
  
  return content_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PUserInChannel_PActivitiesInUser::release_content() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.content)
  
  return content_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PUserInChannel_PActivitiesInUser::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.content)
}

// uint32 channel_id = 6;
inline void PChannel_PUserInChannel_PActivitiesInUser::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PActivitiesInUser::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PActivitiesInUser::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.channel_id)
  return _internal_channel_id();
}
inline void PChannel_PUserInChannel_PActivitiesInUser::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PChannel_PUserInChannel_PActivitiesInUser::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.channel_id)
}

// uint32 user_id = 7;
inline void PChannel_PUserInChannel_PActivitiesInUser::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PActivitiesInUser::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PActivitiesInUser::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.user_id)
  return _internal_user_id();
}
inline void PChannel_PUserInChannel_PActivitiesInUser::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PChannel_PUserInChannel_PActivitiesInUser::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.PActivitiesInUser.user_id)
}

// -------------------------------------------------------------------

// PChannel_PUserInChannel_PAttachmentsInUser

// uint32 id = 1;
inline void PChannel_PUserInChannel_PAttachmentsInUser::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PAttachmentsInUser::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PAttachmentsInUser::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.id)
  return _internal_id();
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.id)
}

// string file_file_name = 2;
inline void PChannel_PUserInChannel_PAttachmentsInUser::clear_file_file_name() {
  file_file_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PUserInChannel_PAttachmentsInUser::file_file_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.file_file_name)
  return _internal_file_file_name();
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::set_file_file_name(const std::string& value) {
  _internal_set_file_file_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.file_file_name)
}
inline std::string* PChannel_PUserInChannel_PAttachmentsInUser::mutable_file_file_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.file_file_name)
  return _internal_mutable_file_file_name();
}
inline const std::string& PChannel_PUserInChannel_PAttachmentsInUser::_internal_file_file_name() const {
  return file_file_name_.GetNoArena();
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::_internal_set_file_file_name(const std::string& value) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::set_file_file_name(std::string&& value) {
  
  file_file_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.file_file_name)
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::set_file_file_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.file_file_name)
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::set_file_file_name(const char* value, size_t size) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.file_file_name)
}
inline std::string* PChannel_PUserInChannel_PAttachmentsInUser::_internal_mutable_file_file_name() {
  
  return file_file_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PUserInChannel_PAttachmentsInUser::release_file_file_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.file_file_name)
  
  return file_file_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::set_allocated_file_file_name(std::string* file_file_name) {
  if (file_file_name != nullptr) {
    
  } else {
    
  }
  file_file_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_file_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.file_file_name)
}

// string file_content_type = 3;
inline void PChannel_PUserInChannel_PAttachmentsInUser::clear_file_content_type() {
  file_content_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PUserInChannel_PAttachmentsInUser::file_content_type() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.file_content_type)
  return _internal_file_content_type();
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::set_file_content_type(const std::string& value) {
  _internal_set_file_content_type(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.file_content_type)
}
inline std::string* PChannel_PUserInChannel_PAttachmentsInUser::mutable_file_content_type() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.file_content_type)
  return _internal_mutable_file_content_type();
}
inline const std::string& PChannel_PUserInChannel_PAttachmentsInUser::_internal_file_content_type() const {
  return file_content_type_.GetNoArena();
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::_internal_set_file_content_type(const std::string& value) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::set_file_content_type(std::string&& value) {
  
  file_content_type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.file_content_type)
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::set_file_content_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.file_content_type)
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::set_file_content_type(const char* value, size_t size) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.file_content_type)
}
inline std::string* PChannel_PUserInChannel_PAttachmentsInUser::_internal_mutable_file_content_type() {
  
  return file_content_type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PUserInChannel_PAttachmentsInUser::release_file_content_type() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.file_content_type)
  
  return file_content_type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::set_allocated_file_content_type(std::string* file_content_type) {
  if (file_content_type != nullptr) {
    
  } else {
    
  }
  file_content_type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_content_type);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.file_content_type)
}

// uint32 file_file_size = 4;
inline void PChannel_PUserInChannel_PAttachmentsInUser::clear_file_file_size() {
  file_file_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PAttachmentsInUser::_internal_file_file_size() const {
  return file_file_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PAttachmentsInUser::file_file_size() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.file_file_size)
  return _internal_file_file_size();
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::_internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_file_size_ = value;
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_file_size(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.file_file_size)
}

// uint32 message_id = 5;
inline void PChannel_PUserInChannel_PAttachmentsInUser::clear_message_id() {
  message_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PAttachmentsInUser::_internal_message_id() const {
  return message_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PAttachmentsInUser::message_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.message_id)
  return _internal_message_id();
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::_internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  message_id_ = value;
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.message_id)
}

// uint32 file_updated_at = 6;
inline void PChannel_PUserInChannel_PAttachmentsInUser::clear_file_updated_at() {
  file_updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PAttachmentsInUser::_internal_file_updated_at() const {
  return file_updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PAttachmentsInUser::file_updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.file_updated_at)
  return _internal_file_updated_at();
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::_internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_updated_at_ = value;
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.file_updated_at)
}

// uint32 created_at = 7;
inline void PChannel_PUserInChannel_PAttachmentsInUser::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PAttachmentsInUser::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PAttachmentsInUser::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.created_at)
  return _internal_created_at();
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.created_at)
}

// uint32 updated_at = 8;
inline void PChannel_PUserInChannel_PAttachmentsInUser::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PAttachmentsInUser::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PAttachmentsInUser::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.updated_at)
  return _internal_updated_at();
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.updated_at)
}

// uint32 user_id = 9;
inline void PChannel_PUserInChannel_PAttachmentsInUser::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PAttachmentsInUser::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PAttachmentsInUser::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.user_id)
  return _internal_user_id();
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.user_id)
}

// uint32 channel_id = 10;
inline void PChannel_PUserInChannel_PAttachmentsInUser::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PAttachmentsInUser::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel_PAttachmentsInUser::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.channel_id)
  return _internal_channel_id();
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PChannel_PUserInChannel_PAttachmentsInUser::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.PAttachmentsInUser.channel_id)
}

// -------------------------------------------------------------------

// PChannel_PUserInChannel

// uint32 id = 1;
inline void PChannel_PUserInChannel::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.id)
  return _internal_id();
}
inline void PChannel_PUserInChannel::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PChannel_PUserInChannel::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.id)
}

// string email = 2;
inline void PChannel_PUserInChannel::clear_email() {
  email_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PUserInChannel::email() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.email)
  return _internal_email();
}
inline void PChannel_PUserInChannel::set_email(const std::string& value) {
  _internal_set_email(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.email)
}
inline std::string* PChannel_PUserInChannel::mutable_email() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PUserInChannel.email)
  return _internal_mutable_email();
}
inline const std::string& PChannel_PUserInChannel::_internal_email() const {
  return email_.GetNoArena();
}
inline void PChannel_PUserInChannel::_internal_set_email(const std::string& value) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PUserInChannel::set_email(std::string&& value) {
  
  email_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PUserInChannel.email)
}
inline void PChannel_PUserInChannel::set_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PUserInChannel.email)
}
inline void PChannel_PUserInChannel::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PUserInChannel.email)
}
inline std::string* PChannel_PUserInChannel::_internal_mutable_email() {
  
  return email_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PUserInChannel::release_email() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PUserInChannel.email)
  
  return email_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PUserInChannel::set_allocated_email(std::string* email) {
  if (email != nullptr) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PUserInChannel.email)
}

// string encrypted_password = 3;
inline void PChannel_PUserInChannel::clear_encrypted_password() {
  encrypted_password_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PUserInChannel::encrypted_password() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.encrypted_password)
  return _internal_encrypted_password();
}
inline void PChannel_PUserInChannel::set_encrypted_password(const std::string& value) {
  _internal_set_encrypted_password(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.encrypted_password)
}
inline std::string* PChannel_PUserInChannel::mutable_encrypted_password() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PUserInChannel.encrypted_password)
  return _internal_mutable_encrypted_password();
}
inline const std::string& PChannel_PUserInChannel::_internal_encrypted_password() const {
  return encrypted_password_.GetNoArena();
}
inline void PChannel_PUserInChannel::_internal_set_encrypted_password(const std::string& value) {
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PUserInChannel::set_encrypted_password(std::string&& value) {
  
  encrypted_password_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PUserInChannel.encrypted_password)
}
inline void PChannel_PUserInChannel::set_encrypted_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PUserInChannel.encrypted_password)
}
inline void PChannel_PUserInChannel::set_encrypted_password(const char* value, size_t size) {
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PUserInChannel.encrypted_password)
}
inline std::string* PChannel_PUserInChannel::_internal_mutable_encrypted_password() {
  
  return encrypted_password_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PUserInChannel::release_encrypted_password() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PUserInChannel.encrypted_password)
  
  return encrypted_password_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PUserInChannel::set_allocated_encrypted_password(std::string* encrypted_password) {
  if (encrypted_password != nullptr) {
    
  } else {
    
  }
  encrypted_password_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), encrypted_password);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PUserInChannel.encrypted_password)
}

// string reset_password_token = 4;
inline void PChannel_PUserInChannel::clear_reset_password_token() {
  reset_password_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PUserInChannel::reset_password_token() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.reset_password_token)
  return _internal_reset_password_token();
}
inline void PChannel_PUserInChannel::set_reset_password_token(const std::string& value) {
  _internal_set_reset_password_token(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.reset_password_token)
}
inline std::string* PChannel_PUserInChannel::mutable_reset_password_token() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PUserInChannel.reset_password_token)
  return _internal_mutable_reset_password_token();
}
inline const std::string& PChannel_PUserInChannel::_internal_reset_password_token() const {
  return reset_password_token_.GetNoArena();
}
inline void PChannel_PUserInChannel::_internal_set_reset_password_token(const std::string& value) {
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PUserInChannel::set_reset_password_token(std::string&& value) {
  
  reset_password_token_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PUserInChannel.reset_password_token)
}
inline void PChannel_PUserInChannel::set_reset_password_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PUserInChannel.reset_password_token)
}
inline void PChannel_PUserInChannel::set_reset_password_token(const char* value, size_t size) {
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PUserInChannel.reset_password_token)
}
inline std::string* PChannel_PUserInChannel::_internal_mutable_reset_password_token() {
  
  return reset_password_token_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PUserInChannel::release_reset_password_token() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PUserInChannel.reset_password_token)
  
  return reset_password_token_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PUserInChannel::set_allocated_reset_password_token(std::string* reset_password_token) {
  if (reset_password_token != nullptr) {
    
  } else {
    
  }
  reset_password_token_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reset_password_token);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PUserInChannel.reset_password_token)
}

// uint32 reset_password_sent_at = 5;
inline void PChannel_PUserInChannel::clear_reset_password_sent_at() {
  reset_password_sent_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel::_internal_reset_password_sent_at() const {
  return reset_password_sent_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel::reset_password_sent_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.reset_password_sent_at)
  return _internal_reset_password_sent_at();
}
inline void PChannel_PUserInChannel::_internal_set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  reset_password_sent_at_ = value;
}
inline void PChannel_PUserInChannel::set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reset_password_sent_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.reset_password_sent_at)
}

// uint32 remember_created_at = 6;
inline void PChannel_PUserInChannel::clear_remember_created_at() {
  remember_created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel::_internal_remember_created_at() const {
  return remember_created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel::remember_created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.remember_created_at)
  return _internal_remember_created_at();
}
inline void PChannel_PUserInChannel::_internal_set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  remember_created_at_ = value;
}
inline void PChannel_PUserInChannel::set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_remember_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.remember_created_at)
}

// string first_name = 7;
inline void PChannel_PUserInChannel::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PUserInChannel::first_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.first_name)
  return _internal_first_name();
}
inline void PChannel_PUserInChannel::set_first_name(const std::string& value) {
  _internal_set_first_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.first_name)
}
inline std::string* PChannel_PUserInChannel::mutable_first_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PUserInChannel.first_name)
  return _internal_mutable_first_name();
}
inline const std::string& PChannel_PUserInChannel::_internal_first_name() const {
  return first_name_.GetNoArena();
}
inline void PChannel_PUserInChannel::_internal_set_first_name(const std::string& value) {
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PUserInChannel::set_first_name(std::string&& value) {
  
  first_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PUserInChannel.first_name)
}
inline void PChannel_PUserInChannel::set_first_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PUserInChannel.first_name)
}
inline void PChannel_PUserInChannel::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PUserInChannel.first_name)
}
inline std::string* PChannel_PUserInChannel::_internal_mutable_first_name() {
  
  return first_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PUserInChannel::release_first_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PUserInChannel.first_name)
  
  return first_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PUserInChannel::set_allocated_first_name(std::string* first_name) {
  if (first_name != nullptr) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PUserInChannel.first_name)
}

// string last_name = 8;
inline void PChannel_PUserInChannel::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PUserInChannel::last_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.last_name)
  return _internal_last_name();
}
inline void PChannel_PUserInChannel::set_last_name(const std::string& value) {
  _internal_set_last_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.last_name)
}
inline std::string* PChannel_PUserInChannel::mutable_last_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PUserInChannel.last_name)
  return _internal_mutable_last_name();
}
inline const std::string& PChannel_PUserInChannel::_internal_last_name() const {
  return last_name_.GetNoArena();
}
inline void PChannel_PUserInChannel::_internal_set_last_name(const std::string& value) {
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PUserInChannel::set_last_name(std::string&& value) {
  
  last_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PUserInChannel.last_name)
}
inline void PChannel_PUserInChannel::set_last_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PUserInChannel.last_name)
}
inline void PChannel_PUserInChannel::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PUserInChannel.last_name)
}
inline std::string* PChannel_PUserInChannel::_internal_mutable_last_name() {
  
  return last_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PUserInChannel::release_last_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PUserInChannel.last_name)
  
  return last_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PUserInChannel::set_allocated_last_name(std::string* last_name) {
  if (last_name != nullptr) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PUserInChannel.last_name)
}

// uint32 signin_count = 9;
inline void PChannel_PUserInChannel::clear_signin_count() {
  signin_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel::_internal_signin_count() const {
  return signin_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel::signin_count() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.signin_count)
  return _internal_signin_count();
}
inline void PChannel_PUserInChannel::_internal_set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  signin_count_ = value;
}
inline void PChannel_PUserInChannel::set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_signin_count(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.signin_count)
}

// uint32 current_sign_in_at = 10;
inline void PChannel_PUserInChannel::clear_current_sign_in_at() {
  current_sign_in_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel::_internal_current_sign_in_at() const {
  return current_sign_in_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel::current_sign_in_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.current_sign_in_at)
  return _internal_current_sign_in_at();
}
inline void PChannel_PUserInChannel::_internal_set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  current_sign_in_at_ = value;
}
inline void PChannel_PUserInChannel::set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_current_sign_in_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.current_sign_in_at)
}

// string current_sign_in_ip = 11;
inline void PChannel_PUserInChannel::clear_current_sign_in_ip() {
  current_sign_in_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PUserInChannel::current_sign_in_ip() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.current_sign_in_ip)
  return _internal_current_sign_in_ip();
}
inline void PChannel_PUserInChannel::set_current_sign_in_ip(const std::string& value) {
  _internal_set_current_sign_in_ip(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.current_sign_in_ip)
}
inline std::string* PChannel_PUserInChannel::mutable_current_sign_in_ip() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PUserInChannel.current_sign_in_ip)
  return _internal_mutable_current_sign_in_ip();
}
inline const std::string& PChannel_PUserInChannel::_internal_current_sign_in_ip() const {
  return current_sign_in_ip_.GetNoArena();
}
inline void PChannel_PUserInChannel::_internal_set_current_sign_in_ip(const std::string& value) {
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PUserInChannel::set_current_sign_in_ip(std::string&& value) {
  
  current_sign_in_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PUserInChannel.current_sign_in_ip)
}
inline void PChannel_PUserInChannel::set_current_sign_in_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PUserInChannel.current_sign_in_ip)
}
inline void PChannel_PUserInChannel::set_current_sign_in_ip(const char* value, size_t size) {
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PUserInChannel.current_sign_in_ip)
}
inline std::string* PChannel_PUserInChannel::_internal_mutable_current_sign_in_ip() {
  
  return current_sign_in_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PUserInChannel::release_current_sign_in_ip() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PUserInChannel.current_sign_in_ip)
  
  return current_sign_in_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PUserInChannel::set_allocated_current_sign_in_ip(std::string* current_sign_in_ip) {
  if (current_sign_in_ip != nullptr) {
    
  } else {
    
  }
  current_sign_in_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), current_sign_in_ip);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PUserInChannel.current_sign_in_ip)
}

// uint32 last_sign_in_at = 12;
inline void PChannel_PUserInChannel::clear_last_sign_in_at() {
  last_sign_in_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel::_internal_last_sign_in_at() const {
  return last_sign_in_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel::last_sign_in_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.last_sign_in_at)
  return _internal_last_sign_in_at();
}
inline void PChannel_PUserInChannel::_internal_set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  last_sign_in_at_ = value;
}
inline void PChannel_PUserInChannel::set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_sign_in_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.last_sign_in_at)
}

// string last_sign_in_ip = 13;
inline void PChannel_PUserInChannel::clear_last_sign_in_ip() {
  last_sign_in_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PUserInChannel::last_sign_in_ip() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.last_sign_in_ip)
  return _internal_last_sign_in_ip();
}
inline void PChannel_PUserInChannel::set_last_sign_in_ip(const std::string& value) {
  _internal_set_last_sign_in_ip(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.last_sign_in_ip)
}
inline std::string* PChannel_PUserInChannel::mutable_last_sign_in_ip() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PUserInChannel.last_sign_in_ip)
  return _internal_mutable_last_sign_in_ip();
}
inline const std::string& PChannel_PUserInChannel::_internal_last_sign_in_ip() const {
  return last_sign_in_ip_.GetNoArena();
}
inline void PChannel_PUserInChannel::_internal_set_last_sign_in_ip(const std::string& value) {
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PUserInChannel::set_last_sign_in_ip(std::string&& value) {
  
  last_sign_in_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PUserInChannel.last_sign_in_ip)
}
inline void PChannel_PUserInChannel::set_last_sign_in_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PUserInChannel.last_sign_in_ip)
}
inline void PChannel_PUserInChannel::set_last_sign_in_ip(const char* value, size_t size) {
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PUserInChannel.last_sign_in_ip)
}
inline std::string* PChannel_PUserInChannel::_internal_mutable_last_sign_in_ip() {
  
  return last_sign_in_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PUserInChannel::release_last_sign_in_ip() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PUserInChannel.last_sign_in_ip)
  
  return last_sign_in_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PUserInChannel::set_allocated_last_sign_in_ip(std::string* last_sign_in_ip) {
  if (last_sign_in_ip != nullptr) {
    
  } else {
    
  }
  last_sign_in_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_sign_in_ip);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PUserInChannel.last_sign_in_ip)
}

// string auth_token = 14;
inline void PChannel_PUserInChannel::clear_auth_token() {
  auth_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PUserInChannel::auth_token() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.auth_token)
  return _internal_auth_token();
}
inline void PChannel_PUserInChannel::set_auth_token(const std::string& value) {
  _internal_set_auth_token(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.auth_token)
}
inline std::string* PChannel_PUserInChannel::mutable_auth_token() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PUserInChannel.auth_token)
  return _internal_mutable_auth_token();
}
inline const std::string& PChannel_PUserInChannel::_internal_auth_token() const {
  return auth_token_.GetNoArena();
}
inline void PChannel_PUserInChannel::_internal_set_auth_token(const std::string& value) {
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PUserInChannel::set_auth_token(std::string&& value) {
  
  auth_token_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PUserInChannel.auth_token)
}
inline void PChannel_PUserInChannel::set_auth_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PUserInChannel.auth_token)
}
inline void PChannel_PUserInChannel::set_auth_token(const char* value, size_t size) {
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PUserInChannel.auth_token)
}
inline std::string* PChannel_PUserInChannel::_internal_mutable_auth_token() {
  
  return auth_token_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PUserInChannel::release_auth_token() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PUserInChannel.auth_token)
  
  return auth_token_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PUserInChannel::set_allocated_auth_token(std::string* auth_token) {
  if (auth_token != nullptr) {
    
  } else {
    
  }
  auth_token_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), auth_token);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PUserInChannel.auth_token)
}

// string locale = 15;
inline void PChannel_PUserInChannel::clear_locale() {
  locale_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PUserInChannel::locale() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.locale)
  return _internal_locale();
}
inline void PChannel_PUserInChannel::set_locale(const std::string& value) {
  _internal_set_locale(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.locale)
}
inline std::string* PChannel_PUserInChannel::mutable_locale() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PUserInChannel.locale)
  return _internal_mutable_locale();
}
inline const std::string& PChannel_PUserInChannel::_internal_locale() const {
  return locale_.GetNoArena();
}
inline void PChannel_PUserInChannel::_internal_set_locale(const std::string& value) {
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PUserInChannel::set_locale(std::string&& value) {
  
  locale_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PUserInChannel.locale)
}
inline void PChannel_PUserInChannel::set_locale(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PUserInChannel.locale)
}
inline void PChannel_PUserInChannel::set_locale(const char* value, size_t size) {
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PUserInChannel.locale)
}
inline std::string* PChannel_PUserInChannel::_internal_mutable_locale() {
  
  return locale_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PUserInChannel::release_locale() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PUserInChannel.locale)
  
  return locale_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PUserInChannel::set_allocated_locale(std::string* locale) {
  if (locale != nullptr) {
    
  } else {
    
  }
  locale_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), locale);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PUserInChannel.locale)
}

// string gravatar_hash = 16;
inline void PChannel_PUserInChannel::clear_gravatar_hash() {
  gravatar_hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PUserInChannel::gravatar_hash() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.gravatar_hash)
  return _internal_gravatar_hash();
}
inline void PChannel_PUserInChannel::set_gravatar_hash(const std::string& value) {
  _internal_set_gravatar_hash(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.gravatar_hash)
}
inline std::string* PChannel_PUserInChannel::mutable_gravatar_hash() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PUserInChannel.gravatar_hash)
  return _internal_mutable_gravatar_hash();
}
inline const std::string& PChannel_PUserInChannel::_internal_gravatar_hash() const {
  return gravatar_hash_.GetNoArena();
}
inline void PChannel_PUserInChannel::_internal_set_gravatar_hash(const std::string& value) {
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PUserInChannel::set_gravatar_hash(std::string&& value) {
  
  gravatar_hash_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PUserInChannel.gravatar_hash)
}
inline void PChannel_PUserInChannel::set_gravatar_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PUserInChannel.gravatar_hash)
}
inline void PChannel_PUserInChannel::set_gravatar_hash(const char* value, size_t size) {
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PUserInChannel.gravatar_hash)
}
inline std::string* PChannel_PUserInChannel::_internal_mutable_gravatar_hash() {
  
  return gravatar_hash_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PUserInChannel::release_gravatar_hash() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PUserInChannel.gravatar_hash)
  
  return gravatar_hash_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PUserInChannel::set_allocated_gravatar_hash(std::string* gravatar_hash) {
  if (gravatar_hash != nullptr) {
    
  } else {
    
  }
  gravatar_hash_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gravatar_hash);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PUserInChannel.gravatar_hash)
}

// string username = 17;
inline void PChannel_PUserInChannel::clear_username() {
  username_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PUserInChannel::username() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.username)
  return _internal_username();
}
inline void PChannel_PUserInChannel::set_username(const std::string& value) {
  _internal_set_username(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.username)
}
inline std::string* PChannel_PUserInChannel::mutable_username() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PUserInChannel.username)
  return _internal_mutable_username();
}
inline const std::string& PChannel_PUserInChannel::_internal_username() const {
  return username_.GetNoArena();
}
inline void PChannel_PUserInChannel::_internal_set_username(const std::string& value) {
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PUserInChannel::set_username(std::string&& value) {
  
  username_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PUserInChannel.username)
}
inline void PChannel_PUserInChannel::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PUserInChannel.username)
}
inline void PChannel_PUserInChannel::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PUserInChannel.username)
}
inline std::string* PChannel_PUserInChannel::_internal_mutable_username() {
  
  return username_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PUserInChannel::release_username() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PUserInChannel.username)
  
  return username_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PUserInChannel::set_allocated_username(std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PUserInChannel.username)
}

// string regstatus = 18;
inline void PChannel_PUserInChannel::clear_regstatus() {
  regstatus_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PUserInChannel::regstatus() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.regstatus)
  return _internal_regstatus();
}
inline void PChannel_PUserInChannel::set_regstatus(const std::string& value) {
  _internal_set_regstatus(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.regstatus)
}
inline std::string* PChannel_PUserInChannel::mutable_regstatus() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PUserInChannel.regstatus)
  return _internal_mutable_regstatus();
}
inline const std::string& PChannel_PUserInChannel::_internal_regstatus() const {
  return regstatus_.GetNoArena();
}
inline void PChannel_PUserInChannel::_internal_set_regstatus(const std::string& value) {
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PUserInChannel::set_regstatus(std::string&& value) {
  
  regstatus_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PUserInChannel.regstatus)
}
inline void PChannel_PUserInChannel::set_regstatus(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PUserInChannel.regstatus)
}
inline void PChannel_PUserInChannel::set_regstatus(const char* value, size_t size) {
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PUserInChannel.regstatus)
}
inline std::string* PChannel_PUserInChannel::_internal_mutable_regstatus() {
  
  return regstatus_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PUserInChannel::release_regstatus() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PUserInChannel.regstatus)
  
  return regstatus_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PUserInChannel::set_allocated_regstatus(std::string* regstatus) {
  if (regstatus != nullptr) {
    
  } else {
    
  }
  regstatus_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), regstatus);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PUserInChannel.regstatus)
}

// bool active = 19;
inline void PChannel_PUserInChannel::clear_active() {
  active_ = false;
}
inline bool PChannel_PUserInChannel::_internal_active() const {
  return active_;
}
inline bool PChannel_PUserInChannel::active() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.active)
  return _internal_active();
}
inline void PChannel_PUserInChannel::_internal_set_active(bool value) {
  
  active_ = value;
}
inline void PChannel_PUserInChannel::set_active(bool value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.active)
}

// bool is_admin = 20;
inline void PChannel_PUserInChannel::clear_is_admin() {
  is_admin_ = false;
}
inline bool PChannel_PUserInChannel::_internal_is_admin() const {
  return is_admin_;
}
inline bool PChannel_PUserInChannel::is_admin() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.is_admin)
  return _internal_is_admin();
}
inline void PChannel_PUserInChannel::_internal_set_is_admin(bool value) {
  
  is_admin_ = value;
}
inline void PChannel_PUserInChannel::set_is_admin(bool value) {
  _internal_set_is_admin(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.is_admin)
}

// string avatar_url = 21;
inline void PChannel_PUserInChannel::clear_avatar_url() {
  avatar_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PUserInChannel::avatar_url() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.avatar_url)
  return _internal_avatar_url();
}
inline void PChannel_PUserInChannel::set_avatar_url(const std::string& value) {
  _internal_set_avatar_url(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.avatar_url)
}
inline std::string* PChannel_PUserInChannel::mutable_avatar_url() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PUserInChannel.avatar_url)
  return _internal_mutable_avatar_url();
}
inline const std::string& PChannel_PUserInChannel::_internal_avatar_url() const {
  return avatar_url_.GetNoArena();
}
inline void PChannel_PUserInChannel::_internal_set_avatar_url(const std::string& value) {
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PUserInChannel::set_avatar_url(std::string&& value) {
  
  avatar_url_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PUserInChannel.avatar_url)
}
inline void PChannel_PUserInChannel::set_avatar_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PUserInChannel.avatar_url)
}
inline void PChannel_PUserInChannel::set_avatar_url(const char* value, size_t size) {
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PUserInChannel.avatar_url)
}
inline std::string* PChannel_PUserInChannel::_internal_mutable_avatar_url() {
  
  return avatar_url_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PUserInChannel::release_avatar_url() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PUserInChannel.avatar_url)
  
  return avatar_url_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PUserInChannel::set_allocated_avatar_url(std::string* avatar_url) {
  if (avatar_url != nullptr) {
    
  } else {
    
  }
  avatar_url_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar_url);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PUserInChannel.avatar_url)
}

// uint32 created_at = 22;
inline void PChannel_PUserInChannel::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.created_at)
  return _internal_created_at();
}
inline void PChannel_PUserInChannel::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PChannel_PUserInChannel::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.created_at)
}

// uint32 updated_at = 23;
inline void PChannel_PUserInChannel::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PUserInChannel::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.updated_at)
  return _internal_updated_at();
}
inline void PChannel_PUserInChannel::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PChannel_PUserInChannel::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PUserInChannel.updated_at)
}

// repeated .kandan_small.PChannel.PUserInChannel.PActivitiesInUser activities = 24;
inline int PChannel_PUserInChannel::_internal_activities_size() const {
  return activities_.size();
}
inline int PChannel_PUserInChannel::activities_size() const {
  return _internal_activities_size();
}
inline void PChannel_PUserInChannel::clear_activities() {
  activities_.Clear();
}
inline ::kandan_small::PChannel_PUserInChannel_PActivitiesInUser* PChannel_PUserInChannel::mutable_activities(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PUserInChannel.activities)
  return activities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PUserInChannel_PActivitiesInUser >*
PChannel_PUserInChannel::mutable_activities() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PChannel.PUserInChannel.activities)
  return &activities_;
}
inline const ::kandan_small::PChannel_PUserInChannel_PActivitiesInUser& PChannel_PUserInChannel::_internal_activities(int index) const {
  return activities_.Get(index);
}
inline const ::kandan_small::PChannel_PUserInChannel_PActivitiesInUser& PChannel_PUserInChannel::activities(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.activities)
  return _internal_activities(index);
}
inline ::kandan_small::PChannel_PUserInChannel_PActivitiesInUser* PChannel_PUserInChannel::_internal_add_activities() {
  return activities_.Add();
}
inline ::kandan_small::PChannel_PUserInChannel_PActivitiesInUser* PChannel_PUserInChannel::add_activities() {
  // @@protoc_insertion_point(field_add:kandan_small.PChannel.PUserInChannel.activities)
  return _internal_add_activities();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PUserInChannel_PActivitiesInUser >&
PChannel_PUserInChannel::activities() const {
  // @@protoc_insertion_point(field_list:kandan_small.PChannel.PUserInChannel.activities)
  return activities_;
}

// repeated .kandan_small.PChannel.PUserInChannel.PAttachmentsInUser attachments = 25;
inline int PChannel_PUserInChannel::_internal_attachments_size() const {
  return attachments_.size();
}
inline int PChannel_PUserInChannel::attachments_size() const {
  return _internal_attachments_size();
}
inline void PChannel_PUserInChannel::clear_attachments() {
  attachments_.Clear();
}
inline ::kandan_small::PChannel_PUserInChannel_PAttachmentsInUser* PChannel_PUserInChannel::mutable_attachments(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PUserInChannel.attachments)
  return attachments_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PUserInChannel_PAttachmentsInUser >*
PChannel_PUserInChannel::mutable_attachments() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PChannel.PUserInChannel.attachments)
  return &attachments_;
}
inline const ::kandan_small::PChannel_PUserInChannel_PAttachmentsInUser& PChannel_PUserInChannel::_internal_attachments(int index) const {
  return attachments_.Get(index);
}
inline const ::kandan_small::PChannel_PUserInChannel_PAttachmentsInUser& PChannel_PUserInChannel::attachments(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PUserInChannel.attachments)
  return _internal_attachments(index);
}
inline ::kandan_small::PChannel_PUserInChannel_PAttachmentsInUser* PChannel_PUserInChannel::_internal_add_attachments() {
  return attachments_.Add();
}
inline ::kandan_small::PChannel_PUserInChannel_PAttachmentsInUser* PChannel_PUserInChannel::add_attachments() {
  // @@protoc_insertion_point(field_add:kandan_small.PChannel.PUserInChannel.attachments)
  return _internal_add_attachments();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PUserInChannel_PAttachmentsInUser >&
PChannel_PUserInChannel::attachments() const {
  // @@protoc_insertion_point(field_list:kandan_small.PChannel.PUserInChannel.attachments)
  return attachments_;
}

// -------------------------------------------------------------------

// PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser

// uint32 id = 1;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.id)
  return _internal_id();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.id)
}

// uint32 created_at = 2;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.created_at)
  return _internal_created_at();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.created_at)
}

// uint32 updated_at = 3;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.updated_at)
  return _internal_updated_at();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.updated_at)
}

// string action = 4;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::clear_action() {
  action_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::action() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.action)
  return _internal_action();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::set_action(const std::string& value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.action)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::mutable_action() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.action)
  return _internal_mutable_action();
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::_internal_action() const {
  return action_.GetNoArena();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::_internal_set_action(const std::string& value) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::set_action(std::string&& value) {
  
  action_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.action)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::set_action(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.action)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.action)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::_internal_mutable_action() {
  
  return action_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::release_action() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.action)
  
  return action_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::set_allocated_action(std::string* action) {
  if (action != nullptr) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.action)
}

// string content = 5;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::clear_content() {
  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::content() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.content)
  return _internal_content();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.content)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::mutable_content() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.content)
  return _internal_mutable_content();
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::_internal_content() const {
  return content_.GetNoArena();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::_internal_set_content(const std::string& value) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::set_content(std::string&& value) {
  
  content_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.content)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.content)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.content)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::_internal_mutable_content() {
  
  return content_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::release_content() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.content)
  
  return content_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.content)
}

// uint32 channel_id = 6;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.channel_id)
  return _internal_channel_id();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.channel_id)
}

// uint32 user_id = 7;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.user_id)
  return _internal_user_id();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser.user_id)
}

// -------------------------------------------------------------------

// PChannel_PAttachmentsInChannel_PUserInAttachment

// uint32 id = 1;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.id)
  return _internal_id();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.id)
}

// string email = 2;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_email() {
  email_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::email() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.email)
  return _internal_email();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_email(const std::string& value) {
  _internal_set_email(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.email)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::mutable_email() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.email)
  return _internal_mutable_email();
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_email() const {
  return email_.GetNoArena();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_email(const std::string& value) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_email(std::string&& value) {
  
  email_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.email)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.email)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.email)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_email() {
  
  return email_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::release_email() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.email)
  
  return email_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_allocated_email(std::string* email) {
  if (email != nullptr) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.email)
}

// string encrypted_password = 3;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_encrypted_password() {
  encrypted_password_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::encrypted_password() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.encrypted_password)
  return _internal_encrypted_password();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_encrypted_password(const std::string& value) {
  _internal_set_encrypted_password(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.encrypted_password)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::mutable_encrypted_password() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.encrypted_password)
  return _internal_mutable_encrypted_password();
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_encrypted_password() const {
  return encrypted_password_.GetNoArena();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_encrypted_password(const std::string& value) {
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_encrypted_password(std::string&& value) {
  
  encrypted_password_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.encrypted_password)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_encrypted_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.encrypted_password)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_encrypted_password(const char* value, size_t size) {
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.encrypted_password)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_encrypted_password() {
  
  return encrypted_password_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::release_encrypted_password() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.encrypted_password)
  
  return encrypted_password_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_allocated_encrypted_password(std::string* encrypted_password) {
  if (encrypted_password != nullptr) {
    
  } else {
    
  }
  encrypted_password_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), encrypted_password);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.encrypted_password)
}

// string reset_password_token = 4;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_reset_password_token() {
  reset_password_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::reset_password_token() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.reset_password_token)
  return _internal_reset_password_token();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_reset_password_token(const std::string& value) {
  _internal_set_reset_password_token(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.reset_password_token)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::mutable_reset_password_token() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.reset_password_token)
  return _internal_mutable_reset_password_token();
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_reset_password_token() const {
  return reset_password_token_.GetNoArena();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_reset_password_token(const std::string& value) {
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_reset_password_token(std::string&& value) {
  
  reset_password_token_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.reset_password_token)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_reset_password_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.reset_password_token)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_reset_password_token(const char* value, size_t size) {
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.reset_password_token)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_reset_password_token() {
  
  return reset_password_token_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::release_reset_password_token() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.reset_password_token)
  
  return reset_password_token_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_allocated_reset_password_token(std::string* reset_password_token) {
  if (reset_password_token != nullptr) {
    
  } else {
    
  }
  reset_password_token_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reset_password_token);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.reset_password_token)
}

// uint32 reset_password_sent_at = 5;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_reset_password_sent_at() {
  reset_password_sent_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_reset_password_sent_at() const {
  return reset_password_sent_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment::reset_password_sent_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.reset_password_sent_at)
  return _internal_reset_password_sent_at();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  reset_password_sent_at_ = value;
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reset_password_sent_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.reset_password_sent_at)
}

// uint32 remember_created_at = 6;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_remember_created_at() {
  remember_created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_remember_created_at() const {
  return remember_created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment::remember_created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.remember_created_at)
  return _internal_remember_created_at();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  remember_created_at_ = value;
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_remember_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.remember_created_at)
}

// string first_name = 7;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::first_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.first_name)
  return _internal_first_name();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_first_name(const std::string& value) {
  _internal_set_first_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.first_name)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::mutable_first_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.first_name)
  return _internal_mutable_first_name();
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_first_name() const {
  return first_name_.GetNoArena();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_first_name(const std::string& value) {
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_first_name(std::string&& value) {
  
  first_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.first_name)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_first_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.first_name)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.first_name)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_first_name() {
  
  return first_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::release_first_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.first_name)
  
  return first_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_allocated_first_name(std::string* first_name) {
  if (first_name != nullptr) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.first_name)
}

// string last_name = 8;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::last_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.last_name)
  return _internal_last_name();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_last_name(const std::string& value) {
  _internal_set_last_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.last_name)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::mutable_last_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.last_name)
  return _internal_mutable_last_name();
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_last_name() const {
  return last_name_.GetNoArena();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_last_name(const std::string& value) {
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_last_name(std::string&& value) {
  
  last_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.last_name)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_last_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.last_name)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.last_name)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_last_name() {
  
  return last_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::release_last_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.last_name)
  
  return last_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_allocated_last_name(std::string* last_name) {
  if (last_name != nullptr) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.last_name)
}

// uint32 signin_count = 9;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_signin_count() {
  signin_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_signin_count() const {
  return signin_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment::signin_count() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.signin_count)
  return _internal_signin_count();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  signin_count_ = value;
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_signin_count(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.signin_count)
}

// uint32 current_sign_in_at = 10;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_current_sign_in_at() {
  current_sign_in_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_current_sign_in_at() const {
  return current_sign_in_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment::current_sign_in_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.current_sign_in_at)
  return _internal_current_sign_in_at();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  current_sign_in_at_ = value;
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_current_sign_in_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.current_sign_in_at)
}

// string current_sign_in_ip = 11;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_current_sign_in_ip() {
  current_sign_in_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::current_sign_in_ip() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.current_sign_in_ip)
  return _internal_current_sign_in_ip();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_current_sign_in_ip(const std::string& value) {
  _internal_set_current_sign_in_ip(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.current_sign_in_ip)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::mutable_current_sign_in_ip() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.current_sign_in_ip)
  return _internal_mutable_current_sign_in_ip();
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_current_sign_in_ip() const {
  return current_sign_in_ip_.GetNoArena();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_current_sign_in_ip(const std::string& value) {
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_current_sign_in_ip(std::string&& value) {
  
  current_sign_in_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.current_sign_in_ip)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_current_sign_in_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.current_sign_in_ip)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_current_sign_in_ip(const char* value, size_t size) {
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.current_sign_in_ip)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_current_sign_in_ip() {
  
  return current_sign_in_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::release_current_sign_in_ip() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.current_sign_in_ip)
  
  return current_sign_in_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_allocated_current_sign_in_ip(std::string* current_sign_in_ip) {
  if (current_sign_in_ip != nullptr) {
    
  } else {
    
  }
  current_sign_in_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), current_sign_in_ip);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.current_sign_in_ip)
}

// uint32 last_sign_in_at = 12;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_last_sign_in_at() {
  last_sign_in_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_last_sign_in_at() const {
  return last_sign_in_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment::last_sign_in_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.last_sign_in_at)
  return _internal_last_sign_in_at();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  last_sign_in_at_ = value;
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_sign_in_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.last_sign_in_at)
}

// string last_sign_in_ip = 13;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_last_sign_in_ip() {
  last_sign_in_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::last_sign_in_ip() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.last_sign_in_ip)
  return _internal_last_sign_in_ip();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_last_sign_in_ip(const std::string& value) {
  _internal_set_last_sign_in_ip(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.last_sign_in_ip)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::mutable_last_sign_in_ip() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.last_sign_in_ip)
  return _internal_mutable_last_sign_in_ip();
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_last_sign_in_ip() const {
  return last_sign_in_ip_.GetNoArena();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_last_sign_in_ip(const std::string& value) {
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_last_sign_in_ip(std::string&& value) {
  
  last_sign_in_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.last_sign_in_ip)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_last_sign_in_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.last_sign_in_ip)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_last_sign_in_ip(const char* value, size_t size) {
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.last_sign_in_ip)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_last_sign_in_ip() {
  
  return last_sign_in_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::release_last_sign_in_ip() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.last_sign_in_ip)
  
  return last_sign_in_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_allocated_last_sign_in_ip(std::string* last_sign_in_ip) {
  if (last_sign_in_ip != nullptr) {
    
  } else {
    
  }
  last_sign_in_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_sign_in_ip);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.last_sign_in_ip)
}

// string auth_token = 14;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_auth_token() {
  auth_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::auth_token() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.auth_token)
  return _internal_auth_token();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_auth_token(const std::string& value) {
  _internal_set_auth_token(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.auth_token)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::mutable_auth_token() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.auth_token)
  return _internal_mutable_auth_token();
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_auth_token() const {
  return auth_token_.GetNoArena();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_auth_token(const std::string& value) {
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_auth_token(std::string&& value) {
  
  auth_token_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.auth_token)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_auth_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.auth_token)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_auth_token(const char* value, size_t size) {
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.auth_token)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_auth_token() {
  
  return auth_token_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::release_auth_token() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.auth_token)
  
  return auth_token_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_allocated_auth_token(std::string* auth_token) {
  if (auth_token != nullptr) {
    
  } else {
    
  }
  auth_token_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), auth_token);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.auth_token)
}

// string locale = 15;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_locale() {
  locale_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::locale() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.locale)
  return _internal_locale();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_locale(const std::string& value) {
  _internal_set_locale(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.locale)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::mutable_locale() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.locale)
  return _internal_mutable_locale();
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_locale() const {
  return locale_.GetNoArena();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_locale(const std::string& value) {
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_locale(std::string&& value) {
  
  locale_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.locale)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_locale(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.locale)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_locale(const char* value, size_t size) {
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.locale)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_locale() {
  
  return locale_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::release_locale() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.locale)
  
  return locale_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_allocated_locale(std::string* locale) {
  if (locale != nullptr) {
    
  } else {
    
  }
  locale_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), locale);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.locale)
}

// string gravatar_hash = 16;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_gravatar_hash() {
  gravatar_hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::gravatar_hash() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.gravatar_hash)
  return _internal_gravatar_hash();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_gravatar_hash(const std::string& value) {
  _internal_set_gravatar_hash(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.gravatar_hash)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::mutable_gravatar_hash() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.gravatar_hash)
  return _internal_mutable_gravatar_hash();
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_gravatar_hash() const {
  return gravatar_hash_.GetNoArena();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_gravatar_hash(const std::string& value) {
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_gravatar_hash(std::string&& value) {
  
  gravatar_hash_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.gravatar_hash)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_gravatar_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.gravatar_hash)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_gravatar_hash(const char* value, size_t size) {
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.gravatar_hash)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_gravatar_hash() {
  
  return gravatar_hash_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::release_gravatar_hash() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.gravatar_hash)
  
  return gravatar_hash_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_allocated_gravatar_hash(std::string* gravatar_hash) {
  if (gravatar_hash != nullptr) {
    
  } else {
    
  }
  gravatar_hash_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gravatar_hash);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.gravatar_hash)
}

// string username = 17;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_username() {
  username_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::username() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.username)
  return _internal_username();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_username(const std::string& value) {
  _internal_set_username(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.username)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::mutable_username() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.username)
  return _internal_mutable_username();
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_username() const {
  return username_.GetNoArena();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_username(const std::string& value) {
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_username(std::string&& value) {
  
  username_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.username)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.username)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.username)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_username() {
  
  return username_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::release_username() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.username)
  
  return username_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_allocated_username(std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.username)
}

// string regstatus = 18;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_regstatus() {
  regstatus_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::regstatus() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.regstatus)
  return _internal_regstatus();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_regstatus(const std::string& value) {
  _internal_set_regstatus(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.regstatus)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::mutable_regstatus() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.regstatus)
  return _internal_mutable_regstatus();
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_regstatus() const {
  return regstatus_.GetNoArena();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_regstatus(const std::string& value) {
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_regstatus(std::string&& value) {
  
  regstatus_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.regstatus)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_regstatus(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.regstatus)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_regstatus(const char* value, size_t size) {
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.regstatus)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_regstatus() {
  
  return regstatus_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::release_regstatus() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.regstatus)
  
  return regstatus_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_allocated_regstatus(std::string* regstatus) {
  if (regstatus != nullptr) {
    
  } else {
    
  }
  regstatus_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), regstatus);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.regstatus)
}

// bool active = 19;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_active() {
  active_ = false;
}
inline bool PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_active() const {
  return active_;
}
inline bool PChannel_PAttachmentsInChannel_PUserInAttachment::active() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.active)
  return _internal_active();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_active(bool value) {
  
  active_ = value;
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_active(bool value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.active)
}

// bool is_admin = 20;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_is_admin() {
  is_admin_ = false;
}
inline bool PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_is_admin() const {
  return is_admin_;
}
inline bool PChannel_PAttachmentsInChannel_PUserInAttachment::is_admin() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.is_admin)
  return _internal_is_admin();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_is_admin(bool value) {
  
  is_admin_ = value;
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_is_admin(bool value) {
  _internal_set_is_admin(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.is_admin)
}

// string avatar_url = 21;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_avatar_url() {
  avatar_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::avatar_url() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.avatar_url)
  return _internal_avatar_url();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_avatar_url(const std::string& value) {
  _internal_set_avatar_url(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.avatar_url)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::mutable_avatar_url() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.avatar_url)
  return _internal_mutable_avatar_url();
}
inline const std::string& PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_avatar_url() const {
  return avatar_url_.GetNoArena();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_avatar_url(const std::string& value) {
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_avatar_url(std::string&& value) {
  
  avatar_url_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.avatar_url)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_avatar_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.avatar_url)
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_avatar_url(const char* value, size_t size) {
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.avatar_url)
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_avatar_url() {
  
  return avatar_url_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PAttachmentsInChannel_PUserInAttachment::release_avatar_url() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.avatar_url)
  
  return avatar_url_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_allocated_avatar_url(std::string* avatar_url) {
  if (avatar_url != nullptr) {
    
  } else {
    
  }
  avatar_url_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar_url);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.avatar_url)
}

// uint32 created_at = 22;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.created_at)
  return _internal_created_at();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.created_at)
}

// uint32 updated_at = 23;
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel_PUserInAttachment::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.updated_at)
  return _internal_updated_at();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.updated_at)
}

// repeated .kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.PActivitiesInUser activities = 24;
inline int PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_activities_size() const {
  return activities_.size();
}
inline int PChannel_PAttachmentsInChannel_PUserInAttachment::activities_size() const {
  return _internal_activities_size();
}
inline void PChannel_PAttachmentsInChannel_PUserInAttachment::clear_activities() {
  activities_.Clear();
}
inline ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser* PChannel_PAttachmentsInChannel_PUserInAttachment::mutable_activities(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.activities)
  return activities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser >*
PChannel_PAttachmentsInChannel_PUserInAttachment::mutable_activities() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.activities)
  return &activities_;
}
inline const ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser& PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_activities(int index) const {
  return activities_.Get(index);
}
inline const ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser& PChannel_PAttachmentsInChannel_PUserInAttachment::activities(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.activities)
  return _internal_activities(index);
}
inline ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser* PChannel_PAttachmentsInChannel_PUserInAttachment::_internal_add_activities() {
  return activities_.Add();
}
inline ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser* PChannel_PAttachmentsInChannel_PUserInAttachment::add_activities() {
  // @@protoc_insertion_point(field_add:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.activities)
  return _internal_add_activities();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment_PActivitiesInUser >&
PChannel_PAttachmentsInChannel_PUserInAttachment::activities() const {
  // @@protoc_insertion_point(field_list:kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment.activities)
  return activities_;
}

// -------------------------------------------------------------------

// PChannel_PAttachmentsInChannel

// uint32 id = 1;
inline void PChannel_PAttachmentsInChannel::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.id)
  return _internal_id();
}
inline void PChannel_PAttachmentsInChannel::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PChannel_PAttachmentsInChannel::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.id)
}

// string file_file_name = 2;
inline void PChannel_PAttachmentsInChannel::clear_file_file_name() {
  file_file_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PAttachmentsInChannel::file_file_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.file_file_name)
  return _internal_file_file_name();
}
inline void PChannel_PAttachmentsInChannel::set_file_file_name(const std::string& value) {
  _internal_set_file_file_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.file_file_name)
}
inline std::string* PChannel_PAttachmentsInChannel::mutable_file_file_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PAttachmentsInChannel.file_file_name)
  return _internal_mutable_file_file_name();
}
inline const std::string& PChannel_PAttachmentsInChannel::_internal_file_file_name() const {
  return file_file_name_.GetNoArena();
}
inline void PChannel_PAttachmentsInChannel::_internal_set_file_file_name(const std::string& value) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PAttachmentsInChannel::set_file_file_name(std::string&& value) {
  
  file_file_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PAttachmentsInChannel.file_file_name)
}
inline void PChannel_PAttachmentsInChannel::set_file_file_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PAttachmentsInChannel.file_file_name)
}
inline void PChannel_PAttachmentsInChannel::set_file_file_name(const char* value, size_t size) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PAttachmentsInChannel.file_file_name)
}
inline std::string* PChannel_PAttachmentsInChannel::_internal_mutable_file_file_name() {
  
  return file_file_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PAttachmentsInChannel::release_file_file_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PAttachmentsInChannel.file_file_name)
  
  return file_file_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PAttachmentsInChannel::set_allocated_file_file_name(std::string* file_file_name) {
  if (file_file_name != nullptr) {
    
  } else {
    
  }
  file_file_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_file_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PAttachmentsInChannel.file_file_name)
}

// string file_content_type = 3;
inline void PChannel_PAttachmentsInChannel::clear_file_content_type() {
  file_content_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel_PAttachmentsInChannel::file_content_type() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.file_content_type)
  return _internal_file_content_type();
}
inline void PChannel_PAttachmentsInChannel::set_file_content_type(const std::string& value) {
  _internal_set_file_content_type(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.file_content_type)
}
inline std::string* PChannel_PAttachmentsInChannel::mutable_file_content_type() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PAttachmentsInChannel.file_content_type)
  return _internal_mutable_file_content_type();
}
inline const std::string& PChannel_PAttachmentsInChannel::_internal_file_content_type() const {
  return file_content_type_.GetNoArena();
}
inline void PChannel_PAttachmentsInChannel::_internal_set_file_content_type(const std::string& value) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel_PAttachmentsInChannel::set_file_content_type(std::string&& value) {
  
  file_content_type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.PAttachmentsInChannel.file_content_type)
}
inline void PChannel_PAttachmentsInChannel::set_file_content_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.PAttachmentsInChannel.file_content_type)
}
inline void PChannel_PAttachmentsInChannel::set_file_content_type(const char* value, size_t size) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.PAttachmentsInChannel.file_content_type)
}
inline std::string* PChannel_PAttachmentsInChannel::_internal_mutable_file_content_type() {
  
  return file_content_type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel_PAttachmentsInChannel::release_file_content_type() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PAttachmentsInChannel.file_content_type)
  
  return file_content_type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel_PAttachmentsInChannel::set_allocated_file_content_type(std::string* file_content_type) {
  if (file_content_type != nullptr) {
    
  } else {
    
  }
  file_content_type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_content_type);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PAttachmentsInChannel.file_content_type)
}

// uint32 file_file_size = 4;
inline void PChannel_PAttachmentsInChannel::clear_file_file_size() {
  file_file_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel::_internal_file_file_size() const {
  return file_file_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel::file_file_size() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.file_file_size)
  return _internal_file_file_size();
}
inline void PChannel_PAttachmentsInChannel::_internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_file_size_ = value;
}
inline void PChannel_PAttachmentsInChannel::set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_file_size(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.file_file_size)
}

// uint32 message_id = 5;
inline void PChannel_PAttachmentsInChannel::clear_message_id() {
  message_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel::_internal_message_id() const {
  return message_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel::message_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.message_id)
  return _internal_message_id();
}
inline void PChannel_PAttachmentsInChannel::_internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  message_id_ = value;
}
inline void PChannel_PAttachmentsInChannel::set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.message_id)
}

// uint32 file_updated_at = 6;
inline void PChannel_PAttachmentsInChannel::clear_file_updated_at() {
  file_updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel::_internal_file_updated_at() const {
  return file_updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel::file_updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.file_updated_at)
  return _internal_file_updated_at();
}
inline void PChannel_PAttachmentsInChannel::_internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_updated_at_ = value;
}
inline void PChannel_PAttachmentsInChannel::set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.file_updated_at)
}

// uint32 created_at = 7;
inline void PChannel_PAttachmentsInChannel::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.created_at)
  return _internal_created_at();
}
inline void PChannel_PAttachmentsInChannel::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PChannel_PAttachmentsInChannel::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.created_at)
}

// uint32 updated_at = 8;
inline void PChannel_PAttachmentsInChannel::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.updated_at)
  return _internal_updated_at();
}
inline void PChannel_PAttachmentsInChannel::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PChannel_PAttachmentsInChannel::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.updated_at)
}

// uint32 user_id = 9;
inline void PChannel_PAttachmentsInChannel::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.user_id)
  return _internal_user_id();
}
inline void PChannel_PAttachmentsInChannel::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PChannel_PAttachmentsInChannel::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.user_id)
}

// uint32 channel_id = 10;
inline void PChannel_PAttachmentsInChannel::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel_PAttachmentsInChannel::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.channel_id)
  return _internal_channel_id();
}
inline void PChannel_PAttachmentsInChannel::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PChannel_PAttachmentsInChannel::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.PAttachmentsInChannel.channel_id)
}

// .kandan_small.PChannel.PAttachmentsInChannel.PUserInAttachment user = 11;
inline bool PChannel_PAttachmentsInChannel::_internal_has_user() const {
  return this != internal_default_instance() && user_ != nullptr;
}
inline bool PChannel_PAttachmentsInChannel::has_user() const {
  return _internal_has_user();
}
inline void PChannel_PAttachmentsInChannel::clear_user() {
  if (GetArenaNoVirtual() == nullptr && user_ != nullptr) {
    delete user_;
  }
  user_ = nullptr;
}
inline const ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment& PChannel_PAttachmentsInChannel::_internal_user() const {
  const ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment* p = user_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment*>(
      &::kandan_small::_PChannel_PAttachmentsInChannel_PUserInAttachment_default_instance_);
}
inline const ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment& PChannel_PAttachmentsInChannel::user() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.PAttachmentsInChannel.user)
  return _internal_user();
}
inline ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment* PChannel_PAttachmentsInChannel::release_user() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.PAttachmentsInChannel.user)
  
  ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment* temp = user_;
  user_ = nullptr;
  return temp;
}
inline ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment* PChannel_PAttachmentsInChannel::_internal_mutable_user() {
  
  if (user_ == nullptr) {
    auto* p = CreateMaybeMessage<::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment>(GetArenaNoVirtual());
    user_ = p;
  }
  return user_;
}
inline ::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment* PChannel_PAttachmentsInChannel::mutable_user() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.PAttachmentsInChannel.user)
  return _internal_mutable_user();
}
inline void PChannel_PAttachmentsInChannel::set_allocated_user(::kandan_small::PChannel_PAttachmentsInChannel_PUserInAttachment* user) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete user_;
  }
  if (user) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      user = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user, submessage_arena);
    }
    
  } else {
    
  }
  user_ = user;
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.PAttachmentsInChannel.user)
}

// -------------------------------------------------------------------

// PChannel

// uint32 id = 1;
inline void PChannel::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.id)
  return _internal_id();
}
inline void PChannel::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PChannel::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.id)
}

// string name = 2;
inline void PChannel::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PChannel::name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.name)
  return _internal_name();
}
inline void PChannel::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.name)
}
inline std::string* PChannel::mutable_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.name)
  return _internal_mutable_name();
}
inline const std::string& PChannel::_internal_name() const {
  return name_.GetNoArena();
}
inline void PChannel::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PChannel::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PChannel.name)
}
inline void PChannel::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PChannel.name)
}
inline void PChannel::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PChannel.name)
}
inline std::string* PChannel::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PChannel::release_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PChannel::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.name)
}

// uint32 created_at = 3;
inline void PChannel::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.created_at)
  return _internal_created_at();
}
inline void PChannel::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PChannel::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.created_at)
}

// uint32 updated_at = 4;
inline void PChannel::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.updated_at)
  return _internal_updated_at();
}
inline void PChannel::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PChannel::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.updated_at)
}

// uint32 user_id = 5;
inline void PChannel::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.user_id)
  return _internal_user_id();
}
inline void PChannel::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PChannel::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.user_id)
}

// uint32 count = 6;
inline void PChannel::clear_count() {
  count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PChannel::count() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.count)
  return _internal_count();
}
inline void PChannel::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  count_ = value;
}
inline void PChannel::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:kandan_small.PChannel.count)
}

// repeated .kandan_small.PChannel.PActivitiesInChannel activities = 7;
inline int PChannel::_internal_activities_size() const {
  return activities_.size();
}
inline int PChannel::activities_size() const {
  return _internal_activities_size();
}
inline void PChannel::clear_activities() {
  activities_.Clear();
}
inline ::kandan_small::PChannel_PActivitiesInChannel* PChannel::mutable_activities(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.activities)
  return activities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PActivitiesInChannel >*
PChannel::mutable_activities() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PChannel.activities)
  return &activities_;
}
inline const ::kandan_small::PChannel_PActivitiesInChannel& PChannel::_internal_activities(int index) const {
  return activities_.Get(index);
}
inline const ::kandan_small::PChannel_PActivitiesInChannel& PChannel::activities(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.activities)
  return _internal_activities(index);
}
inline ::kandan_small::PChannel_PActivitiesInChannel* PChannel::_internal_add_activities() {
  return activities_.Add();
}
inline ::kandan_small::PChannel_PActivitiesInChannel* PChannel::add_activities() {
  // @@protoc_insertion_point(field_add:kandan_small.PChannel.activities)
  return _internal_add_activities();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PActivitiesInChannel >&
PChannel::activities() const {
  // @@protoc_insertion_point(field_list:kandan_small.PChannel.activities)
  return activities_;
}

// .kandan_small.PChannel.PUserInChannel user = 8;
inline bool PChannel::_internal_has_user() const {
  return this != internal_default_instance() && user_ != nullptr;
}
inline bool PChannel::has_user() const {
  return _internal_has_user();
}
inline void PChannel::clear_user() {
  if (GetArenaNoVirtual() == nullptr && user_ != nullptr) {
    delete user_;
  }
  user_ = nullptr;
}
inline const ::kandan_small::PChannel_PUserInChannel& PChannel::_internal_user() const {
  const ::kandan_small::PChannel_PUserInChannel* p = user_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kandan_small::PChannel_PUserInChannel*>(
      &::kandan_small::_PChannel_PUserInChannel_default_instance_);
}
inline const ::kandan_small::PChannel_PUserInChannel& PChannel::user() const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.user)
  return _internal_user();
}
inline ::kandan_small::PChannel_PUserInChannel* PChannel::release_user() {
  // @@protoc_insertion_point(field_release:kandan_small.PChannel.user)
  
  ::kandan_small::PChannel_PUserInChannel* temp = user_;
  user_ = nullptr;
  return temp;
}
inline ::kandan_small::PChannel_PUserInChannel* PChannel::_internal_mutable_user() {
  
  if (user_ == nullptr) {
    auto* p = CreateMaybeMessage<::kandan_small::PChannel_PUserInChannel>(GetArenaNoVirtual());
    user_ = p;
  }
  return user_;
}
inline ::kandan_small::PChannel_PUserInChannel* PChannel::mutable_user() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.user)
  return _internal_mutable_user();
}
inline void PChannel::set_allocated_user(::kandan_small::PChannel_PUserInChannel* user) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete user_;
  }
  if (user) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      user = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user, submessage_arena);
    }
    
  } else {
    
  }
  user_ = user;
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PChannel.user)
}

// repeated .kandan_small.PChannel.PAttachmentsInChannel attachments = 9;
inline int PChannel::_internal_attachments_size() const {
  return attachments_.size();
}
inline int PChannel::attachments_size() const {
  return _internal_attachments_size();
}
inline void PChannel::clear_attachments() {
  attachments_.Clear();
}
inline ::kandan_small::PChannel_PAttachmentsInChannel* PChannel::mutable_attachments(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannel.attachments)
  return attachments_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PAttachmentsInChannel >*
PChannel::mutable_attachments() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PChannel.attachments)
  return &attachments_;
}
inline const ::kandan_small::PChannel_PAttachmentsInChannel& PChannel::_internal_attachments(int index) const {
  return attachments_.Get(index);
}
inline const ::kandan_small::PChannel_PAttachmentsInChannel& PChannel::attachments(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannel.attachments)
  return _internal_attachments(index);
}
inline ::kandan_small::PChannel_PAttachmentsInChannel* PChannel::_internal_add_attachments() {
  return attachments_.Add();
}
inline ::kandan_small::PChannel_PAttachmentsInChannel* PChannel::add_attachments() {
  // @@protoc_insertion_point(field_add:kandan_small.PChannel.attachments)
  return _internal_add_attachments();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel_PAttachmentsInChannel >&
PChannel::attachments() const {
  // @@protoc_insertion_point(field_list:kandan_small.PChannel.attachments)
  return attachments_;
}

// -------------------------------------------------------------------

// PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser

// uint32 id = 1;
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.id)
  return _internal_id();
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.id)
}

// string file_file_name = 2;
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::clear_file_file_name() {
  file_file_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::file_file_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.file_file_name)
  return _internal_file_file_name();
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::set_file_file_name(const std::string& value) {
  _internal_set_file_file_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.file_file_name)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::mutable_file_file_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.file_file_name)
  return _internal_mutable_file_file_name();
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_file_file_name() const {
  return file_file_name_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_set_file_file_name(const std::string& value) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::set_file_file_name(std::string&& value) {
  
  file_file_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.file_file_name)
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::set_file_file_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.file_file_name)
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::set_file_file_name(const char* value, size_t size) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.file_file_name)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_mutable_file_file_name() {
  
  return file_file_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::release_file_file_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.file_file_name)
  
  return file_file_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::set_allocated_file_file_name(std::string* file_file_name) {
  if (file_file_name != nullptr) {
    
  } else {
    
  }
  file_file_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_file_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.file_file_name)
}

// string file_content_type = 3;
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::clear_file_content_type() {
  file_content_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::file_content_type() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.file_content_type)
  return _internal_file_content_type();
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::set_file_content_type(const std::string& value) {
  _internal_set_file_content_type(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.file_content_type)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::mutable_file_content_type() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.file_content_type)
  return _internal_mutable_file_content_type();
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_file_content_type() const {
  return file_content_type_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_set_file_content_type(const std::string& value) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::set_file_content_type(std::string&& value) {
  
  file_content_type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.file_content_type)
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::set_file_content_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.file_content_type)
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::set_file_content_type(const char* value, size_t size) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.file_content_type)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_mutable_file_content_type() {
  
  return file_content_type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::release_file_content_type() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.file_content_type)
  
  return file_content_type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::set_allocated_file_content_type(std::string* file_content_type) {
  if (file_content_type != nullptr) {
    
  } else {
    
  }
  file_content_type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_content_type);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.file_content_type)
}

// uint32 file_file_size = 4;
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::clear_file_file_size() {
  file_file_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_file_file_size() const {
  return file_file_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::file_file_size() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.file_file_size)
  return _internal_file_file_size();
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_file_size_ = value;
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_file_size(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.file_file_size)
}

// uint32 message_id = 5;
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::clear_message_id() {
  message_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_message_id() const {
  return message_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::message_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.message_id)
  return _internal_message_id();
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  message_id_ = value;
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.message_id)
}

// uint32 file_updated_at = 6;
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::clear_file_updated_at() {
  file_updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_file_updated_at() const {
  return file_updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::file_updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.file_updated_at)
  return _internal_file_updated_at();
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_updated_at_ = value;
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.file_updated_at)
}

// uint32 created_at = 7;
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.created_at)
  return _internal_created_at();
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.created_at)
}

// uint32 updated_at = 8;
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.updated_at)
  return _internal_updated_at();
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.updated_at)
}

// uint32 user_id = 9;
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.user_id)
  return _internal_user_id();
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.user_id)
}

// uint32 channel_id = 10;
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.channel_id)
  return _internal_channel_id();
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser.channel_id)
}

// -------------------------------------------------------------------

// PActivity_PChannelInActivity_PUserInChannel

// uint32 id = 1;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.id)
  return _internal_id();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.id)
}

// string email = 2;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_email() {
  email_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::email() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.email)
  return _internal_email();
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_email(const std::string& value) {
  _internal_set_email(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.email)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::mutable_email() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PUserInChannel.email)
  return _internal_mutable_email();
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::_internal_email() const {
  return email_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_email(const std::string& value) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_email(std::string&& value) {
  
  email_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PUserInChannel.email)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PUserInChannel.email)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PUserInChannel.email)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::_internal_mutable_email() {
  
  return email_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::release_email() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PUserInChannel.email)
  
  return email_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_allocated_email(std::string* email) {
  if (email != nullptr) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PUserInChannel.email)
}

// string encrypted_password = 3;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_encrypted_password() {
  encrypted_password_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::encrypted_password() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.encrypted_password)
  return _internal_encrypted_password();
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_encrypted_password(const std::string& value) {
  _internal_set_encrypted_password(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.encrypted_password)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::mutable_encrypted_password() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PUserInChannel.encrypted_password)
  return _internal_mutable_encrypted_password();
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::_internal_encrypted_password() const {
  return encrypted_password_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_encrypted_password(const std::string& value) {
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_encrypted_password(std::string&& value) {
  
  encrypted_password_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PUserInChannel.encrypted_password)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_encrypted_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PUserInChannel.encrypted_password)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_encrypted_password(const char* value, size_t size) {
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PUserInChannel.encrypted_password)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::_internal_mutable_encrypted_password() {
  
  return encrypted_password_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::release_encrypted_password() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PUserInChannel.encrypted_password)
  
  return encrypted_password_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_allocated_encrypted_password(std::string* encrypted_password) {
  if (encrypted_password != nullptr) {
    
  } else {
    
  }
  encrypted_password_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), encrypted_password);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PUserInChannel.encrypted_password)
}

// string reset_password_token = 4;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_reset_password_token() {
  reset_password_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::reset_password_token() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.reset_password_token)
  return _internal_reset_password_token();
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_reset_password_token(const std::string& value) {
  _internal_set_reset_password_token(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.reset_password_token)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::mutable_reset_password_token() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PUserInChannel.reset_password_token)
  return _internal_mutable_reset_password_token();
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::_internal_reset_password_token() const {
  return reset_password_token_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_reset_password_token(const std::string& value) {
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_reset_password_token(std::string&& value) {
  
  reset_password_token_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PUserInChannel.reset_password_token)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_reset_password_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PUserInChannel.reset_password_token)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_reset_password_token(const char* value, size_t size) {
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PUserInChannel.reset_password_token)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::_internal_mutable_reset_password_token() {
  
  return reset_password_token_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::release_reset_password_token() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PUserInChannel.reset_password_token)
  
  return reset_password_token_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_allocated_reset_password_token(std::string* reset_password_token) {
  if (reset_password_token != nullptr) {
    
  } else {
    
  }
  reset_password_token_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reset_password_token);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PUserInChannel.reset_password_token)
}

// uint32 reset_password_sent_at = 5;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_reset_password_sent_at() {
  reset_password_sent_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel::_internal_reset_password_sent_at() const {
  return reset_password_sent_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel::reset_password_sent_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.reset_password_sent_at)
  return _internal_reset_password_sent_at();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  reset_password_sent_at_ = value;
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reset_password_sent_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.reset_password_sent_at)
}

// uint32 remember_created_at = 6;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_remember_created_at() {
  remember_created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel::_internal_remember_created_at() const {
  return remember_created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel::remember_created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.remember_created_at)
  return _internal_remember_created_at();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  remember_created_at_ = value;
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_remember_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.remember_created_at)
}

// string first_name = 7;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::first_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.first_name)
  return _internal_first_name();
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_first_name(const std::string& value) {
  _internal_set_first_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.first_name)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::mutable_first_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PUserInChannel.first_name)
  return _internal_mutable_first_name();
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::_internal_first_name() const {
  return first_name_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_first_name(const std::string& value) {
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_first_name(std::string&& value) {
  
  first_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PUserInChannel.first_name)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_first_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PUserInChannel.first_name)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PUserInChannel.first_name)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::_internal_mutable_first_name() {
  
  return first_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::release_first_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PUserInChannel.first_name)
  
  return first_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_allocated_first_name(std::string* first_name) {
  if (first_name != nullptr) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PUserInChannel.first_name)
}

// string last_name = 8;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::last_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.last_name)
  return _internal_last_name();
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_last_name(const std::string& value) {
  _internal_set_last_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.last_name)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::mutable_last_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PUserInChannel.last_name)
  return _internal_mutable_last_name();
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::_internal_last_name() const {
  return last_name_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_last_name(const std::string& value) {
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_last_name(std::string&& value) {
  
  last_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PUserInChannel.last_name)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_last_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PUserInChannel.last_name)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PUserInChannel.last_name)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::_internal_mutable_last_name() {
  
  return last_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::release_last_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PUserInChannel.last_name)
  
  return last_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_allocated_last_name(std::string* last_name) {
  if (last_name != nullptr) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PUserInChannel.last_name)
}

// uint32 signin_count = 9;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_signin_count() {
  signin_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel::_internal_signin_count() const {
  return signin_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel::signin_count() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.signin_count)
  return _internal_signin_count();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  signin_count_ = value;
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_signin_count(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.signin_count)
}

// uint32 current_sign_in_at = 10;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_current_sign_in_at() {
  current_sign_in_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel::_internal_current_sign_in_at() const {
  return current_sign_in_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel::current_sign_in_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.current_sign_in_at)
  return _internal_current_sign_in_at();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  current_sign_in_at_ = value;
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_current_sign_in_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.current_sign_in_at)
}

// string current_sign_in_ip = 11;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_current_sign_in_ip() {
  current_sign_in_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::current_sign_in_ip() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.current_sign_in_ip)
  return _internal_current_sign_in_ip();
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_current_sign_in_ip(const std::string& value) {
  _internal_set_current_sign_in_ip(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.current_sign_in_ip)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::mutable_current_sign_in_ip() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PUserInChannel.current_sign_in_ip)
  return _internal_mutable_current_sign_in_ip();
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::_internal_current_sign_in_ip() const {
  return current_sign_in_ip_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_current_sign_in_ip(const std::string& value) {
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_current_sign_in_ip(std::string&& value) {
  
  current_sign_in_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PUserInChannel.current_sign_in_ip)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_current_sign_in_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PUserInChannel.current_sign_in_ip)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_current_sign_in_ip(const char* value, size_t size) {
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PUserInChannel.current_sign_in_ip)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::_internal_mutable_current_sign_in_ip() {
  
  return current_sign_in_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::release_current_sign_in_ip() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PUserInChannel.current_sign_in_ip)
  
  return current_sign_in_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_allocated_current_sign_in_ip(std::string* current_sign_in_ip) {
  if (current_sign_in_ip != nullptr) {
    
  } else {
    
  }
  current_sign_in_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), current_sign_in_ip);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PUserInChannel.current_sign_in_ip)
}

// uint32 last_sign_in_at = 12;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_last_sign_in_at() {
  last_sign_in_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel::_internal_last_sign_in_at() const {
  return last_sign_in_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel::last_sign_in_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.last_sign_in_at)
  return _internal_last_sign_in_at();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  last_sign_in_at_ = value;
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_sign_in_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.last_sign_in_at)
}

// string last_sign_in_ip = 13;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_last_sign_in_ip() {
  last_sign_in_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::last_sign_in_ip() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.last_sign_in_ip)
  return _internal_last_sign_in_ip();
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_last_sign_in_ip(const std::string& value) {
  _internal_set_last_sign_in_ip(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.last_sign_in_ip)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::mutable_last_sign_in_ip() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PUserInChannel.last_sign_in_ip)
  return _internal_mutable_last_sign_in_ip();
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::_internal_last_sign_in_ip() const {
  return last_sign_in_ip_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_last_sign_in_ip(const std::string& value) {
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_last_sign_in_ip(std::string&& value) {
  
  last_sign_in_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PUserInChannel.last_sign_in_ip)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_last_sign_in_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PUserInChannel.last_sign_in_ip)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_last_sign_in_ip(const char* value, size_t size) {
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PUserInChannel.last_sign_in_ip)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::_internal_mutable_last_sign_in_ip() {
  
  return last_sign_in_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::release_last_sign_in_ip() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PUserInChannel.last_sign_in_ip)
  
  return last_sign_in_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_allocated_last_sign_in_ip(std::string* last_sign_in_ip) {
  if (last_sign_in_ip != nullptr) {
    
  } else {
    
  }
  last_sign_in_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_sign_in_ip);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PUserInChannel.last_sign_in_ip)
}

// string auth_token = 14;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_auth_token() {
  auth_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::auth_token() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.auth_token)
  return _internal_auth_token();
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_auth_token(const std::string& value) {
  _internal_set_auth_token(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.auth_token)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::mutable_auth_token() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PUserInChannel.auth_token)
  return _internal_mutable_auth_token();
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::_internal_auth_token() const {
  return auth_token_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_auth_token(const std::string& value) {
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_auth_token(std::string&& value) {
  
  auth_token_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PUserInChannel.auth_token)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_auth_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PUserInChannel.auth_token)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_auth_token(const char* value, size_t size) {
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PUserInChannel.auth_token)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::_internal_mutable_auth_token() {
  
  return auth_token_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::release_auth_token() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PUserInChannel.auth_token)
  
  return auth_token_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_allocated_auth_token(std::string* auth_token) {
  if (auth_token != nullptr) {
    
  } else {
    
  }
  auth_token_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), auth_token);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PUserInChannel.auth_token)
}

// string locale = 15;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_locale() {
  locale_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::locale() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.locale)
  return _internal_locale();
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_locale(const std::string& value) {
  _internal_set_locale(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.locale)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::mutable_locale() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PUserInChannel.locale)
  return _internal_mutable_locale();
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::_internal_locale() const {
  return locale_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_locale(const std::string& value) {
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_locale(std::string&& value) {
  
  locale_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PUserInChannel.locale)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_locale(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PUserInChannel.locale)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_locale(const char* value, size_t size) {
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PUserInChannel.locale)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::_internal_mutable_locale() {
  
  return locale_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::release_locale() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PUserInChannel.locale)
  
  return locale_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_allocated_locale(std::string* locale) {
  if (locale != nullptr) {
    
  } else {
    
  }
  locale_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), locale);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PUserInChannel.locale)
}

// string gravatar_hash = 16;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_gravatar_hash() {
  gravatar_hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::gravatar_hash() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.gravatar_hash)
  return _internal_gravatar_hash();
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_gravatar_hash(const std::string& value) {
  _internal_set_gravatar_hash(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.gravatar_hash)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::mutable_gravatar_hash() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PUserInChannel.gravatar_hash)
  return _internal_mutable_gravatar_hash();
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::_internal_gravatar_hash() const {
  return gravatar_hash_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_gravatar_hash(const std::string& value) {
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_gravatar_hash(std::string&& value) {
  
  gravatar_hash_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PUserInChannel.gravatar_hash)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_gravatar_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PUserInChannel.gravatar_hash)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_gravatar_hash(const char* value, size_t size) {
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PUserInChannel.gravatar_hash)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::_internal_mutable_gravatar_hash() {
  
  return gravatar_hash_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::release_gravatar_hash() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PUserInChannel.gravatar_hash)
  
  return gravatar_hash_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_allocated_gravatar_hash(std::string* gravatar_hash) {
  if (gravatar_hash != nullptr) {
    
  } else {
    
  }
  gravatar_hash_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gravatar_hash);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PUserInChannel.gravatar_hash)
}

// string username = 17;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_username() {
  username_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::username() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.username)
  return _internal_username();
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_username(const std::string& value) {
  _internal_set_username(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.username)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::mutable_username() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PUserInChannel.username)
  return _internal_mutable_username();
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::_internal_username() const {
  return username_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_username(const std::string& value) {
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_username(std::string&& value) {
  
  username_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PUserInChannel.username)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PUserInChannel.username)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PUserInChannel.username)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::_internal_mutable_username() {
  
  return username_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::release_username() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PUserInChannel.username)
  
  return username_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_allocated_username(std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PUserInChannel.username)
}

// string regstatus = 18;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_regstatus() {
  regstatus_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::regstatus() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.regstatus)
  return _internal_regstatus();
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_regstatus(const std::string& value) {
  _internal_set_regstatus(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.regstatus)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::mutable_regstatus() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PUserInChannel.regstatus)
  return _internal_mutable_regstatus();
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::_internal_regstatus() const {
  return regstatus_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_regstatus(const std::string& value) {
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_regstatus(std::string&& value) {
  
  regstatus_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PUserInChannel.regstatus)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_regstatus(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PUserInChannel.regstatus)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_regstatus(const char* value, size_t size) {
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PUserInChannel.regstatus)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::_internal_mutable_regstatus() {
  
  return regstatus_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::release_regstatus() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PUserInChannel.regstatus)
  
  return regstatus_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_allocated_regstatus(std::string* regstatus) {
  if (regstatus != nullptr) {
    
  } else {
    
  }
  regstatus_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), regstatus);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PUserInChannel.regstatus)
}

// bool active = 19;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_active() {
  active_ = false;
}
inline bool PActivity_PChannelInActivity_PUserInChannel::_internal_active() const {
  return active_;
}
inline bool PActivity_PChannelInActivity_PUserInChannel::active() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.active)
  return _internal_active();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_active(bool value) {
  
  active_ = value;
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_active(bool value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.active)
}

// bool is_admin = 20;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_is_admin() {
  is_admin_ = false;
}
inline bool PActivity_PChannelInActivity_PUserInChannel::_internal_is_admin() const {
  return is_admin_;
}
inline bool PActivity_PChannelInActivity_PUserInChannel::is_admin() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.is_admin)
  return _internal_is_admin();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_is_admin(bool value) {
  
  is_admin_ = value;
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_is_admin(bool value) {
  _internal_set_is_admin(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.is_admin)
}

// string avatar_url = 21;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_avatar_url() {
  avatar_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::avatar_url() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.avatar_url)
  return _internal_avatar_url();
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_avatar_url(const std::string& value) {
  _internal_set_avatar_url(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.avatar_url)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::mutable_avatar_url() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PUserInChannel.avatar_url)
  return _internal_mutable_avatar_url();
}
inline const std::string& PActivity_PChannelInActivity_PUserInChannel::_internal_avatar_url() const {
  return avatar_url_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_avatar_url(const std::string& value) {
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_avatar_url(std::string&& value) {
  
  avatar_url_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PUserInChannel.avatar_url)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_avatar_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PUserInChannel.avatar_url)
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_avatar_url(const char* value, size_t size) {
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PUserInChannel.avatar_url)
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::_internal_mutable_avatar_url() {
  
  return avatar_url_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PUserInChannel::release_avatar_url() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PUserInChannel.avatar_url)
  
  return avatar_url_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_allocated_avatar_url(std::string* avatar_url) {
  if (avatar_url != nullptr) {
    
  } else {
    
  }
  avatar_url_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar_url);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PUserInChannel.avatar_url)
}

// uint32 created_at = 22;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.created_at)
  return _internal_created_at();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.created_at)
}

// uint32 updated_at = 23;
inline void PActivity_PChannelInActivity_PUserInChannel::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PUserInChannel::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.updated_at)
  return _internal_updated_at();
}
inline void PActivity_PChannelInActivity_PUserInChannel::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PActivity_PChannelInActivity_PUserInChannel::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PUserInChannel.updated_at)
}

// repeated .kandan_small.PActivity.PChannelInActivity.PUserInChannel.PAttachmentsInUser attachments = 24;
inline int PActivity_PChannelInActivity_PUserInChannel::_internal_attachments_size() const {
  return attachments_.size();
}
inline int PActivity_PChannelInActivity_PUserInChannel::attachments_size() const {
  return _internal_attachments_size();
}
inline void PActivity_PChannelInActivity_PUserInChannel::clear_attachments() {
  attachments_.Clear();
}
inline ::kandan_small::PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser* PActivity_PChannelInActivity_PUserInChannel::mutable_attachments(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PUserInChannel.attachments)
  return attachments_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser >*
PActivity_PChannelInActivity_PUserInChannel::mutable_attachments() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PActivity.PChannelInActivity.PUserInChannel.attachments)
  return &attachments_;
}
inline const ::kandan_small::PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser& PActivity_PChannelInActivity_PUserInChannel::_internal_attachments(int index) const {
  return attachments_.Get(index);
}
inline const ::kandan_small::PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser& PActivity_PChannelInActivity_PUserInChannel::attachments(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PUserInChannel.attachments)
  return _internal_attachments(index);
}
inline ::kandan_small::PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser* PActivity_PChannelInActivity_PUserInChannel::_internal_add_attachments() {
  return attachments_.Add();
}
inline ::kandan_small::PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser* PActivity_PChannelInActivity_PUserInChannel::add_attachments() {
  // @@protoc_insertion_point(field_add:kandan_small.PActivity.PChannelInActivity.PUserInChannel.attachments)
  return _internal_add_attachments();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PChannelInActivity_PUserInChannel_PAttachmentsInUser >&
PActivity_PChannelInActivity_PUserInChannel::attachments() const {
  // @@protoc_insertion_point(field_list:kandan_small.PActivity.PChannelInActivity.PUserInChannel.attachments)
  return attachments_;
}

// -------------------------------------------------------------------

// PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment

// uint32 id = 1;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.id)
  return _internal_id();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.id)
}

// string email = 2;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_email() {
  email_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::email() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.email)
  return _internal_email();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_email(const std::string& value) {
  _internal_set_email(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.email)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::mutable_email() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.email)
  return _internal_mutable_email();
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_email() const {
  return email_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_email(const std::string& value) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_email(std::string&& value) {
  
  email_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.email)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.email)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.email)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_email() {
  
  return email_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::release_email() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.email)
  
  return email_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_allocated_email(std::string* email) {
  if (email != nullptr) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.email)
}

// string encrypted_password = 3;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_encrypted_password() {
  encrypted_password_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::encrypted_password() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.encrypted_password)
  return _internal_encrypted_password();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_encrypted_password(const std::string& value) {
  _internal_set_encrypted_password(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.encrypted_password)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::mutable_encrypted_password() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.encrypted_password)
  return _internal_mutable_encrypted_password();
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_encrypted_password() const {
  return encrypted_password_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_encrypted_password(const std::string& value) {
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_encrypted_password(std::string&& value) {
  
  encrypted_password_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.encrypted_password)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_encrypted_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.encrypted_password)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_encrypted_password(const char* value, size_t size) {
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.encrypted_password)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_encrypted_password() {
  
  return encrypted_password_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::release_encrypted_password() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.encrypted_password)
  
  return encrypted_password_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_allocated_encrypted_password(std::string* encrypted_password) {
  if (encrypted_password != nullptr) {
    
  } else {
    
  }
  encrypted_password_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), encrypted_password);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.encrypted_password)
}

// string reset_password_token = 4;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_reset_password_token() {
  reset_password_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::reset_password_token() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.reset_password_token)
  return _internal_reset_password_token();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_reset_password_token(const std::string& value) {
  _internal_set_reset_password_token(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.reset_password_token)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::mutable_reset_password_token() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.reset_password_token)
  return _internal_mutable_reset_password_token();
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_reset_password_token() const {
  return reset_password_token_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_reset_password_token(const std::string& value) {
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_reset_password_token(std::string&& value) {
  
  reset_password_token_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.reset_password_token)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_reset_password_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.reset_password_token)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_reset_password_token(const char* value, size_t size) {
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.reset_password_token)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_reset_password_token() {
  
  return reset_password_token_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::release_reset_password_token() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.reset_password_token)
  
  return reset_password_token_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_allocated_reset_password_token(std::string* reset_password_token) {
  if (reset_password_token != nullptr) {
    
  } else {
    
  }
  reset_password_token_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reset_password_token);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.reset_password_token)
}

// uint32 reset_password_sent_at = 5;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_reset_password_sent_at() {
  reset_password_sent_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_reset_password_sent_at() const {
  return reset_password_sent_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::reset_password_sent_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.reset_password_sent_at)
  return _internal_reset_password_sent_at();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  reset_password_sent_at_ = value;
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reset_password_sent_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.reset_password_sent_at)
}

// uint32 remember_created_at = 6;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_remember_created_at() {
  remember_created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_remember_created_at() const {
  return remember_created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::remember_created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.remember_created_at)
  return _internal_remember_created_at();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  remember_created_at_ = value;
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_remember_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.remember_created_at)
}

// string first_name = 7;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::first_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.first_name)
  return _internal_first_name();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_first_name(const std::string& value) {
  _internal_set_first_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.first_name)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::mutable_first_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.first_name)
  return _internal_mutable_first_name();
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_first_name() const {
  return first_name_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_first_name(const std::string& value) {
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_first_name(std::string&& value) {
  
  first_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.first_name)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_first_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.first_name)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.first_name)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_first_name() {
  
  return first_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::release_first_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.first_name)
  
  return first_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_allocated_first_name(std::string* first_name) {
  if (first_name != nullptr) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.first_name)
}

// string last_name = 8;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::last_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.last_name)
  return _internal_last_name();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_last_name(const std::string& value) {
  _internal_set_last_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.last_name)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::mutable_last_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.last_name)
  return _internal_mutable_last_name();
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_last_name() const {
  return last_name_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_last_name(const std::string& value) {
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_last_name(std::string&& value) {
  
  last_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.last_name)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_last_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.last_name)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.last_name)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_last_name() {
  
  return last_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::release_last_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.last_name)
  
  return last_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_allocated_last_name(std::string* last_name) {
  if (last_name != nullptr) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.last_name)
}

// uint32 signin_count = 9;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_signin_count() {
  signin_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_signin_count() const {
  return signin_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::signin_count() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.signin_count)
  return _internal_signin_count();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  signin_count_ = value;
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_signin_count(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.signin_count)
}

// uint32 current_sign_in_at = 10;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_current_sign_in_at() {
  current_sign_in_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_current_sign_in_at() const {
  return current_sign_in_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::current_sign_in_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.current_sign_in_at)
  return _internal_current_sign_in_at();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  current_sign_in_at_ = value;
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_current_sign_in_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.current_sign_in_at)
}

// string current_sign_in_ip = 11;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_current_sign_in_ip() {
  current_sign_in_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::current_sign_in_ip() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.current_sign_in_ip)
  return _internal_current_sign_in_ip();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_current_sign_in_ip(const std::string& value) {
  _internal_set_current_sign_in_ip(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.current_sign_in_ip)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::mutable_current_sign_in_ip() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.current_sign_in_ip)
  return _internal_mutable_current_sign_in_ip();
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_current_sign_in_ip() const {
  return current_sign_in_ip_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_current_sign_in_ip(const std::string& value) {
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_current_sign_in_ip(std::string&& value) {
  
  current_sign_in_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.current_sign_in_ip)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_current_sign_in_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.current_sign_in_ip)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_current_sign_in_ip(const char* value, size_t size) {
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.current_sign_in_ip)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_current_sign_in_ip() {
  
  return current_sign_in_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::release_current_sign_in_ip() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.current_sign_in_ip)
  
  return current_sign_in_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_allocated_current_sign_in_ip(std::string* current_sign_in_ip) {
  if (current_sign_in_ip != nullptr) {
    
  } else {
    
  }
  current_sign_in_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), current_sign_in_ip);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.current_sign_in_ip)
}

// uint32 last_sign_in_at = 12;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_last_sign_in_at() {
  last_sign_in_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_last_sign_in_at() const {
  return last_sign_in_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::last_sign_in_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.last_sign_in_at)
  return _internal_last_sign_in_at();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  last_sign_in_at_ = value;
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_sign_in_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.last_sign_in_at)
}

// string last_sign_in_ip = 13;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_last_sign_in_ip() {
  last_sign_in_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::last_sign_in_ip() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.last_sign_in_ip)
  return _internal_last_sign_in_ip();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_last_sign_in_ip(const std::string& value) {
  _internal_set_last_sign_in_ip(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.last_sign_in_ip)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::mutable_last_sign_in_ip() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.last_sign_in_ip)
  return _internal_mutable_last_sign_in_ip();
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_last_sign_in_ip() const {
  return last_sign_in_ip_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_last_sign_in_ip(const std::string& value) {
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_last_sign_in_ip(std::string&& value) {
  
  last_sign_in_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.last_sign_in_ip)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_last_sign_in_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.last_sign_in_ip)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_last_sign_in_ip(const char* value, size_t size) {
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.last_sign_in_ip)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_last_sign_in_ip() {
  
  return last_sign_in_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::release_last_sign_in_ip() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.last_sign_in_ip)
  
  return last_sign_in_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_allocated_last_sign_in_ip(std::string* last_sign_in_ip) {
  if (last_sign_in_ip != nullptr) {
    
  } else {
    
  }
  last_sign_in_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_sign_in_ip);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.last_sign_in_ip)
}

// string auth_token = 14;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_auth_token() {
  auth_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::auth_token() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.auth_token)
  return _internal_auth_token();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_auth_token(const std::string& value) {
  _internal_set_auth_token(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.auth_token)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::mutable_auth_token() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.auth_token)
  return _internal_mutable_auth_token();
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_auth_token() const {
  return auth_token_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_auth_token(const std::string& value) {
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_auth_token(std::string&& value) {
  
  auth_token_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.auth_token)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_auth_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.auth_token)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_auth_token(const char* value, size_t size) {
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.auth_token)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_auth_token() {
  
  return auth_token_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::release_auth_token() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.auth_token)
  
  return auth_token_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_allocated_auth_token(std::string* auth_token) {
  if (auth_token != nullptr) {
    
  } else {
    
  }
  auth_token_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), auth_token);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.auth_token)
}

// string locale = 15;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_locale() {
  locale_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::locale() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.locale)
  return _internal_locale();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_locale(const std::string& value) {
  _internal_set_locale(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.locale)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::mutable_locale() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.locale)
  return _internal_mutable_locale();
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_locale() const {
  return locale_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_locale(const std::string& value) {
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_locale(std::string&& value) {
  
  locale_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.locale)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_locale(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.locale)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_locale(const char* value, size_t size) {
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.locale)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_locale() {
  
  return locale_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::release_locale() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.locale)
  
  return locale_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_allocated_locale(std::string* locale) {
  if (locale != nullptr) {
    
  } else {
    
  }
  locale_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), locale);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.locale)
}

// string gravatar_hash = 16;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_gravatar_hash() {
  gravatar_hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::gravatar_hash() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.gravatar_hash)
  return _internal_gravatar_hash();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_gravatar_hash(const std::string& value) {
  _internal_set_gravatar_hash(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.gravatar_hash)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::mutable_gravatar_hash() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.gravatar_hash)
  return _internal_mutable_gravatar_hash();
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_gravatar_hash() const {
  return gravatar_hash_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_gravatar_hash(const std::string& value) {
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_gravatar_hash(std::string&& value) {
  
  gravatar_hash_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.gravatar_hash)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_gravatar_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.gravatar_hash)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_gravatar_hash(const char* value, size_t size) {
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.gravatar_hash)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_gravatar_hash() {
  
  return gravatar_hash_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::release_gravatar_hash() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.gravatar_hash)
  
  return gravatar_hash_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_allocated_gravatar_hash(std::string* gravatar_hash) {
  if (gravatar_hash != nullptr) {
    
  } else {
    
  }
  gravatar_hash_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gravatar_hash);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.gravatar_hash)
}

// string username = 17;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_username() {
  username_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::username() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.username)
  return _internal_username();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_username(const std::string& value) {
  _internal_set_username(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.username)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::mutable_username() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.username)
  return _internal_mutable_username();
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_username() const {
  return username_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_username(const std::string& value) {
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_username(std::string&& value) {
  
  username_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.username)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.username)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.username)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_username() {
  
  return username_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::release_username() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.username)
  
  return username_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_allocated_username(std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.username)
}

// string regstatus = 18;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_regstatus() {
  regstatus_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::regstatus() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.regstatus)
  return _internal_regstatus();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_regstatus(const std::string& value) {
  _internal_set_regstatus(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.regstatus)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::mutable_regstatus() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.regstatus)
  return _internal_mutable_regstatus();
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_regstatus() const {
  return regstatus_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_regstatus(const std::string& value) {
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_regstatus(std::string&& value) {
  
  regstatus_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.regstatus)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_regstatus(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.regstatus)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_regstatus(const char* value, size_t size) {
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.regstatus)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_regstatus() {
  
  return regstatus_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::release_regstatus() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.regstatus)
  
  return regstatus_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_allocated_regstatus(std::string* regstatus) {
  if (regstatus != nullptr) {
    
  } else {
    
  }
  regstatus_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), regstatus);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.regstatus)
}

// bool active = 19;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_active() {
  active_ = false;
}
inline bool PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_active() const {
  return active_;
}
inline bool PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::active() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.active)
  return _internal_active();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_active(bool value) {
  
  active_ = value;
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_active(bool value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.active)
}

// bool is_admin = 20;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_is_admin() {
  is_admin_ = false;
}
inline bool PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_is_admin() const {
  return is_admin_;
}
inline bool PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::is_admin() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.is_admin)
  return _internal_is_admin();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_is_admin(bool value) {
  
  is_admin_ = value;
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_is_admin(bool value) {
  _internal_set_is_admin(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.is_admin)
}

// string avatar_url = 21;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_avatar_url() {
  avatar_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::avatar_url() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.avatar_url)
  return _internal_avatar_url();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_avatar_url(const std::string& value) {
  _internal_set_avatar_url(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.avatar_url)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::mutable_avatar_url() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.avatar_url)
  return _internal_mutable_avatar_url();
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_avatar_url() const {
  return avatar_url_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_avatar_url(const std::string& value) {
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_avatar_url(std::string&& value) {
  
  avatar_url_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.avatar_url)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_avatar_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.avatar_url)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_avatar_url(const char* value, size_t size) {
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.avatar_url)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_mutable_avatar_url() {
  
  return avatar_url_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::release_avatar_url() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.avatar_url)
  
  return avatar_url_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_allocated_avatar_url(std::string* avatar_url) {
  if (avatar_url != nullptr) {
    
  } else {
    
  }
  avatar_url_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar_url);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.avatar_url)
}

// uint32 created_at = 22;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.created_at)
  return _internal_created_at();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.created_at)
}

// uint32 updated_at = 23;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.updated_at)
  return _internal_updated_at();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment.updated_at)
}

// -------------------------------------------------------------------

// PActivity_PChannelInActivity_PAttachmentsInChannel

// uint32 id = 1;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.id)
  return _internal_id();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.id)
}

// string file_file_name = 2;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::clear_file_file_name() {
  file_file_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel::file_file_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.file_file_name)
  return _internal_file_file_name();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::set_file_file_name(const std::string& value) {
  _internal_set_file_file_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.file_file_name)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel::mutable_file_file_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.file_file_name)
  return _internal_mutable_file_file_name();
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_file_file_name() const {
  return file_file_name_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_set_file_file_name(const std::string& value) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::set_file_file_name(std::string&& value) {
  
  file_file_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.file_file_name)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::set_file_file_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.file_file_name)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::set_file_file_name(const char* value, size_t size) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.file_file_name)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_mutable_file_file_name() {
  
  return file_file_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel::release_file_file_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.file_file_name)
  
  return file_file_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::set_allocated_file_file_name(std::string* file_file_name) {
  if (file_file_name != nullptr) {
    
  } else {
    
  }
  file_file_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_file_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.file_file_name)
}

// string file_content_type = 3;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::clear_file_content_type() {
  file_content_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel::file_content_type() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.file_content_type)
  return _internal_file_content_type();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::set_file_content_type(const std::string& value) {
  _internal_set_file_content_type(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.file_content_type)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel::mutable_file_content_type() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.file_content_type)
  return _internal_mutable_file_content_type();
}
inline const std::string& PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_file_content_type() const {
  return file_content_type_.GetNoArena();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_set_file_content_type(const std::string& value) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::set_file_content_type(std::string&& value) {
  
  file_content_type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.file_content_type)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::set_file_content_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.file_content_type)
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::set_file_content_type(const char* value, size_t size) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.file_content_type)
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_mutable_file_content_type() {
  
  return file_content_type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity_PAttachmentsInChannel::release_file_content_type() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.file_content_type)
  
  return file_content_type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::set_allocated_file_content_type(std::string* file_content_type) {
  if (file_content_type != nullptr) {
    
  } else {
    
  }
  file_content_type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_content_type);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.file_content_type)
}

// uint32 file_file_size = 4;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::clear_file_file_size() {
  file_file_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_file_file_size() const {
  return file_file_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel::file_file_size() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.file_file_size)
  return _internal_file_file_size();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_file_size_ = value;
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_file_size(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.file_file_size)
}

// uint32 message_id = 5;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::clear_message_id() {
  message_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_message_id() const {
  return message_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel::message_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.message_id)
  return _internal_message_id();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  message_id_ = value;
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.message_id)
}

// uint32 file_updated_at = 6;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::clear_file_updated_at() {
  file_updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_file_updated_at() const {
  return file_updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel::file_updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.file_updated_at)
  return _internal_file_updated_at();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_updated_at_ = value;
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.file_updated_at)
}

// uint32 created_at = 7;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.created_at)
  return _internal_created_at();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.created_at)
}

// uint32 updated_at = 8;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.updated_at)
  return _internal_updated_at();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.updated_at)
}

// uint32 user_id = 9;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.user_id)
  return _internal_user_id();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.user_id)
}

// uint32 channel_id = 10;
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity_PAttachmentsInChannel::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.channel_id)
  return _internal_channel_id();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.channel_id)
}

// .kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.PUserInAttachment user = 11;
inline bool PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_has_user() const {
  return this != internal_default_instance() && user_ != nullptr;
}
inline bool PActivity_PChannelInActivity_PAttachmentsInChannel::has_user() const {
  return _internal_has_user();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::clear_user() {
  if (GetArenaNoVirtual() == nullptr && user_ != nullptr) {
    delete user_;
  }
  user_ = nullptr;
}
inline const ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment& PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_user() const {
  const ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment* p = user_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment*>(
      &::kandan_small::_PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment_default_instance_);
}
inline const ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment& PActivity_PChannelInActivity_PAttachmentsInChannel::user() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.user)
  return _internal_user();
}
inline ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment* PActivity_PChannelInActivity_PAttachmentsInChannel::release_user() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.user)
  
  ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment* temp = user_;
  user_ = nullptr;
  return temp;
}
inline ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment* PActivity_PChannelInActivity_PAttachmentsInChannel::_internal_mutable_user() {
  
  if (user_ == nullptr) {
    auto* p = CreateMaybeMessage<::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment>(GetArenaNoVirtual());
    user_ = p;
  }
  return user_;
}
inline ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment* PActivity_PChannelInActivity_PAttachmentsInChannel::mutable_user() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.user)
  return _internal_mutable_user();
}
inline void PActivity_PChannelInActivity_PAttachmentsInChannel::set_allocated_user(::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel_PUserInAttachment* user) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete user_;
  }
  if (user) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      user = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user, submessage_arena);
    }
    
  } else {
    
  }
  user_ = user;
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel.user)
}

// -------------------------------------------------------------------

// PActivity_PChannelInActivity

// uint32 id = 1;
inline void PActivity_PChannelInActivity::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.id)
  return _internal_id();
}
inline void PActivity_PChannelInActivity::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PActivity_PChannelInActivity::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.id)
}

// string name = 2;
inline void PActivity_PChannelInActivity::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PChannelInActivity::name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.name)
  return _internal_name();
}
inline void PActivity_PChannelInActivity::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.name)
}
inline std::string* PActivity_PChannelInActivity::mutable_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.name)
  return _internal_mutable_name();
}
inline const std::string& PActivity_PChannelInActivity::_internal_name() const {
  return name_.GetNoArena();
}
inline void PActivity_PChannelInActivity::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PChannelInActivity::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PChannelInActivity.name)
}
inline void PActivity_PChannelInActivity::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PChannelInActivity.name)
}
inline void PActivity_PChannelInActivity::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PChannelInActivity.name)
}
inline std::string* PActivity_PChannelInActivity::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PChannelInActivity::release_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PChannelInActivity::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.name)
}

// uint32 created_at = 3;
inline void PActivity_PChannelInActivity::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.created_at)
  return _internal_created_at();
}
inline void PActivity_PChannelInActivity::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PActivity_PChannelInActivity::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.created_at)
}

// uint32 updated_at = 4;
inline void PActivity_PChannelInActivity::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.updated_at)
  return _internal_updated_at();
}
inline void PActivity_PChannelInActivity::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PActivity_PChannelInActivity::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.updated_at)
}

// uint32 user_id = 5;
inline void PActivity_PChannelInActivity::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.user_id)
  return _internal_user_id();
}
inline void PActivity_PChannelInActivity::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PActivity_PChannelInActivity::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.user_id)
}

// uint32 count = 6;
inline void PActivity_PChannelInActivity::clear_count() {
  count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PChannelInActivity::count() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.count)
  return _internal_count();
}
inline void PActivity_PChannelInActivity::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  count_ = value;
}
inline void PActivity_PChannelInActivity::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PChannelInActivity.count)
}

// .kandan_small.PActivity.PChannelInActivity.PUserInChannel user = 7;
inline bool PActivity_PChannelInActivity::_internal_has_user() const {
  return this != internal_default_instance() && user_ != nullptr;
}
inline bool PActivity_PChannelInActivity::has_user() const {
  return _internal_has_user();
}
inline void PActivity_PChannelInActivity::clear_user() {
  if (GetArenaNoVirtual() == nullptr && user_ != nullptr) {
    delete user_;
  }
  user_ = nullptr;
}
inline const ::kandan_small::PActivity_PChannelInActivity_PUserInChannel& PActivity_PChannelInActivity::_internal_user() const {
  const ::kandan_small::PActivity_PChannelInActivity_PUserInChannel* p = user_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kandan_small::PActivity_PChannelInActivity_PUserInChannel*>(
      &::kandan_small::_PActivity_PChannelInActivity_PUserInChannel_default_instance_);
}
inline const ::kandan_small::PActivity_PChannelInActivity_PUserInChannel& PActivity_PChannelInActivity::user() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.user)
  return _internal_user();
}
inline ::kandan_small::PActivity_PChannelInActivity_PUserInChannel* PActivity_PChannelInActivity::release_user() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PChannelInActivity.user)
  
  ::kandan_small::PActivity_PChannelInActivity_PUserInChannel* temp = user_;
  user_ = nullptr;
  return temp;
}
inline ::kandan_small::PActivity_PChannelInActivity_PUserInChannel* PActivity_PChannelInActivity::_internal_mutable_user() {
  
  if (user_ == nullptr) {
    auto* p = CreateMaybeMessage<::kandan_small::PActivity_PChannelInActivity_PUserInChannel>(GetArenaNoVirtual());
    user_ = p;
  }
  return user_;
}
inline ::kandan_small::PActivity_PChannelInActivity_PUserInChannel* PActivity_PChannelInActivity::mutable_user() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.user)
  return _internal_mutable_user();
}
inline void PActivity_PChannelInActivity::set_allocated_user(::kandan_small::PActivity_PChannelInActivity_PUserInChannel* user) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete user_;
  }
  if (user) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      user = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user, submessage_arena);
    }
    
  } else {
    
  }
  user_ = user;
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PChannelInActivity.user)
}

// repeated .kandan_small.PActivity.PChannelInActivity.PAttachmentsInChannel attachments = 8;
inline int PActivity_PChannelInActivity::_internal_attachments_size() const {
  return attachments_.size();
}
inline int PActivity_PChannelInActivity::attachments_size() const {
  return _internal_attachments_size();
}
inline void PActivity_PChannelInActivity::clear_attachments() {
  attachments_.Clear();
}
inline ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel* PActivity_PChannelInActivity::mutable_attachments(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PChannelInActivity.attachments)
  return attachments_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel >*
PActivity_PChannelInActivity::mutable_attachments() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PActivity.PChannelInActivity.attachments)
  return &attachments_;
}
inline const ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel& PActivity_PChannelInActivity::_internal_attachments(int index) const {
  return attachments_.Get(index);
}
inline const ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel& PActivity_PChannelInActivity::attachments(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PChannelInActivity.attachments)
  return _internal_attachments(index);
}
inline ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel* PActivity_PChannelInActivity::_internal_add_attachments() {
  return attachments_.Add();
}
inline ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel* PActivity_PChannelInActivity::add_attachments() {
  // @@protoc_insertion_point(field_add:kandan_small.PActivity.PChannelInActivity.attachments)
  return _internal_add_attachments();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PChannelInActivity_PAttachmentsInChannel >&
PActivity_PChannelInActivity::attachments() const {
  // @@protoc_insertion_point(field_list:kandan_small.PActivity.PChannelInActivity.attachments)
  return attachments_;
}

// -------------------------------------------------------------------

// PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel

// uint32 id = 1;
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.id)
  return _internal_id();
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.id)
}

// string file_file_name = 2;
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::clear_file_file_name() {
  file_file_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::file_file_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.file_file_name)
  return _internal_file_file_name();
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::set_file_file_name(const std::string& value) {
  _internal_set_file_file_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.file_file_name)
}
inline std::string* PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::mutable_file_file_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.file_file_name)
  return _internal_mutable_file_file_name();
}
inline const std::string& PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_file_file_name() const {
  return file_file_name_.GetNoArena();
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_set_file_file_name(const std::string& value) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::set_file_file_name(std::string&& value) {
  
  file_file_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.file_file_name)
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::set_file_file_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.file_file_name)
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::set_file_file_name(const char* value, size_t size) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.file_file_name)
}
inline std::string* PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_mutable_file_file_name() {
  
  return file_file_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::release_file_file_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.file_file_name)
  
  return file_file_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::set_allocated_file_file_name(std::string* file_file_name) {
  if (file_file_name != nullptr) {
    
  } else {
    
  }
  file_file_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_file_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.file_file_name)
}

// string file_content_type = 3;
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::clear_file_content_type() {
  file_content_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::file_content_type() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.file_content_type)
  return _internal_file_content_type();
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::set_file_content_type(const std::string& value) {
  _internal_set_file_content_type(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.file_content_type)
}
inline std::string* PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::mutable_file_content_type() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.file_content_type)
  return _internal_mutable_file_content_type();
}
inline const std::string& PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_file_content_type() const {
  return file_content_type_.GetNoArena();
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_set_file_content_type(const std::string& value) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::set_file_content_type(std::string&& value) {
  
  file_content_type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.file_content_type)
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::set_file_content_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.file_content_type)
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::set_file_content_type(const char* value, size_t size) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.file_content_type)
}
inline std::string* PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_mutable_file_content_type() {
  
  return file_content_type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::release_file_content_type() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.file_content_type)
  
  return file_content_type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::set_allocated_file_content_type(std::string* file_content_type) {
  if (file_content_type != nullptr) {
    
  } else {
    
  }
  file_content_type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_content_type);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.file_content_type)
}

// uint32 file_file_size = 4;
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::clear_file_file_size() {
  file_file_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_file_file_size() const {
  return file_file_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::file_file_size() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.file_file_size)
  return _internal_file_file_size();
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_file_size_ = value;
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_file_size(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.file_file_size)
}

// uint32 message_id = 5;
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::clear_message_id() {
  message_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_message_id() const {
  return message_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::message_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.message_id)
  return _internal_message_id();
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  message_id_ = value;
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.message_id)
}

// uint32 file_updated_at = 6;
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::clear_file_updated_at() {
  file_updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_file_updated_at() const {
  return file_updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::file_updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.file_updated_at)
  return _internal_file_updated_at();
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_updated_at_ = value;
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.file_updated_at)
}

// uint32 created_at = 7;
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.created_at)
  return _internal_created_at();
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.created_at)
}

// uint32 updated_at = 8;
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.updated_at)
  return _internal_updated_at();
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.updated_at)
}

// uint32 user_id = 9;
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.user_id)
  return _internal_user_id();
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.user_id)
}

// uint32 channel_id = 10;
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.channel_id)
  return _internal_channel_id();
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel.channel_id)
}

// -------------------------------------------------------------------

// PActivity_PUserInActivity_PChannelsInUser

// uint32 id = 1;
inline void PActivity_PUserInActivity_PChannelsInUser::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PChannelsInUser.id)
  return _internal_id();
}
inline void PActivity_PUserInActivity_PChannelsInUser::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PActivity_PUserInActivity_PChannelsInUser::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PChannelsInUser.id)
}

// string name = 2;
inline void PActivity_PUserInActivity_PChannelsInUser::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PUserInActivity_PChannelsInUser::name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PChannelsInUser.name)
  return _internal_name();
}
inline void PActivity_PUserInActivity_PChannelsInUser::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PChannelsInUser.name)
}
inline std::string* PActivity_PUserInActivity_PChannelsInUser::mutable_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.PChannelsInUser.name)
  return _internal_mutable_name();
}
inline const std::string& PActivity_PUserInActivity_PChannelsInUser::_internal_name() const {
  return name_.GetNoArena();
}
inline void PActivity_PUserInActivity_PChannelsInUser::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PUserInActivity_PChannelsInUser::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PUserInActivity.PChannelsInUser.name)
}
inline void PActivity_PUserInActivity_PChannelsInUser::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PUserInActivity.PChannelsInUser.name)
}
inline void PActivity_PUserInActivity_PChannelsInUser::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PUserInActivity.PChannelsInUser.name)
}
inline std::string* PActivity_PUserInActivity_PChannelsInUser::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PUserInActivity_PChannelsInUser::release_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PUserInActivity.PChannelsInUser.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PUserInActivity_PChannelsInUser::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PUserInActivity.PChannelsInUser.name)
}

// uint32 created_at = 3;
inline void PActivity_PUserInActivity_PChannelsInUser::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PChannelsInUser.created_at)
  return _internal_created_at();
}
inline void PActivity_PUserInActivity_PChannelsInUser::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PActivity_PUserInActivity_PChannelsInUser::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PChannelsInUser.created_at)
}

// uint32 updated_at = 4;
inline void PActivity_PUserInActivity_PChannelsInUser::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PChannelsInUser.updated_at)
  return _internal_updated_at();
}
inline void PActivity_PUserInActivity_PChannelsInUser::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PActivity_PUserInActivity_PChannelsInUser::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PChannelsInUser.updated_at)
}

// uint32 user_id = 5;
inline void PActivity_PUserInActivity_PChannelsInUser::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PChannelsInUser.user_id)
  return _internal_user_id();
}
inline void PActivity_PUserInActivity_PChannelsInUser::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PActivity_PUserInActivity_PChannelsInUser::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PChannelsInUser.user_id)
}

// uint32 count = 6;
inline void PActivity_PUserInActivity_PChannelsInUser::clear_count() {
  count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PChannelsInUser::count() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PChannelsInUser.count)
  return _internal_count();
}
inline void PActivity_PUserInActivity_PChannelsInUser::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  count_ = value;
}
inline void PActivity_PUserInActivity_PChannelsInUser::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PChannelsInUser.count)
}

// repeated .kandan_small.PActivity.PUserInActivity.PChannelsInUser.PAttachmentsInChannel attachments = 7;
inline int PActivity_PUserInActivity_PChannelsInUser::_internal_attachments_size() const {
  return attachments_.size();
}
inline int PActivity_PUserInActivity_PChannelsInUser::attachments_size() const {
  return _internal_attachments_size();
}
inline void PActivity_PUserInActivity_PChannelsInUser::clear_attachments() {
  attachments_.Clear();
}
inline ::kandan_small::PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel* PActivity_PUserInActivity_PChannelsInUser::mutable_attachments(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.PChannelsInUser.attachments)
  return attachments_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel >*
PActivity_PUserInActivity_PChannelsInUser::mutable_attachments() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PActivity.PUserInActivity.PChannelsInUser.attachments)
  return &attachments_;
}
inline const ::kandan_small::PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel& PActivity_PUserInActivity_PChannelsInUser::_internal_attachments(int index) const {
  return attachments_.Get(index);
}
inline const ::kandan_small::PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel& PActivity_PUserInActivity_PChannelsInUser::attachments(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PChannelsInUser.attachments)
  return _internal_attachments(index);
}
inline ::kandan_small::PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel* PActivity_PUserInActivity_PChannelsInUser::_internal_add_attachments() {
  return attachments_.Add();
}
inline ::kandan_small::PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel* PActivity_PUserInActivity_PChannelsInUser::add_attachments() {
  // @@protoc_insertion_point(field_add:kandan_small.PActivity.PUserInActivity.PChannelsInUser.attachments)
  return _internal_add_attachments();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PUserInActivity_PChannelsInUser_PAttachmentsInChannel >&
PActivity_PUserInActivity_PChannelsInUser::attachments() const {
  // @@protoc_insertion_point(field_list:kandan_small.PActivity.PUserInActivity.PChannelsInUser.attachments)
  return attachments_;
}

// -------------------------------------------------------------------

// PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment

// uint32 id = 1;
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment.id)
  return _internal_id();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment.id)
}

// string name = 2;
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment.name)
  return _internal_name();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment.name)
}
inline std::string* PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::mutable_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment.name)
  return _internal_mutable_name();
}
inline const std::string& PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::_internal_name() const {
  return name_.GetNoArena();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment.name)
}
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment.name)
}
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment.name)
}
inline std::string* PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::release_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment.name)
}

// uint32 created_at = 3;
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment.created_at)
  return _internal_created_at();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment.created_at)
}

// uint32 updated_at = 4;
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment.updated_at)
  return _internal_updated_at();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment.updated_at)
}

// uint32 user_id = 5;
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment.user_id)
  return _internal_user_id();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment.user_id)
}

// uint32 count = 6;
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::clear_count() {
  count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::count() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment.count)
  return _internal_count();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  count_ = value;
}
inline void PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment.count)
}

// -------------------------------------------------------------------

// PActivity_PUserInActivity_PAttachmentsInUser

// uint32 id = 1;
inline void PActivity_PUserInActivity_PAttachmentsInUser::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.id)
  return _internal_id();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.id)
}

// string file_file_name = 2;
inline void PActivity_PUserInActivity_PAttachmentsInUser::clear_file_file_name() {
  file_file_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PUserInActivity_PAttachmentsInUser::file_file_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.file_file_name)
  return _internal_file_file_name();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::set_file_file_name(const std::string& value) {
  _internal_set_file_file_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.file_file_name)
}
inline std::string* PActivity_PUserInActivity_PAttachmentsInUser::mutable_file_file_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.file_file_name)
  return _internal_mutable_file_file_name();
}
inline const std::string& PActivity_PUserInActivity_PAttachmentsInUser::_internal_file_file_name() const {
  return file_file_name_.GetNoArena();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::_internal_set_file_file_name(const std::string& value) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::set_file_file_name(std::string&& value) {
  
  file_file_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.file_file_name)
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::set_file_file_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.file_file_name)
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::set_file_file_name(const char* value, size_t size) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.file_file_name)
}
inline std::string* PActivity_PUserInActivity_PAttachmentsInUser::_internal_mutable_file_file_name() {
  
  return file_file_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PUserInActivity_PAttachmentsInUser::release_file_file_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.file_file_name)
  
  return file_file_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::set_allocated_file_file_name(std::string* file_file_name) {
  if (file_file_name != nullptr) {
    
  } else {
    
  }
  file_file_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_file_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.file_file_name)
}

// string file_content_type = 3;
inline void PActivity_PUserInActivity_PAttachmentsInUser::clear_file_content_type() {
  file_content_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PUserInActivity_PAttachmentsInUser::file_content_type() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.file_content_type)
  return _internal_file_content_type();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::set_file_content_type(const std::string& value) {
  _internal_set_file_content_type(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.file_content_type)
}
inline std::string* PActivity_PUserInActivity_PAttachmentsInUser::mutable_file_content_type() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.file_content_type)
  return _internal_mutable_file_content_type();
}
inline const std::string& PActivity_PUserInActivity_PAttachmentsInUser::_internal_file_content_type() const {
  return file_content_type_.GetNoArena();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::_internal_set_file_content_type(const std::string& value) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::set_file_content_type(std::string&& value) {
  
  file_content_type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.file_content_type)
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::set_file_content_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.file_content_type)
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::set_file_content_type(const char* value, size_t size) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.file_content_type)
}
inline std::string* PActivity_PUserInActivity_PAttachmentsInUser::_internal_mutable_file_content_type() {
  
  return file_content_type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PUserInActivity_PAttachmentsInUser::release_file_content_type() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.file_content_type)
  
  return file_content_type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::set_allocated_file_content_type(std::string* file_content_type) {
  if (file_content_type != nullptr) {
    
  } else {
    
  }
  file_content_type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_content_type);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.file_content_type)
}

// uint32 file_file_size = 4;
inline void PActivity_PUserInActivity_PAttachmentsInUser::clear_file_file_size() {
  file_file_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser::_internal_file_file_size() const {
  return file_file_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser::file_file_size() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.file_file_size)
  return _internal_file_file_size();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::_internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_file_size_ = value;
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_file_size(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.file_file_size)
}

// uint32 message_id = 5;
inline void PActivity_PUserInActivity_PAttachmentsInUser::clear_message_id() {
  message_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser::_internal_message_id() const {
  return message_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser::message_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.message_id)
  return _internal_message_id();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::_internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  message_id_ = value;
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.message_id)
}

// uint32 file_updated_at = 6;
inline void PActivity_PUserInActivity_PAttachmentsInUser::clear_file_updated_at() {
  file_updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser::_internal_file_updated_at() const {
  return file_updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser::file_updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.file_updated_at)
  return _internal_file_updated_at();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::_internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_updated_at_ = value;
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.file_updated_at)
}

// uint32 created_at = 7;
inline void PActivity_PUserInActivity_PAttachmentsInUser::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.created_at)
  return _internal_created_at();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.created_at)
}

// uint32 updated_at = 8;
inline void PActivity_PUserInActivity_PAttachmentsInUser::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.updated_at)
  return _internal_updated_at();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.updated_at)
}

// uint32 user_id = 9;
inline void PActivity_PUserInActivity_PAttachmentsInUser::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.user_id)
  return _internal_user_id();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.user_id)
}

// uint32 channel_id = 10;
inline void PActivity_PUserInActivity_PAttachmentsInUser::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity_PAttachmentsInUser::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.channel_id)
  return _internal_channel_id();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.channel_id)
}

// .kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.PChannelInAttachment channel = 11;
inline bool PActivity_PUserInActivity_PAttachmentsInUser::_internal_has_channel() const {
  return this != internal_default_instance() && channel_ != nullptr;
}
inline bool PActivity_PUserInActivity_PAttachmentsInUser::has_channel() const {
  return _internal_has_channel();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::clear_channel() {
  if (GetArenaNoVirtual() == nullptr && channel_ != nullptr) {
    delete channel_;
  }
  channel_ = nullptr;
}
inline const ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment& PActivity_PUserInActivity_PAttachmentsInUser::_internal_channel() const {
  const ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment* p = channel_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment*>(
      &::kandan_small::_PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment_default_instance_);
}
inline const ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment& PActivity_PUserInActivity_PAttachmentsInUser::channel() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.channel)
  return _internal_channel();
}
inline ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment* PActivity_PUserInActivity_PAttachmentsInUser::release_channel() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.channel)
  
  ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment* temp = channel_;
  channel_ = nullptr;
  return temp;
}
inline ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment* PActivity_PUserInActivity_PAttachmentsInUser::_internal_mutable_channel() {
  
  if (channel_ == nullptr) {
    auto* p = CreateMaybeMessage<::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment>(GetArenaNoVirtual());
    channel_ = p;
  }
  return channel_;
}
inline ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment* PActivity_PUserInActivity_PAttachmentsInUser::mutable_channel() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.channel)
  return _internal_mutable_channel();
}
inline void PActivity_PUserInActivity_PAttachmentsInUser::set_allocated_channel(::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser_PChannelInAttachment* channel) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete channel_;
  }
  if (channel) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      channel = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, channel, submessage_arena);
    }
    
  } else {
    
  }
  channel_ = channel;
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PUserInActivity.PAttachmentsInUser.channel)
}

// -------------------------------------------------------------------

// PActivity_PUserInActivity

// uint32 id = 1;
inline void PActivity_PUserInActivity::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.id)
  return _internal_id();
}
inline void PActivity_PUserInActivity::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PActivity_PUserInActivity::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.id)
}

// string email = 2;
inline void PActivity_PUserInActivity::clear_email() {
  email_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PUserInActivity::email() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.email)
  return _internal_email();
}
inline void PActivity_PUserInActivity::set_email(const std::string& value) {
  _internal_set_email(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.email)
}
inline std::string* PActivity_PUserInActivity::mutable_email() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.email)
  return _internal_mutable_email();
}
inline const std::string& PActivity_PUserInActivity::_internal_email() const {
  return email_.GetNoArena();
}
inline void PActivity_PUserInActivity::_internal_set_email(const std::string& value) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PUserInActivity::set_email(std::string&& value) {
  
  email_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PUserInActivity.email)
}
inline void PActivity_PUserInActivity::set_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PUserInActivity.email)
}
inline void PActivity_PUserInActivity::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PUserInActivity.email)
}
inline std::string* PActivity_PUserInActivity::_internal_mutable_email() {
  
  return email_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PUserInActivity::release_email() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PUserInActivity.email)
  
  return email_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PUserInActivity::set_allocated_email(std::string* email) {
  if (email != nullptr) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PUserInActivity.email)
}

// string encrypted_password = 3;
inline void PActivity_PUserInActivity::clear_encrypted_password() {
  encrypted_password_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PUserInActivity::encrypted_password() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.encrypted_password)
  return _internal_encrypted_password();
}
inline void PActivity_PUserInActivity::set_encrypted_password(const std::string& value) {
  _internal_set_encrypted_password(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.encrypted_password)
}
inline std::string* PActivity_PUserInActivity::mutable_encrypted_password() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.encrypted_password)
  return _internal_mutable_encrypted_password();
}
inline const std::string& PActivity_PUserInActivity::_internal_encrypted_password() const {
  return encrypted_password_.GetNoArena();
}
inline void PActivity_PUserInActivity::_internal_set_encrypted_password(const std::string& value) {
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PUserInActivity::set_encrypted_password(std::string&& value) {
  
  encrypted_password_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PUserInActivity.encrypted_password)
}
inline void PActivity_PUserInActivity::set_encrypted_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PUserInActivity.encrypted_password)
}
inline void PActivity_PUserInActivity::set_encrypted_password(const char* value, size_t size) {
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PUserInActivity.encrypted_password)
}
inline std::string* PActivity_PUserInActivity::_internal_mutable_encrypted_password() {
  
  return encrypted_password_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PUserInActivity::release_encrypted_password() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PUserInActivity.encrypted_password)
  
  return encrypted_password_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PUserInActivity::set_allocated_encrypted_password(std::string* encrypted_password) {
  if (encrypted_password != nullptr) {
    
  } else {
    
  }
  encrypted_password_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), encrypted_password);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PUserInActivity.encrypted_password)
}

// string reset_password_token = 4;
inline void PActivity_PUserInActivity::clear_reset_password_token() {
  reset_password_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PUserInActivity::reset_password_token() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.reset_password_token)
  return _internal_reset_password_token();
}
inline void PActivity_PUserInActivity::set_reset_password_token(const std::string& value) {
  _internal_set_reset_password_token(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.reset_password_token)
}
inline std::string* PActivity_PUserInActivity::mutable_reset_password_token() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.reset_password_token)
  return _internal_mutable_reset_password_token();
}
inline const std::string& PActivity_PUserInActivity::_internal_reset_password_token() const {
  return reset_password_token_.GetNoArena();
}
inline void PActivity_PUserInActivity::_internal_set_reset_password_token(const std::string& value) {
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PUserInActivity::set_reset_password_token(std::string&& value) {
  
  reset_password_token_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PUserInActivity.reset_password_token)
}
inline void PActivity_PUserInActivity::set_reset_password_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PUserInActivity.reset_password_token)
}
inline void PActivity_PUserInActivity::set_reset_password_token(const char* value, size_t size) {
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PUserInActivity.reset_password_token)
}
inline std::string* PActivity_PUserInActivity::_internal_mutable_reset_password_token() {
  
  return reset_password_token_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PUserInActivity::release_reset_password_token() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PUserInActivity.reset_password_token)
  
  return reset_password_token_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PUserInActivity::set_allocated_reset_password_token(std::string* reset_password_token) {
  if (reset_password_token != nullptr) {
    
  } else {
    
  }
  reset_password_token_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reset_password_token);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PUserInActivity.reset_password_token)
}

// uint32 reset_password_sent_at = 5;
inline void PActivity_PUserInActivity::clear_reset_password_sent_at() {
  reset_password_sent_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity::_internal_reset_password_sent_at() const {
  return reset_password_sent_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity::reset_password_sent_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.reset_password_sent_at)
  return _internal_reset_password_sent_at();
}
inline void PActivity_PUserInActivity::_internal_set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  reset_password_sent_at_ = value;
}
inline void PActivity_PUserInActivity::set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reset_password_sent_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.reset_password_sent_at)
}

// uint32 remember_created_at = 6;
inline void PActivity_PUserInActivity::clear_remember_created_at() {
  remember_created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity::_internal_remember_created_at() const {
  return remember_created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity::remember_created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.remember_created_at)
  return _internal_remember_created_at();
}
inline void PActivity_PUserInActivity::_internal_set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  remember_created_at_ = value;
}
inline void PActivity_PUserInActivity::set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_remember_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.remember_created_at)
}

// string first_name = 7;
inline void PActivity_PUserInActivity::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PUserInActivity::first_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.first_name)
  return _internal_first_name();
}
inline void PActivity_PUserInActivity::set_first_name(const std::string& value) {
  _internal_set_first_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.first_name)
}
inline std::string* PActivity_PUserInActivity::mutable_first_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.first_name)
  return _internal_mutable_first_name();
}
inline const std::string& PActivity_PUserInActivity::_internal_first_name() const {
  return first_name_.GetNoArena();
}
inline void PActivity_PUserInActivity::_internal_set_first_name(const std::string& value) {
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PUserInActivity::set_first_name(std::string&& value) {
  
  first_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PUserInActivity.first_name)
}
inline void PActivity_PUserInActivity::set_first_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PUserInActivity.first_name)
}
inline void PActivity_PUserInActivity::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PUserInActivity.first_name)
}
inline std::string* PActivity_PUserInActivity::_internal_mutable_first_name() {
  
  return first_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PUserInActivity::release_first_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PUserInActivity.first_name)
  
  return first_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PUserInActivity::set_allocated_first_name(std::string* first_name) {
  if (first_name != nullptr) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PUserInActivity.first_name)
}

// string last_name = 8;
inline void PActivity_PUserInActivity::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PUserInActivity::last_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.last_name)
  return _internal_last_name();
}
inline void PActivity_PUserInActivity::set_last_name(const std::string& value) {
  _internal_set_last_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.last_name)
}
inline std::string* PActivity_PUserInActivity::mutable_last_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.last_name)
  return _internal_mutable_last_name();
}
inline const std::string& PActivity_PUserInActivity::_internal_last_name() const {
  return last_name_.GetNoArena();
}
inline void PActivity_PUserInActivity::_internal_set_last_name(const std::string& value) {
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PUserInActivity::set_last_name(std::string&& value) {
  
  last_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PUserInActivity.last_name)
}
inline void PActivity_PUserInActivity::set_last_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PUserInActivity.last_name)
}
inline void PActivity_PUserInActivity::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PUserInActivity.last_name)
}
inline std::string* PActivity_PUserInActivity::_internal_mutable_last_name() {
  
  return last_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PUserInActivity::release_last_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PUserInActivity.last_name)
  
  return last_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PUserInActivity::set_allocated_last_name(std::string* last_name) {
  if (last_name != nullptr) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PUserInActivity.last_name)
}

// uint32 signin_count = 9;
inline void PActivity_PUserInActivity::clear_signin_count() {
  signin_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity::_internal_signin_count() const {
  return signin_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity::signin_count() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.signin_count)
  return _internal_signin_count();
}
inline void PActivity_PUserInActivity::_internal_set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  signin_count_ = value;
}
inline void PActivity_PUserInActivity::set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_signin_count(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.signin_count)
}

// uint32 current_sign_in_at = 10;
inline void PActivity_PUserInActivity::clear_current_sign_in_at() {
  current_sign_in_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity::_internal_current_sign_in_at() const {
  return current_sign_in_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity::current_sign_in_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.current_sign_in_at)
  return _internal_current_sign_in_at();
}
inline void PActivity_PUserInActivity::_internal_set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  current_sign_in_at_ = value;
}
inline void PActivity_PUserInActivity::set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_current_sign_in_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.current_sign_in_at)
}

// string current_sign_in_ip = 11;
inline void PActivity_PUserInActivity::clear_current_sign_in_ip() {
  current_sign_in_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PUserInActivity::current_sign_in_ip() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.current_sign_in_ip)
  return _internal_current_sign_in_ip();
}
inline void PActivity_PUserInActivity::set_current_sign_in_ip(const std::string& value) {
  _internal_set_current_sign_in_ip(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.current_sign_in_ip)
}
inline std::string* PActivity_PUserInActivity::mutable_current_sign_in_ip() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.current_sign_in_ip)
  return _internal_mutable_current_sign_in_ip();
}
inline const std::string& PActivity_PUserInActivity::_internal_current_sign_in_ip() const {
  return current_sign_in_ip_.GetNoArena();
}
inline void PActivity_PUserInActivity::_internal_set_current_sign_in_ip(const std::string& value) {
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PUserInActivity::set_current_sign_in_ip(std::string&& value) {
  
  current_sign_in_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PUserInActivity.current_sign_in_ip)
}
inline void PActivity_PUserInActivity::set_current_sign_in_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PUserInActivity.current_sign_in_ip)
}
inline void PActivity_PUserInActivity::set_current_sign_in_ip(const char* value, size_t size) {
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PUserInActivity.current_sign_in_ip)
}
inline std::string* PActivity_PUserInActivity::_internal_mutable_current_sign_in_ip() {
  
  return current_sign_in_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PUserInActivity::release_current_sign_in_ip() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PUserInActivity.current_sign_in_ip)
  
  return current_sign_in_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PUserInActivity::set_allocated_current_sign_in_ip(std::string* current_sign_in_ip) {
  if (current_sign_in_ip != nullptr) {
    
  } else {
    
  }
  current_sign_in_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), current_sign_in_ip);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PUserInActivity.current_sign_in_ip)
}

// uint32 last_sign_in_at = 12;
inline void PActivity_PUserInActivity::clear_last_sign_in_at() {
  last_sign_in_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity::_internal_last_sign_in_at() const {
  return last_sign_in_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity::last_sign_in_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.last_sign_in_at)
  return _internal_last_sign_in_at();
}
inline void PActivity_PUserInActivity::_internal_set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  last_sign_in_at_ = value;
}
inline void PActivity_PUserInActivity::set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_sign_in_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.last_sign_in_at)
}

// string last_sign_in_ip = 13;
inline void PActivity_PUserInActivity::clear_last_sign_in_ip() {
  last_sign_in_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PUserInActivity::last_sign_in_ip() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.last_sign_in_ip)
  return _internal_last_sign_in_ip();
}
inline void PActivity_PUserInActivity::set_last_sign_in_ip(const std::string& value) {
  _internal_set_last_sign_in_ip(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.last_sign_in_ip)
}
inline std::string* PActivity_PUserInActivity::mutable_last_sign_in_ip() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.last_sign_in_ip)
  return _internal_mutable_last_sign_in_ip();
}
inline const std::string& PActivity_PUserInActivity::_internal_last_sign_in_ip() const {
  return last_sign_in_ip_.GetNoArena();
}
inline void PActivity_PUserInActivity::_internal_set_last_sign_in_ip(const std::string& value) {
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PUserInActivity::set_last_sign_in_ip(std::string&& value) {
  
  last_sign_in_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PUserInActivity.last_sign_in_ip)
}
inline void PActivity_PUserInActivity::set_last_sign_in_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PUserInActivity.last_sign_in_ip)
}
inline void PActivity_PUserInActivity::set_last_sign_in_ip(const char* value, size_t size) {
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PUserInActivity.last_sign_in_ip)
}
inline std::string* PActivity_PUserInActivity::_internal_mutable_last_sign_in_ip() {
  
  return last_sign_in_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PUserInActivity::release_last_sign_in_ip() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PUserInActivity.last_sign_in_ip)
  
  return last_sign_in_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PUserInActivity::set_allocated_last_sign_in_ip(std::string* last_sign_in_ip) {
  if (last_sign_in_ip != nullptr) {
    
  } else {
    
  }
  last_sign_in_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_sign_in_ip);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PUserInActivity.last_sign_in_ip)
}

// string auth_token = 14;
inline void PActivity_PUserInActivity::clear_auth_token() {
  auth_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PUserInActivity::auth_token() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.auth_token)
  return _internal_auth_token();
}
inline void PActivity_PUserInActivity::set_auth_token(const std::string& value) {
  _internal_set_auth_token(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.auth_token)
}
inline std::string* PActivity_PUserInActivity::mutable_auth_token() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.auth_token)
  return _internal_mutable_auth_token();
}
inline const std::string& PActivity_PUserInActivity::_internal_auth_token() const {
  return auth_token_.GetNoArena();
}
inline void PActivity_PUserInActivity::_internal_set_auth_token(const std::string& value) {
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PUserInActivity::set_auth_token(std::string&& value) {
  
  auth_token_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PUserInActivity.auth_token)
}
inline void PActivity_PUserInActivity::set_auth_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PUserInActivity.auth_token)
}
inline void PActivity_PUserInActivity::set_auth_token(const char* value, size_t size) {
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PUserInActivity.auth_token)
}
inline std::string* PActivity_PUserInActivity::_internal_mutable_auth_token() {
  
  return auth_token_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PUserInActivity::release_auth_token() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PUserInActivity.auth_token)
  
  return auth_token_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PUserInActivity::set_allocated_auth_token(std::string* auth_token) {
  if (auth_token != nullptr) {
    
  } else {
    
  }
  auth_token_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), auth_token);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PUserInActivity.auth_token)
}

// string locale = 15;
inline void PActivity_PUserInActivity::clear_locale() {
  locale_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PUserInActivity::locale() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.locale)
  return _internal_locale();
}
inline void PActivity_PUserInActivity::set_locale(const std::string& value) {
  _internal_set_locale(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.locale)
}
inline std::string* PActivity_PUserInActivity::mutable_locale() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.locale)
  return _internal_mutable_locale();
}
inline const std::string& PActivity_PUserInActivity::_internal_locale() const {
  return locale_.GetNoArena();
}
inline void PActivity_PUserInActivity::_internal_set_locale(const std::string& value) {
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PUserInActivity::set_locale(std::string&& value) {
  
  locale_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PUserInActivity.locale)
}
inline void PActivity_PUserInActivity::set_locale(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PUserInActivity.locale)
}
inline void PActivity_PUserInActivity::set_locale(const char* value, size_t size) {
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PUserInActivity.locale)
}
inline std::string* PActivity_PUserInActivity::_internal_mutable_locale() {
  
  return locale_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PUserInActivity::release_locale() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PUserInActivity.locale)
  
  return locale_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PUserInActivity::set_allocated_locale(std::string* locale) {
  if (locale != nullptr) {
    
  } else {
    
  }
  locale_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), locale);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PUserInActivity.locale)
}

// string gravatar_hash = 16;
inline void PActivity_PUserInActivity::clear_gravatar_hash() {
  gravatar_hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PUserInActivity::gravatar_hash() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.gravatar_hash)
  return _internal_gravatar_hash();
}
inline void PActivity_PUserInActivity::set_gravatar_hash(const std::string& value) {
  _internal_set_gravatar_hash(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.gravatar_hash)
}
inline std::string* PActivity_PUserInActivity::mutable_gravatar_hash() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.gravatar_hash)
  return _internal_mutable_gravatar_hash();
}
inline const std::string& PActivity_PUserInActivity::_internal_gravatar_hash() const {
  return gravatar_hash_.GetNoArena();
}
inline void PActivity_PUserInActivity::_internal_set_gravatar_hash(const std::string& value) {
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PUserInActivity::set_gravatar_hash(std::string&& value) {
  
  gravatar_hash_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PUserInActivity.gravatar_hash)
}
inline void PActivity_PUserInActivity::set_gravatar_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PUserInActivity.gravatar_hash)
}
inline void PActivity_PUserInActivity::set_gravatar_hash(const char* value, size_t size) {
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PUserInActivity.gravatar_hash)
}
inline std::string* PActivity_PUserInActivity::_internal_mutable_gravatar_hash() {
  
  return gravatar_hash_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PUserInActivity::release_gravatar_hash() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PUserInActivity.gravatar_hash)
  
  return gravatar_hash_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PUserInActivity::set_allocated_gravatar_hash(std::string* gravatar_hash) {
  if (gravatar_hash != nullptr) {
    
  } else {
    
  }
  gravatar_hash_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gravatar_hash);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PUserInActivity.gravatar_hash)
}

// string username = 17;
inline void PActivity_PUserInActivity::clear_username() {
  username_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PUserInActivity::username() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.username)
  return _internal_username();
}
inline void PActivity_PUserInActivity::set_username(const std::string& value) {
  _internal_set_username(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.username)
}
inline std::string* PActivity_PUserInActivity::mutable_username() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.username)
  return _internal_mutable_username();
}
inline const std::string& PActivity_PUserInActivity::_internal_username() const {
  return username_.GetNoArena();
}
inline void PActivity_PUserInActivity::_internal_set_username(const std::string& value) {
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PUserInActivity::set_username(std::string&& value) {
  
  username_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PUserInActivity.username)
}
inline void PActivity_PUserInActivity::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PUserInActivity.username)
}
inline void PActivity_PUserInActivity::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PUserInActivity.username)
}
inline std::string* PActivity_PUserInActivity::_internal_mutable_username() {
  
  return username_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PUserInActivity::release_username() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PUserInActivity.username)
  
  return username_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PUserInActivity::set_allocated_username(std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PUserInActivity.username)
}

// string regstatus = 18;
inline void PActivity_PUserInActivity::clear_regstatus() {
  regstatus_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PUserInActivity::regstatus() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.regstatus)
  return _internal_regstatus();
}
inline void PActivity_PUserInActivity::set_regstatus(const std::string& value) {
  _internal_set_regstatus(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.regstatus)
}
inline std::string* PActivity_PUserInActivity::mutable_regstatus() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.regstatus)
  return _internal_mutable_regstatus();
}
inline const std::string& PActivity_PUserInActivity::_internal_regstatus() const {
  return regstatus_.GetNoArena();
}
inline void PActivity_PUserInActivity::_internal_set_regstatus(const std::string& value) {
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PUserInActivity::set_regstatus(std::string&& value) {
  
  regstatus_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PUserInActivity.regstatus)
}
inline void PActivity_PUserInActivity::set_regstatus(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PUserInActivity.regstatus)
}
inline void PActivity_PUserInActivity::set_regstatus(const char* value, size_t size) {
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PUserInActivity.regstatus)
}
inline std::string* PActivity_PUserInActivity::_internal_mutable_regstatus() {
  
  return regstatus_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PUserInActivity::release_regstatus() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PUserInActivity.regstatus)
  
  return regstatus_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PUserInActivity::set_allocated_regstatus(std::string* regstatus) {
  if (regstatus != nullptr) {
    
  } else {
    
  }
  regstatus_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), regstatus);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PUserInActivity.regstatus)
}

// bool active = 19;
inline void PActivity_PUserInActivity::clear_active() {
  active_ = false;
}
inline bool PActivity_PUserInActivity::_internal_active() const {
  return active_;
}
inline bool PActivity_PUserInActivity::active() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.active)
  return _internal_active();
}
inline void PActivity_PUserInActivity::_internal_set_active(bool value) {
  
  active_ = value;
}
inline void PActivity_PUserInActivity::set_active(bool value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.active)
}

// bool is_admin = 20;
inline void PActivity_PUserInActivity::clear_is_admin() {
  is_admin_ = false;
}
inline bool PActivity_PUserInActivity::_internal_is_admin() const {
  return is_admin_;
}
inline bool PActivity_PUserInActivity::is_admin() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.is_admin)
  return _internal_is_admin();
}
inline void PActivity_PUserInActivity::_internal_set_is_admin(bool value) {
  
  is_admin_ = value;
}
inline void PActivity_PUserInActivity::set_is_admin(bool value) {
  _internal_set_is_admin(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.is_admin)
}

// string avatar_url = 21;
inline void PActivity_PUserInActivity::clear_avatar_url() {
  avatar_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity_PUserInActivity::avatar_url() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.avatar_url)
  return _internal_avatar_url();
}
inline void PActivity_PUserInActivity::set_avatar_url(const std::string& value) {
  _internal_set_avatar_url(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.avatar_url)
}
inline std::string* PActivity_PUserInActivity::mutable_avatar_url() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.avatar_url)
  return _internal_mutable_avatar_url();
}
inline const std::string& PActivity_PUserInActivity::_internal_avatar_url() const {
  return avatar_url_.GetNoArena();
}
inline void PActivity_PUserInActivity::_internal_set_avatar_url(const std::string& value) {
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity_PUserInActivity::set_avatar_url(std::string&& value) {
  
  avatar_url_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.PUserInActivity.avatar_url)
}
inline void PActivity_PUserInActivity::set_avatar_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.PUserInActivity.avatar_url)
}
inline void PActivity_PUserInActivity::set_avatar_url(const char* value, size_t size) {
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.PUserInActivity.avatar_url)
}
inline std::string* PActivity_PUserInActivity::_internal_mutable_avatar_url() {
  
  return avatar_url_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity_PUserInActivity::release_avatar_url() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.PUserInActivity.avatar_url)
  
  return avatar_url_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity_PUserInActivity::set_allocated_avatar_url(std::string* avatar_url) {
  if (avatar_url != nullptr) {
    
  } else {
    
  }
  avatar_url_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar_url);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.PUserInActivity.avatar_url)
}

// uint32 created_at = 22;
inline void PActivity_PUserInActivity::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.created_at)
  return _internal_created_at();
}
inline void PActivity_PUserInActivity::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PActivity_PUserInActivity::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.created_at)
}

// uint32 updated_at = 23;
inline void PActivity_PUserInActivity::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity_PUserInActivity::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.updated_at)
  return _internal_updated_at();
}
inline void PActivity_PUserInActivity::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PActivity_PUserInActivity::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.PUserInActivity.updated_at)
}

// repeated .kandan_small.PActivity.PUserInActivity.PChannelsInUser channels = 24;
inline int PActivity_PUserInActivity::_internal_channels_size() const {
  return channels_.size();
}
inline int PActivity_PUserInActivity::channels_size() const {
  return _internal_channels_size();
}
inline void PActivity_PUserInActivity::clear_channels() {
  channels_.Clear();
}
inline ::kandan_small::PActivity_PUserInActivity_PChannelsInUser* PActivity_PUserInActivity::mutable_channels(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.channels)
  return channels_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PUserInActivity_PChannelsInUser >*
PActivity_PUserInActivity::mutable_channels() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PActivity.PUserInActivity.channels)
  return &channels_;
}
inline const ::kandan_small::PActivity_PUserInActivity_PChannelsInUser& PActivity_PUserInActivity::_internal_channels(int index) const {
  return channels_.Get(index);
}
inline const ::kandan_small::PActivity_PUserInActivity_PChannelsInUser& PActivity_PUserInActivity::channels(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.channels)
  return _internal_channels(index);
}
inline ::kandan_small::PActivity_PUserInActivity_PChannelsInUser* PActivity_PUserInActivity::_internal_add_channels() {
  return channels_.Add();
}
inline ::kandan_small::PActivity_PUserInActivity_PChannelsInUser* PActivity_PUserInActivity::add_channels() {
  // @@protoc_insertion_point(field_add:kandan_small.PActivity.PUserInActivity.channels)
  return _internal_add_channels();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PUserInActivity_PChannelsInUser >&
PActivity_PUserInActivity::channels() const {
  // @@protoc_insertion_point(field_list:kandan_small.PActivity.PUserInActivity.channels)
  return channels_;
}

// repeated .kandan_small.PActivity.PUserInActivity.PAttachmentsInUser attachments = 25;
inline int PActivity_PUserInActivity::_internal_attachments_size() const {
  return attachments_.size();
}
inline int PActivity_PUserInActivity::attachments_size() const {
  return _internal_attachments_size();
}
inline void PActivity_PUserInActivity::clear_attachments() {
  attachments_.Clear();
}
inline ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser* PActivity_PUserInActivity::mutable_attachments(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.PUserInActivity.attachments)
  return attachments_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser >*
PActivity_PUserInActivity::mutable_attachments() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PActivity.PUserInActivity.attachments)
  return &attachments_;
}
inline const ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser& PActivity_PUserInActivity::_internal_attachments(int index) const {
  return attachments_.Get(index);
}
inline const ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser& PActivity_PUserInActivity::attachments(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.PUserInActivity.attachments)
  return _internal_attachments(index);
}
inline ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser* PActivity_PUserInActivity::_internal_add_attachments() {
  return attachments_.Add();
}
inline ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser* PActivity_PUserInActivity::add_attachments() {
  // @@protoc_insertion_point(field_add:kandan_small.PActivity.PUserInActivity.attachments)
  return _internal_add_attachments();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity_PUserInActivity_PAttachmentsInUser >&
PActivity_PUserInActivity::attachments() const {
  // @@protoc_insertion_point(field_list:kandan_small.PActivity.PUserInActivity.attachments)
  return attachments_;
}

// -------------------------------------------------------------------

// PActivity

// uint32 id = 1;
inline void PActivity::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.id)
  return _internal_id();
}
inline void PActivity::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PActivity::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.id)
}

// uint32 created_at = 2;
inline void PActivity::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.created_at)
  return _internal_created_at();
}
inline void PActivity::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PActivity::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.created_at)
}

// uint32 updated_at = 3;
inline void PActivity::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.updated_at)
  return _internal_updated_at();
}
inline void PActivity::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PActivity::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.updated_at)
}

// string action = 4;
inline void PActivity::clear_action() {
  action_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity::action() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.action)
  return _internal_action();
}
inline void PActivity::set_action(const std::string& value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.action)
}
inline std::string* PActivity::mutable_action() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.action)
  return _internal_mutable_action();
}
inline const std::string& PActivity::_internal_action() const {
  return action_.GetNoArena();
}
inline void PActivity::_internal_set_action(const std::string& value) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity::set_action(std::string&& value) {
  
  action_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.action)
}
inline void PActivity::set_action(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.action)
}
inline void PActivity::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.action)
}
inline std::string* PActivity::_internal_mutable_action() {
  
  return action_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity::release_action() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.action)
  
  return action_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity::set_allocated_action(std::string* action) {
  if (action != nullptr) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.action)
}

// string content = 5;
inline void PActivity::clear_content() {
  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PActivity::content() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.content)
  return _internal_content();
}
inline void PActivity::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.content)
}
inline std::string* PActivity::mutable_content() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.content)
  return _internal_mutable_content();
}
inline const std::string& PActivity::_internal_content() const {
  return content_.GetNoArena();
}
inline void PActivity::_internal_set_content(const std::string& value) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PActivity::set_content(std::string&& value) {
  
  content_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PActivity.content)
}
inline void PActivity::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PActivity.content)
}
inline void PActivity::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PActivity.content)
}
inline std::string* PActivity::_internal_mutable_content() {
  
  return content_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PActivity::release_content() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.content)
  
  return content_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PActivity::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.content)
}

// uint32 channel_id = 6;
inline void PActivity::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.channel_id)
  return _internal_channel_id();
}
inline void PActivity::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PActivity::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.channel_id)
}

// uint32 user_id = 7;
inline void PActivity::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PActivity::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.user_id)
  return _internal_user_id();
}
inline void PActivity::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PActivity::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PActivity.user_id)
}

// .kandan_small.PActivity.PChannelInActivity channel = 8;
inline bool PActivity::_internal_has_channel() const {
  return this != internal_default_instance() && channel_ != nullptr;
}
inline bool PActivity::has_channel() const {
  return _internal_has_channel();
}
inline void PActivity::clear_channel() {
  if (GetArenaNoVirtual() == nullptr && channel_ != nullptr) {
    delete channel_;
  }
  channel_ = nullptr;
}
inline const ::kandan_small::PActivity_PChannelInActivity& PActivity::_internal_channel() const {
  const ::kandan_small::PActivity_PChannelInActivity* p = channel_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kandan_small::PActivity_PChannelInActivity*>(
      &::kandan_small::_PActivity_PChannelInActivity_default_instance_);
}
inline const ::kandan_small::PActivity_PChannelInActivity& PActivity::channel() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.channel)
  return _internal_channel();
}
inline ::kandan_small::PActivity_PChannelInActivity* PActivity::release_channel() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.channel)
  
  ::kandan_small::PActivity_PChannelInActivity* temp = channel_;
  channel_ = nullptr;
  return temp;
}
inline ::kandan_small::PActivity_PChannelInActivity* PActivity::_internal_mutable_channel() {
  
  if (channel_ == nullptr) {
    auto* p = CreateMaybeMessage<::kandan_small::PActivity_PChannelInActivity>(GetArenaNoVirtual());
    channel_ = p;
  }
  return channel_;
}
inline ::kandan_small::PActivity_PChannelInActivity* PActivity::mutable_channel() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.channel)
  return _internal_mutable_channel();
}
inline void PActivity::set_allocated_channel(::kandan_small::PActivity_PChannelInActivity* channel) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete channel_;
  }
  if (channel) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      channel = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, channel, submessage_arena);
    }
    
  } else {
    
  }
  channel_ = channel;
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.channel)
}

// .kandan_small.PActivity.PUserInActivity user = 9;
inline bool PActivity::_internal_has_user() const {
  return this != internal_default_instance() && user_ != nullptr;
}
inline bool PActivity::has_user() const {
  return _internal_has_user();
}
inline void PActivity::clear_user() {
  if (GetArenaNoVirtual() == nullptr && user_ != nullptr) {
    delete user_;
  }
  user_ = nullptr;
}
inline const ::kandan_small::PActivity_PUserInActivity& PActivity::_internal_user() const {
  const ::kandan_small::PActivity_PUserInActivity* p = user_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kandan_small::PActivity_PUserInActivity*>(
      &::kandan_small::_PActivity_PUserInActivity_default_instance_);
}
inline const ::kandan_small::PActivity_PUserInActivity& PActivity::user() const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivity.user)
  return _internal_user();
}
inline ::kandan_small::PActivity_PUserInActivity* PActivity::release_user() {
  // @@protoc_insertion_point(field_release:kandan_small.PActivity.user)
  
  ::kandan_small::PActivity_PUserInActivity* temp = user_;
  user_ = nullptr;
  return temp;
}
inline ::kandan_small::PActivity_PUserInActivity* PActivity::_internal_mutable_user() {
  
  if (user_ == nullptr) {
    auto* p = CreateMaybeMessage<::kandan_small::PActivity_PUserInActivity>(GetArenaNoVirtual());
    user_ = p;
  }
  return user_;
}
inline ::kandan_small::PActivity_PUserInActivity* PActivity::mutable_user() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivity.user)
  return _internal_mutable_user();
}
inline void PActivity::set_allocated_user(::kandan_small::PActivity_PUserInActivity* user) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete user_;
  }
  if (user) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      user = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user, submessage_arena);
    }
    
  } else {
    
  }
  user_ = user;
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PActivity.user)
}

// -------------------------------------------------------------------

// PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel

// uint32 id = 1;
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.id)
  return _internal_id();
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.id)
}

// uint32 created_at = 2;
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.created_at)
  return _internal_created_at();
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.created_at)
}

// uint32 updated_at = 3;
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.updated_at)
  return _internal_updated_at();
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.updated_at)
}

// string action = 4;
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::clear_action() {
  action_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::action() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.action)
  return _internal_action();
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::set_action(const std::string& value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.action)
}
inline std::string* PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::mutable_action() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.action)
  return _internal_mutable_action();
}
inline const std::string& PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::_internal_action() const {
  return action_.GetNoArena();
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::_internal_set_action(const std::string& value) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::set_action(std::string&& value) {
  
  action_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.action)
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::set_action(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.action)
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.action)
}
inline std::string* PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::_internal_mutable_action() {
  
  return action_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::release_action() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.action)
  
  return action_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::set_allocated_action(std::string* action) {
  if (action != nullptr) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.action)
}

// string content = 5;
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::clear_content() {
  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::content() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.content)
  return _internal_content();
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.content)
}
inline std::string* PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::mutable_content() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.content)
  return _internal_mutable_content();
}
inline const std::string& PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::_internal_content() const {
  return content_.GetNoArena();
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::_internal_set_content(const std::string& value) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::set_content(std::string&& value) {
  
  content_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.content)
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.content)
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.content)
}
inline std::string* PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::_internal_mutable_content() {
  
  return content_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::release_content() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.content)
  
  return content_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.content)
}

// uint32 channel_id = 6;
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.channel_id)
  return _internal_channel_id();
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.channel_id)
}

// uint32 user_id = 7;
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.user_id)
  return _internal_user_id();
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel.user_id)
}

// -------------------------------------------------------------------

// PAttachment_PUserInAttachment_PChannelsInUser

// uint32 id = 1;
inline void PAttachment_PUserInAttachment_PChannelsInUser::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PChannelsInUser::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PChannelsInUser::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.id)
  return _internal_id();
}
inline void PAttachment_PUserInAttachment_PChannelsInUser::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PAttachment_PUserInAttachment_PChannelsInUser::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.id)
}

// string name = 2;
inline void PAttachment_PUserInAttachment_PChannelsInUser::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PUserInAttachment_PChannelsInUser::name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.name)
  return _internal_name();
}
inline void PAttachment_PUserInAttachment_PChannelsInUser::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.name)
}
inline std::string* PAttachment_PUserInAttachment_PChannelsInUser::mutable_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.name)
  return _internal_mutable_name();
}
inline const std::string& PAttachment_PUserInAttachment_PChannelsInUser::_internal_name() const {
  return name_.GetNoArena();
}
inline void PAttachment_PUserInAttachment_PChannelsInUser::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PUserInAttachment_PChannelsInUser::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.name)
}
inline void PAttachment_PUserInAttachment_PChannelsInUser::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.name)
}
inline void PAttachment_PUserInAttachment_PChannelsInUser::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.name)
}
inline std::string* PAttachment_PUserInAttachment_PChannelsInUser::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PUserInAttachment_PChannelsInUser::release_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PUserInAttachment_PChannelsInUser::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.name)
}

// uint32 created_at = 3;
inline void PAttachment_PUserInAttachment_PChannelsInUser::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PChannelsInUser::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PChannelsInUser::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.created_at)
  return _internal_created_at();
}
inline void PAttachment_PUserInAttachment_PChannelsInUser::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PAttachment_PUserInAttachment_PChannelsInUser::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.created_at)
}

// uint32 updated_at = 4;
inline void PAttachment_PUserInAttachment_PChannelsInUser::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PChannelsInUser::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PChannelsInUser::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.updated_at)
  return _internal_updated_at();
}
inline void PAttachment_PUserInAttachment_PChannelsInUser::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PAttachment_PUserInAttachment_PChannelsInUser::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.updated_at)
}

// uint32 user_id = 5;
inline void PAttachment_PUserInAttachment_PChannelsInUser::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PChannelsInUser::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PChannelsInUser::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.user_id)
  return _internal_user_id();
}
inline void PAttachment_PUserInAttachment_PChannelsInUser::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PAttachment_PUserInAttachment_PChannelsInUser::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.user_id)
}

// uint32 count = 6;
inline void PAttachment_PUserInAttachment_PChannelsInUser::clear_count() {
  count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PChannelsInUser::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PChannelsInUser::count() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.count)
  return _internal_count();
}
inline void PAttachment_PUserInAttachment_PChannelsInUser::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  count_ = value;
}
inline void PAttachment_PUserInAttachment_PChannelsInUser::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.count)
}

// repeated .kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.PActivitiesInChannel activities = 7;
inline int PAttachment_PUserInAttachment_PChannelsInUser::_internal_activities_size() const {
  return activities_.size();
}
inline int PAttachment_PUserInAttachment_PChannelsInUser::activities_size() const {
  return _internal_activities_size();
}
inline void PAttachment_PUserInAttachment_PChannelsInUser::clear_activities() {
  activities_.Clear();
}
inline ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel* PAttachment_PUserInAttachment_PChannelsInUser::mutable_activities(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.activities)
  return activities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel >*
PAttachment_PUserInAttachment_PChannelsInUser::mutable_activities() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.activities)
  return &activities_;
}
inline const ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel& PAttachment_PUserInAttachment_PChannelsInUser::_internal_activities(int index) const {
  return activities_.Get(index);
}
inline const ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel& PAttachment_PUserInAttachment_PChannelsInUser::activities(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.activities)
  return _internal_activities(index);
}
inline ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel* PAttachment_PUserInAttachment_PChannelsInUser::_internal_add_activities() {
  return activities_.Add();
}
inline ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel* PAttachment_PUserInAttachment_PChannelsInUser::add_activities() {
  // @@protoc_insertion_point(field_add:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.activities)
  return _internal_add_activities();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser_PActivitiesInChannel >&
PAttachment_PUserInAttachment_PChannelsInUser::activities() const {
  // @@protoc_insertion_point(field_list:kandan_small.PAttachment.PUserInAttachment.PChannelsInUser.activities)
  return activities_;
}

// -------------------------------------------------------------------

// PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity

// uint32 id = 1;
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity.id)
  return _internal_id();
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity.id)
}

// string name = 2;
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity.name)
  return _internal_name();
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity.name)
}
inline std::string* PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::mutable_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity.name)
  return _internal_mutable_name();
}
inline const std::string& PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::_internal_name() const {
  return name_.GetNoArena();
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity.name)
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity.name)
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity.name)
}
inline std::string* PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::release_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity.name)
}

// uint32 created_at = 3;
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity.created_at)
  return _internal_created_at();
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity.created_at)
}

// uint32 updated_at = 4;
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity.updated_at)
  return _internal_updated_at();
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity.updated_at)
}

// uint32 user_id = 5;
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity.user_id)
  return _internal_user_id();
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity.user_id)
}

// uint32 count = 6;
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::clear_count() {
  count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::count() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity.count)
  return _internal_count();
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  count_ = value;
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity.count)
}

// -------------------------------------------------------------------

// PAttachment_PUserInAttachment_PActivitiesInUser

// uint32 id = 1;
inline void PAttachment_PUserInAttachment_PActivitiesInUser::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PActivitiesInUser::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PActivitiesInUser::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.id)
  return _internal_id();
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.id)
}

// uint32 created_at = 2;
inline void PAttachment_PUserInAttachment_PActivitiesInUser::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PActivitiesInUser::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PActivitiesInUser::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.created_at)
  return _internal_created_at();
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.created_at)
}

// uint32 updated_at = 3;
inline void PAttachment_PUserInAttachment_PActivitiesInUser::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PActivitiesInUser::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PActivitiesInUser::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.updated_at)
  return _internal_updated_at();
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.updated_at)
}

// string action = 4;
inline void PAttachment_PUserInAttachment_PActivitiesInUser::clear_action() {
  action_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PUserInAttachment_PActivitiesInUser::action() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.action)
  return _internal_action();
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::set_action(const std::string& value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.action)
}
inline std::string* PAttachment_PUserInAttachment_PActivitiesInUser::mutable_action() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.action)
  return _internal_mutable_action();
}
inline const std::string& PAttachment_PUserInAttachment_PActivitiesInUser::_internal_action() const {
  return action_.GetNoArena();
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::_internal_set_action(const std::string& value) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::set_action(std::string&& value) {
  
  action_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.action)
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::set_action(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.action)
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.action)
}
inline std::string* PAttachment_PUserInAttachment_PActivitiesInUser::_internal_mutable_action() {
  
  return action_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PUserInAttachment_PActivitiesInUser::release_action() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.action)
  
  return action_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::set_allocated_action(std::string* action) {
  if (action != nullptr) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.action)
}

// string content = 5;
inline void PAttachment_PUserInAttachment_PActivitiesInUser::clear_content() {
  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PUserInAttachment_PActivitiesInUser::content() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.content)
  return _internal_content();
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.content)
}
inline std::string* PAttachment_PUserInAttachment_PActivitiesInUser::mutable_content() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.content)
  return _internal_mutable_content();
}
inline const std::string& PAttachment_PUserInAttachment_PActivitiesInUser::_internal_content() const {
  return content_.GetNoArena();
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::_internal_set_content(const std::string& value) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::set_content(std::string&& value) {
  
  content_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.content)
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.content)
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.content)
}
inline std::string* PAttachment_PUserInAttachment_PActivitiesInUser::_internal_mutable_content() {
  
  return content_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PUserInAttachment_PActivitiesInUser::release_content() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.content)
  
  return content_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.content)
}

// uint32 channel_id = 6;
inline void PAttachment_PUserInAttachment_PActivitiesInUser::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PActivitiesInUser::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PActivitiesInUser::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.channel_id)
  return _internal_channel_id();
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.channel_id)
}

// uint32 user_id = 7;
inline void PAttachment_PUserInAttachment_PActivitiesInUser::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PActivitiesInUser::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment_PActivitiesInUser::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.user_id)
  return _internal_user_id();
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.user_id)
}

// .kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.PChannelInActivity channel = 8;
inline bool PAttachment_PUserInAttachment_PActivitiesInUser::_internal_has_channel() const {
  return this != internal_default_instance() && channel_ != nullptr;
}
inline bool PAttachment_PUserInAttachment_PActivitiesInUser::has_channel() const {
  return _internal_has_channel();
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::clear_channel() {
  if (GetArenaNoVirtual() == nullptr && channel_ != nullptr) {
    delete channel_;
  }
  channel_ = nullptr;
}
inline const ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity& PAttachment_PUserInAttachment_PActivitiesInUser::_internal_channel() const {
  const ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity* p = channel_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity*>(
      &::kandan_small::_PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity_default_instance_);
}
inline const ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity& PAttachment_PUserInAttachment_PActivitiesInUser::channel() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.channel)
  return _internal_channel();
}
inline ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity* PAttachment_PUserInAttachment_PActivitiesInUser::release_channel() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.channel)
  
  ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity* temp = channel_;
  channel_ = nullptr;
  return temp;
}
inline ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity* PAttachment_PUserInAttachment_PActivitiesInUser::_internal_mutable_channel() {
  
  if (channel_ == nullptr) {
    auto* p = CreateMaybeMessage<::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity>(GetArenaNoVirtual());
    channel_ = p;
  }
  return channel_;
}
inline ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity* PAttachment_PUserInAttachment_PActivitiesInUser::mutable_channel() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.channel)
  return _internal_mutable_channel();
}
inline void PAttachment_PUserInAttachment_PActivitiesInUser::set_allocated_channel(::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser_PChannelInActivity* channel) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete channel_;
  }
  if (channel) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      channel = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, channel, submessage_arena);
    }
    
  } else {
    
  }
  channel_ = channel;
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser.channel)
}

// -------------------------------------------------------------------

// PAttachment_PUserInAttachment

// uint32 id = 1;
inline void PAttachment_PUserInAttachment::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.id)
  return _internal_id();
}
inline void PAttachment_PUserInAttachment::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PAttachment_PUserInAttachment::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.id)
}

// string email = 2;
inline void PAttachment_PUserInAttachment::clear_email() {
  email_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PUserInAttachment::email() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.email)
  return _internal_email();
}
inline void PAttachment_PUserInAttachment::set_email(const std::string& value) {
  _internal_set_email(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.email)
}
inline std::string* PAttachment_PUserInAttachment::mutable_email() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.email)
  return _internal_mutable_email();
}
inline const std::string& PAttachment_PUserInAttachment::_internal_email() const {
  return email_.GetNoArena();
}
inline void PAttachment_PUserInAttachment::_internal_set_email(const std::string& value) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PUserInAttachment::set_email(std::string&& value) {
  
  email_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PUserInAttachment.email)
}
inline void PAttachment_PUserInAttachment::set_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PUserInAttachment.email)
}
inline void PAttachment_PUserInAttachment::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PUserInAttachment.email)
}
inline std::string* PAttachment_PUserInAttachment::_internal_mutable_email() {
  
  return email_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PUserInAttachment::release_email() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PUserInAttachment.email)
  
  return email_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PUserInAttachment::set_allocated_email(std::string* email) {
  if (email != nullptr) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PUserInAttachment.email)
}

// string encrypted_password = 3;
inline void PAttachment_PUserInAttachment::clear_encrypted_password() {
  encrypted_password_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PUserInAttachment::encrypted_password() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.encrypted_password)
  return _internal_encrypted_password();
}
inline void PAttachment_PUserInAttachment::set_encrypted_password(const std::string& value) {
  _internal_set_encrypted_password(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.encrypted_password)
}
inline std::string* PAttachment_PUserInAttachment::mutable_encrypted_password() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.encrypted_password)
  return _internal_mutable_encrypted_password();
}
inline const std::string& PAttachment_PUserInAttachment::_internal_encrypted_password() const {
  return encrypted_password_.GetNoArena();
}
inline void PAttachment_PUserInAttachment::_internal_set_encrypted_password(const std::string& value) {
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PUserInAttachment::set_encrypted_password(std::string&& value) {
  
  encrypted_password_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PUserInAttachment.encrypted_password)
}
inline void PAttachment_PUserInAttachment::set_encrypted_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PUserInAttachment.encrypted_password)
}
inline void PAttachment_PUserInAttachment::set_encrypted_password(const char* value, size_t size) {
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PUserInAttachment.encrypted_password)
}
inline std::string* PAttachment_PUserInAttachment::_internal_mutable_encrypted_password() {
  
  return encrypted_password_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PUserInAttachment::release_encrypted_password() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PUserInAttachment.encrypted_password)
  
  return encrypted_password_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PUserInAttachment::set_allocated_encrypted_password(std::string* encrypted_password) {
  if (encrypted_password != nullptr) {
    
  } else {
    
  }
  encrypted_password_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), encrypted_password);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PUserInAttachment.encrypted_password)
}

// string reset_password_token = 4;
inline void PAttachment_PUserInAttachment::clear_reset_password_token() {
  reset_password_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PUserInAttachment::reset_password_token() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.reset_password_token)
  return _internal_reset_password_token();
}
inline void PAttachment_PUserInAttachment::set_reset_password_token(const std::string& value) {
  _internal_set_reset_password_token(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.reset_password_token)
}
inline std::string* PAttachment_PUserInAttachment::mutable_reset_password_token() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.reset_password_token)
  return _internal_mutable_reset_password_token();
}
inline const std::string& PAttachment_PUserInAttachment::_internal_reset_password_token() const {
  return reset_password_token_.GetNoArena();
}
inline void PAttachment_PUserInAttachment::_internal_set_reset_password_token(const std::string& value) {
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PUserInAttachment::set_reset_password_token(std::string&& value) {
  
  reset_password_token_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PUserInAttachment.reset_password_token)
}
inline void PAttachment_PUserInAttachment::set_reset_password_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PUserInAttachment.reset_password_token)
}
inline void PAttachment_PUserInAttachment::set_reset_password_token(const char* value, size_t size) {
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PUserInAttachment.reset_password_token)
}
inline std::string* PAttachment_PUserInAttachment::_internal_mutable_reset_password_token() {
  
  return reset_password_token_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PUserInAttachment::release_reset_password_token() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PUserInAttachment.reset_password_token)
  
  return reset_password_token_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PUserInAttachment::set_allocated_reset_password_token(std::string* reset_password_token) {
  if (reset_password_token != nullptr) {
    
  } else {
    
  }
  reset_password_token_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reset_password_token);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PUserInAttachment.reset_password_token)
}

// uint32 reset_password_sent_at = 5;
inline void PAttachment_PUserInAttachment::clear_reset_password_sent_at() {
  reset_password_sent_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment::_internal_reset_password_sent_at() const {
  return reset_password_sent_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment::reset_password_sent_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.reset_password_sent_at)
  return _internal_reset_password_sent_at();
}
inline void PAttachment_PUserInAttachment::_internal_set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  reset_password_sent_at_ = value;
}
inline void PAttachment_PUserInAttachment::set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reset_password_sent_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.reset_password_sent_at)
}

// uint32 remember_created_at = 6;
inline void PAttachment_PUserInAttachment::clear_remember_created_at() {
  remember_created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment::_internal_remember_created_at() const {
  return remember_created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment::remember_created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.remember_created_at)
  return _internal_remember_created_at();
}
inline void PAttachment_PUserInAttachment::_internal_set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  remember_created_at_ = value;
}
inline void PAttachment_PUserInAttachment::set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_remember_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.remember_created_at)
}

// string first_name = 7;
inline void PAttachment_PUserInAttachment::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PUserInAttachment::first_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.first_name)
  return _internal_first_name();
}
inline void PAttachment_PUserInAttachment::set_first_name(const std::string& value) {
  _internal_set_first_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.first_name)
}
inline std::string* PAttachment_PUserInAttachment::mutable_first_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.first_name)
  return _internal_mutable_first_name();
}
inline const std::string& PAttachment_PUserInAttachment::_internal_first_name() const {
  return first_name_.GetNoArena();
}
inline void PAttachment_PUserInAttachment::_internal_set_first_name(const std::string& value) {
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PUserInAttachment::set_first_name(std::string&& value) {
  
  first_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PUserInAttachment.first_name)
}
inline void PAttachment_PUserInAttachment::set_first_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PUserInAttachment.first_name)
}
inline void PAttachment_PUserInAttachment::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PUserInAttachment.first_name)
}
inline std::string* PAttachment_PUserInAttachment::_internal_mutable_first_name() {
  
  return first_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PUserInAttachment::release_first_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PUserInAttachment.first_name)
  
  return first_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PUserInAttachment::set_allocated_first_name(std::string* first_name) {
  if (first_name != nullptr) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PUserInAttachment.first_name)
}

// string last_name = 8;
inline void PAttachment_PUserInAttachment::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PUserInAttachment::last_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.last_name)
  return _internal_last_name();
}
inline void PAttachment_PUserInAttachment::set_last_name(const std::string& value) {
  _internal_set_last_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.last_name)
}
inline std::string* PAttachment_PUserInAttachment::mutable_last_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.last_name)
  return _internal_mutable_last_name();
}
inline const std::string& PAttachment_PUserInAttachment::_internal_last_name() const {
  return last_name_.GetNoArena();
}
inline void PAttachment_PUserInAttachment::_internal_set_last_name(const std::string& value) {
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PUserInAttachment::set_last_name(std::string&& value) {
  
  last_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PUserInAttachment.last_name)
}
inline void PAttachment_PUserInAttachment::set_last_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PUserInAttachment.last_name)
}
inline void PAttachment_PUserInAttachment::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PUserInAttachment.last_name)
}
inline std::string* PAttachment_PUserInAttachment::_internal_mutable_last_name() {
  
  return last_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PUserInAttachment::release_last_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PUserInAttachment.last_name)
  
  return last_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PUserInAttachment::set_allocated_last_name(std::string* last_name) {
  if (last_name != nullptr) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PUserInAttachment.last_name)
}

// uint32 signin_count = 9;
inline void PAttachment_PUserInAttachment::clear_signin_count() {
  signin_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment::_internal_signin_count() const {
  return signin_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment::signin_count() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.signin_count)
  return _internal_signin_count();
}
inline void PAttachment_PUserInAttachment::_internal_set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  signin_count_ = value;
}
inline void PAttachment_PUserInAttachment::set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_signin_count(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.signin_count)
}

// uint32 current_sign_in_at = 10;
inline void PAttachment_PUserInAttachment::clear_current_sign_in_at() {
  current_sign_in_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment::_internal_current_sign_in_at() const {
  return current_sign_in_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment::current_sign_in_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.current_sign_in_at)
  return _internal_current_sign_in_at();
}
inline void PAttachment_PUserInAttachment::_internal_set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  current_sign_in_at_ = value;
}
inline void PAttachment_PUserInAttachment::set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_current_sign_in_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.current_sign_in_at)
}

// string current_sign_in_ip = 11;
inline void PAttachment_PUserInAttachment::clear_current_sign_in_ip() {
  current_sign_in_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PUserInAttachment::current_sign_in_ip() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.current_sign_in_ip)
  return _internal_current_sign_in_ip();
}
inline void PAttachment_PUserInAttachment::set_current_sign_in_ip(const std::string& value) {
  _internal_set_current_sign_in_ip(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.current_sign_in_ip)
}
inline std::string* PAttachment_PUserInAttachment::mutable_current_sign_in_ip() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.current_sign_in_ip)
  return _internal_mutable_current_sign_in_ip();
}
inline const std::string& PAttachment_PUserInAttachment::_internal_current_sign_in_ip() const {
  return current_sign_in_ip_.GetNoArena();
}
inline void PAttachment_PUserInAttachment::_internal_set_current_sign_in_ip(const std::string& value) {
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PUserInAttachment::set_current_sign_in_ip(std::string&& value) {
  
  current_sign_in_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PUserInAttachment.current_sign_in_ip)
}
inline void PAttachment_PUserInAttachment::set_current_sign_in_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PUserInAttachment.current_sign_in_ip)
}
inline void PAttachment_PUserInAttachment::set_current_sign_in_ip(const char* value, size_t size) {
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PUserInAttachment.current_sign_in_ip)
}
inline std::string* PAttachment_PUserInAttachment::_internal_mutable_current_sign_in_ip() {
  
  return current_sign_in_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PUserInAttachment::release_current_sign_in_ip() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PUserInAttachment.current_sign_in_ip)
  
  return current_sign_in_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PUserInAttachment::set_allocated_current_sign_in_ip(std::string* current_sign_in_ip) {
  if (current_sign_in_ip != nullptr) {
    
  } else {
    
  }
  current_sign_in_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), current_sign_in_ip);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PUserInAttachment.current_sign_in_ip)
}

// uint32 last_sign_in_at = 12;
inline void PAttachment_PUserInAttachment::clear_last_sign_in_at() {
  last_sign_in_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment::_internal_last_sign_in_at() const {
  return last_sign_in_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment::last_sign_in_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.last_sign_in_at)
  return _internal_last_sign_in_at();
}
inline void PAttachment_PUserInAttachment::_internal_set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  last_sign_in_at_ = value;
}
inline void PAttachment_PUserInAttachment::set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_sign_in_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.last_sign_in_at)
}

// string last_sign_in_ip = 13;
inline void PAttachment_PUserInAttachment::clear_last_sign_in_ip() {
  last_sign_in_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PUserInAttachment::last_sign_in_ip() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.last_sign_in_ip)
  return _internal_last_sign_in_ip();
}
inline void PAttachment_PUserInAttachment::set_last_sign_in_ip(const std::string& value) {
  _internal_set_last_sign_in_ip(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.last_sign_in_ip)
}
inline std::string* PAttachment_PUserInAttachment::mutable_last_sign_in_ip() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.last_sign_in_ip)
  return _internal_mutable_last_sign_in_ip();
}
inline const std::string& PAttachment_PUserInAttachment::_internal_last_sign_in_ip() const {
  return last_sign_in_ip_.GetNoArena();
}
inline void PAttachment_PUserInAttachment::_internal_set_last_sign_in_ip(const std::string& value) {
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PUserInAttachment::set_last_sign_in_ip(std::string&& value) {
  
  last_sign_in_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PUserInAttachment.last_sign_in_ip)
}
inline void PAttachment_PUserInAttachment::set_last_sign_in_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PUserInAttachment.last_sign_in_ip)
}
inline void PAttachment_PUserInAttachment::set_last_sign_in_ip(const char* value, size_t size) {
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PUserInAttachment.last_sign_in_ip)
}
inline std::string* PAttachment_PUserInAttachment::_internal_mutable_last_sign_in_ip() {
  
  return last_sign_in_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PUserInAttachment::release_last_sign_in_ip() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PUserInAttachment.last_sign_in_ip)
  
  return last_sign_in_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PUserInAttachment::set_allocated_last_sign_in_ip(std::string* last_sign_in_ip) {
  if (last_sign_in_ip != nullptr) {
    
  } else {
    
  }
  last_sign_in_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_sign_in_ip);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PUserInAttachment.last_sign_in_ip)
}

// string auth_token = 14;
inline void PAttachment_PUserInAttachment::clear_auth_token() {
  auth_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PUserInAttachment::auth_token() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.auth_token)
  return _internal_auth_token();
}
inline void PAttachment_PUserInAttachment::set_auth_token(const std::string& value) {
  _internal_set_auth_token(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.auth_token)
}
inline std::string* PAttachment_PUserInAttachment::mutable_auth_token() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.auth_token)
  return _internal_mutable_auth_token();
}
inline const std::string& PAttachment_PUserInAttachment::_internal_auth_token() const {
  return auth_token_.GetNoArena();
}
inline void PAttachment_PUserInAttachment::_internal_set_auth_token(const std::string& value) {
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PUserInAttachment::set_auth_token(std::string&& value) {
  
  auth_token_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PUserInAttachment.auth_token)
}
inline void PAttachment_PUserInAttachment::set_auth_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PUserInAttachment.auth_token)
}
inline void PAttachment_PUserInAttachment::set_auth_token(const char* value, size_t size) {
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PUserInAttachment.auth_token)
}
inline std::string* PAttachment_PUserInAttachment::_internal_mutable_auth_token() {
  
  return auth_token_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PUserInAttachment::release_auth_token() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PUserInAttachment.auth_token)
  
  return auth_token_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PUserInAttachment::set_allocated_auth_token(std::string* auth_token) {
  if (auth_token != nullptr) {
    
  } else {
    
  }
  auth_token_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), auth_token);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PUserInAttachment.auth_token)
}

// string locale = 15;
inline void PAttachment_PUserInAttachment::clear_locale() {
  locale_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PUserInAttachment::locale() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.locale)
  return _internal_locale();
}
inline void PAttachment_PUserInAttachment::set_locale(const std::string& value) {
  _internal_set_locale(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.locale)
}
inline std::string* PAttachment_PUserInAttachment::mutable_locale() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.locale)
  return _internal_mutable_locale();
}
inline const std::string& PAttachment_PUserInAttachment::_internal_locale() const {
  return locale_.GetNoArena();
}
inline void PAttachment_PUserInAttachment::_internal_set_locale(const std::string& value) {
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PUserInAttachment::set_locale(std::string&& value) {
  
  locale_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PUserInAttachment.locale)
}
inline void PAttachment_PUserInAttachment::set_locale(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PUserInAttachment.locale)
}
inline void PAttachment_PUserInAttachment::set_locale(const char* value, size_t size) {
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PUserInAttachment.locale)
}
inline std::string* PAttachment_PUserInAttachment::_internal_mutable_locale() {
  
  return locale_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PUserInAttachment::release_locale() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PUserInAttachment.locale)
  
  return locale_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PUserInAttachment::set_allocated_locale(std::string* locale) {
  if (locale != nullptr) {
    
  } else {
    
  }
  locale_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), locale);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PUserInAttachment.locale)
}

// string gravatar_hash = 16;
inline void PAttachment_PUserInAttachment::clear_gravatar_hash() {
  gravatar_hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PUserInAttachment::gravatar_hash() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.gravatar_hash)
  return _internal_gravatar_hash();
}
inline void PAttachment_PUserInAttachment::set_gravatar_hash(const std::string& value) {
  _internal_set_gravatar_hash(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.gravatar_hash)
}
inline std::string* PAttachment_PUserInAttachment::mutable_gravatar_hash() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.gravatar_hash)
  return _internal_mutable_gravatar_hash();
}
inline const std::string& PAttachment_PUserInAttachment::_internal_gravatar_hash() const {
  return gravatar_hash_.GetNoArena();
}
inline void PAttachment_PUserInAttachment::_internal_set_gravatar_hash(const std::string& value) {
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PUserInAttachment::set_gravatar_hash(std::string&& value) {
  
  gravatar_hash_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PUserInAttachment.gravatar_hash)
}
inline void PAttachment_PUserInAttachment::set_gravatar_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PUserInAttachment.gravatar_hash)
}
inline void PAttachment_PUserInAttachment::set_gravatar_hash(const char* value, size_t size) {
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PUserInAttachment.gravatar_hash)
}
inline std::string* PAttachment_PUserInAttachment::_internal_mutable_gravatar_hash() {
  
  return gravatar_hash_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PUserInAttachment::release_gravatar_hash() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PUserInAttachment.gravatar_hash)
  
  return gravatar_hash_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PUserInAttachment::set_allocated_gravatar_hash(std::string* gravatar_hash) {
  if (gravatar_hash != nullptr) {
    
  } else {
    
  }
  gravatar_hash_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gravatar_hash);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PUserInAttachment.gravatar_hash)
}

// string username = 17;
inline void PAttachment_PUserInAttachment::clear_username() {
  username_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PUserInAttachment::username() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.username)
  return _internal_username();
}
inline void PAttachment_PUserInAttachment::set_username(const std::string& value) {
  _internal_set_username(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.username)
}
inline std::string* PAttachment_PUserInAttachment::mutable_username() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.username)
  return _internal_mutable_username();
}
inline const std::string& PAttachment_PUserInAttachment::_internal_username() const {
  return username_.GetNoArena();
}
inline void PAttachment_PUserInAttachment::_internal_set_username(const std::string& value) {
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PUserInAttachment::set_username(std::string&& value) {
  
  username_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PUserInAttachment.username)
}
inline void PAttachment_PUserInAttachment::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PUserInAttachment.username)
}
inline void PAttachment_PUserInAttachment::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PUserInAttachment.username)
}
inline std::string* PAttachment_PUserInAttachment::_internal_mutable_username() {
  
  return username_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PUserInAttachment::release_username() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PUserInAttachment.username)
  
  return username_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PUserInAttachment::set_allocated_username(std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PUserInAttachment.username)
}

// string regstatus = 18;
inline void PAttachment_PUserInAttachment::clear_regstatus() {
  regstatus_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PUserInAttachment::regstatus() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.regstatus)
  return _internal_regstatus();
}
inline void PAttachment_PUserInAttachment::set_regstatus(const std::string& value) {
  _internal_set_regstatus(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.regstatus)
}
inline std::string* PAttachment_PUserInAttachment::mutable_regstatus() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.regstatus)
  return _internal_mutable_regstatus();
}
inline const std::string& PAttachment_PUserInAttachment::_internal_regstatus() const {
  return regstatus_.GetNoArena();
}
inline void PAttachment_PUserInAttachment::_internal_set_regstatus(const std::string& value) {
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PUserInAttachment::set_regstatus(std::string&& value) {
  
  regstatus_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PUserInAttachment.regstatus)
}
inline void PAttachment_PUserInAttachment::set_regstatus(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PUserInAttachment.regstatus)
}
inline void PAttachment_PUserInAttachment::set_regstatus(const char* value, size_t size) {
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PUserInAttachment.regstatus)
}
inline std::string* PAttachment_PUserInAttachment::_internal_mutable_regstatus() {
  
  return regstatus_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PUserInAttachment::release_regstatus() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PUserInAttachment.regstatus)
  
  return regstatus_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PUserInAttachment::set_allocated_regstatus(std::string* regstatus) {
  if (regstatus != nullptr) {
    
  } else {
    
  }
  regstatus_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), regstatus);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PUserInAttachment.regstatus)
}

// bool active = 19;
inline void PAttachment_PUserInAttachment::clear_active() {
  active_ = false;
}
inline bool PAttachment_PUserInAttachment::_internal_active() const {
  return active_;
}
inline bool PAttachment_PUserInAttachment::active() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.active)
  return _internal_active();
}
inline void PAttachment_PUserInAttachment::_internal_set_active(bool value) {
  
  active_ = value;
}
inline void PAttachment_PUserInAttachment::set_active(bool value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.active)
}

// bool is_admin = 20;
inline void PAttachment_PUserInAttachment::clear_is_admin() {
  is_admin_ = false;
}
inline bool PAttachment_PUserInAttachment::_internal_is_admin() const {
  return is_admin_;
}
inline bool PAttachment_PUserInAttachment::is_admin() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.is_admin)
  return _internal_is_admin();
}
inline void PAttachment_PUserInAttachment::_internal_set_is_admin(bool value) {
  
  is_admin_ = value;
}
inline void PAttachment_PUserInAttachment::set_is_admin(bool value) {
  _internal_set_is_admin(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.is_admin)
}

// string avatar_url = 21;
inline void PAttachment_PUserInAttachment::clear_avatar_url() {
  avatar_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PUserInAttachment::avatar_url() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.avatar_url)
  return _internal_avatar_url();
}
inline void PAttachment_PUserInAttachment::set_avatar_url(const std::string& value) {
  _internal_set_avatar_url(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.avatar_url)
}
inline std::string* PAttachment_PUserInAttachment::mutable_avatar_url() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.avatar_url)
  return _internal_mutable_avatar_url();
}
inline const std::string& PAttachment_PUserInAttachment::_internal_avatar_url() const {
  return avatar_url_.GetNoArena();
}
inline void PAttachment_PUserInAttachment::_internal_set_avatar_url(const std::string& value) {
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PUserInAttachment::set_avatar_url(std::string&& value) {
  
  avatar_url_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PUserInAttachment.avatar_url)
}
inline void PAttachment_PUserInAttachment::set_avatar_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PUserInAttachment.avatar_url)
}
inline void PAttachment_PUserInAttachment::set_avatar_url(const char* value, size_t size) {
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PUserInAttachment.avatar_url)
}
inline std::string* PAttachment_PUserInAttachment::_internal_mutable_avatar_url() {
  
  return avatar_url_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PUserInAttachment::release_avatar_url() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PUserInAttachment.avatar_url)
  
  return avatar_url_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PUserInAttachment::set_allocated_avatar_url(std::string* avatar_url) {
  if (avatar_url != nullptr) {
    
  } else {
    
  }
  avatar_url_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar_url);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PUserInAttachment.avatar_url)
}

// uint32 created_at = 22;
inline void PAttachment_PUserInAttachment::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.created_at)
  return _internal_created_at();
}
inline void PAttachment_PUserInAttachment::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PAttachment_PUserInAttachment::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.created_at)
}

// uint32 updated_at = 23;
inline void PAttachment_PUserInAttachment::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PUserInAttachment::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.updated_at)
  return _internal_updated_at();
}
inline void PAttachment_PUserInAttachment::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PAttachment_PUserInAttachment::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PUserInAttachment.updated_at)
}

// repeated .kandan_small.PAttachment.PUserInAttachment.PChannelsInUser channels = 24;
inline int PAttachment_PUserInAttachment::_internal_channels_size() const {
  return channels_.size();
}
inline int PAttachment_PUserInAttachment::channels_size() const {
  return _internal_channels_size();
}
inline void PAttachment_PUserInAttachment::clear_channels() {
  channels_.Clear();
}
inline ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser* PAttachment_PUserInAttachment::mutable_channels(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.channels)
  return channels_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser >*
PAttachment_PUserInAttachment::mutable_channels() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PAttachment.PUserInAttachment.channels)
  return &channels_;
}
inline const ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser& PAttachment_PUserInAttachment::_internal_channels(int index) const {
  return channels_.Get(index);
}
inline const ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser& PAttachment_PUserInAttachment::channels(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.channels)
  return _internal_channels(index);
}
inline ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser* PAttachment_PUserInAttachment::_internal_add_channels() {
  return channels_.Add();
}
inline ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser* PAttachment_PUserInAttachment::add_channels() {
  // @@protoc_insertion_point(field_add:kandan_small.PAttachment.PUserInAttachment.channels)
  return _internal_add_channels();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PUserInAttachment_PChannelsInUser >&
PAttachment_PUserInAttachment::channels() const {
  // @@protoc_insertion_point(field_list:kandan_small.PAttachment.PUserInAttachment.channels)
  return channels_;
}

// repeated .kandan_small.PAttachment.PUserInAttachment.PActivitiesInUser activities = 25;
inline int PAttachment_PUserInAttachment::_internal_activities_size() const {
  return activities_.size();
}
inline int PAttachment_PUserInAttachment::activities_size() const {
  return _internal_activities_size();
}
inline void PAttachment_PUserInAttachment::clear_activities() {
  activities_.Clear();
}
inline ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser* PAttachment_PUserInAttachment::mutable_activities(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PUserInAttachment.activities)
  return activities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser >*
PAttachment_PUserInAttachment::mutable_activities() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PAttachment.PUserInAttachment.activities)
  return &activities_;
}
inline const ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser& PAttachment_PUserInAttachment::_internal_activities(int index) const {
  return activities_.Get(index);
}
inline const ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser& PAttachment_PUserInAttachment::activities(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PUserInAttachment.activities)
  return _internal_activities(index);
}
inline ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser* PAttachment_PUserInAttachment::_internal_add_activities() {
  return activities_.Add();
}
inline ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser* PAttachment_PUserInAttachment::add_activities() {
  // @@protoc_insertion_point(field_add:kandan_small.PAttachment.PUserInAttachment.activities)
  return _internal_add_activities();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PUserInAttachment_PActivitiesInUser >&
PAttachment_PUserInAttachment::activities() const {
  // @@protoc_insertion_point(field_list:kandan_small.PAttachment.PUserInAttachment.activities)
  return activities_;
}

// -------------------------------------------------------------------

// PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity

// uint32 id = 1;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.id)
  return _internal_id();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.id)
}

// string email = 2;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_email() {
  email_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::email() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.email)
  return _internal_email();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_email(const std::string& value) {
  _internal_set_email(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.email)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::mutable_email() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.email)
  return _internal_mutable_email();
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_email() const {
  return email_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_email(const std::string& value) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_email(std::string&& value) {
  
  email_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.email)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.email)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.email)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_mutable_email() {
  
  return email_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::release_email() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.email)
  
  return email_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_allocated_email(std::string* email) {
  if (email != nullptr) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.email)
}

// string encrypted_password = 3;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_encrypted_password() {
  encrypted_password_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::encrypted_password() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.encrypted_password)
  return _internal_encrypted_password();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_encrypted_password(const std::string& value) {
  _internal_set_encrypted_password(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.encrypted_password)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::mutable_encrypted_password() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.encrypted_password)
  return _internal_mutable_encrypted_password();
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_encrypted_password() const {
  return encrypted_password_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_encrypted_password(const std::string& value) {
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_encrypted_password(std::string&& value) {
  
  encrypted_password_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.encrypted_password)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_encrypted_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.encrypted_password)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_encrypted_password(const char* value, size_t size) {
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.encrypted_password)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_mutable_encrypted_password() {
  
  return encrypted_password_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::release_encrypted_password() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.encrypted_password)
  
  return encrypted_password_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_allocated_encrypted_password(std::string* encrypted_password) {
  if (encrypted_password != nullptr) {
    
  } else {
    
  }
  encrypted_password_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), encrypted_password);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.encrypted_password)
}

// string reset_password_token = 4;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_reset_password_token() {
  reset_password_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::reset_password_token() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.reset_password_token)
  return _internal_reset_password_token();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_reset_password_token(const std::string& value) {
  _internal_set_reset_password_token(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.reset_password_token)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::mutable_reset_password_token() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.reset_password_token)
  return _internal_mutable_reset_password_token();
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_reset_password_token() const {
  return reset_password_token_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_reset_password_token(const std::string& value) {
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_reset_password_token(std::string&& value) {
  
  reset_password_token_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.reset_password_token)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_reset_password_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.reset_password_token)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_reset_password_token(const char* value, size_t size) {
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.reset_password_token)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_mutable_reset_password_token() {
  
  return reset_password_token_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::release_reset_password_token() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.reset_password_token)
  
  return reset_password_token_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_allocated_reset_password_token(std::string* reset_password_token) {
  if (reset_password_token != nullptr) {
    
  } else {
    
  }
  reset_password_token_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reset_password_token);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.reset_password_token)
}

// uint32 reset_password_sent_at = 5;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_reset_password_sent_at() {
  reset_password_sent_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_reset_password_sent_at() const {
  return reset_password_sent_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::reset_password_sent_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.reset_password_sent_at)
  return _internal_reset_password_sent_at();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  reset_password_sent_at_ = value;
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reset_password_sent_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.reset_password_sent_at)
}

// uint32 remember_created_at = 6;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_remember_created_at() {
  remember_created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_remember_created_at() const {
  return remember_created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::remember_created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.remember_created_at)
  return _internal_remember_created_at();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  remember_created_at_ = value;
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_remember_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.remember_created_at)
}

// string first_name = 7;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::first_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.first_name)
  return _internal_first_name();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_first_name(const std::string& value) {
  _internal_set_first_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.first_name)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::mutable_first_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.first_name)
  return _internal_mutable_first_name();
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_first_name() const {
  return first_name_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_first_name(const std::string& value) {
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_first_name(std::string&& value) {
  
  first_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.first_name)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_first_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.first_name)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.first_name)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_mutable_first_name() {
  
  return first_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::release_first_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.first_name)
  
  return first_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_allocated_first_name(std::string* first_name) {
  if (first_name != nullptr) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.first_name)
}

// string last_name = 8;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::last_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.last_name)
  return _internal_last_name();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_last_name(const std::string& value) {
  _internal_set_last_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.last_name)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::mutable_last_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.last_name)
  return _internal_mutable_last_name();
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_last_name() const {
  return last_name_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_last_name(const std::string& value) {
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_last_name(std::string&& value) {
  
  last_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.last_name)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_last_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.last_name)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.last_name)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_mutable_last_name() {
  
  return last_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::release_last_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.last_name)
  
  return last_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_allocated_last_name(std::string* last_name) {
  if (last_name != nullptr) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.last_name)
}

// uint32 signin_count = 9;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_signin_count() {
  signin_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_signin_count() const {
  return signin_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::signin_count() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.signin_count)
  return _internal_signin_count();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  signin_count_ = value;
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_signin_count(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.signin_count)
}

// uint32 current_sign_in_at = 10;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_current_sign_in_at() {
  current_sign_in_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_current_sign_in_at() const {
  return current_sign_in_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::current_sign_in_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.current_sign_in_at)
  return _internal_current_sign_in_at();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  current_sign_in_at_ = value;
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_current_sign_in_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.current_sign_in_at)
}

// string current_sign_in_ip = 11;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_current_sign_in_ip() {
  current_sign_in_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::current_sign_in_ip() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.current_sign_in_ip)
  return _internal_current_sign_in_ip();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_current_sign_in_ip(const std::string& value) {
  _internal_set_current_sign_in_ip(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.current_sign_in_ip)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::mutable_current_sign_in_ip() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.current_sign_in_ip)
  return _internal_mutable_current_sign_in_ip();
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_current_sign_in_ip() const {
  return current_sign_in_ip_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_current_sign_in_ip(const std::string& value) {
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_current_sign_in_ip(std::string&& value) {
  
  current_sign_in_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.current_sign_in_ip)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_current_sign_in_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.current_sign_in_ip)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_current_sign_in_ip(const char* value, size_t size) {
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.current_sign_in_ip)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_mutable_current_sign_in_ip() {
  
  return current_sign_in_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::release_current_sign_in_ip() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.current_sign_in_ip)
  
  return current_sign_in_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_allocated_current_sign_in_ip(std::string* current_sign_in_ip) {
  if (current_sign_in_ip != nullptr) {
    
  } else {
    
  }
  current_sign_in_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), current_sign_in_ip);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.current_sign_in_ip)
}

// uint32 last_sign_in_at = 12;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_last_sign_in_at() {
  last_sign_in_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_last_sign_in_at() const {
  return last_sign_in_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::last_sign_in_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.last_sign_in_at)
  return _internal_last_sign_in_at();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  last_sign_in_at_ = value;
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_sign_in_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.last_sign_in_at)
}

// string last_sign_in_ip = 13;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_last_sign_in_ip() {
  last_sign_in_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::last_sign_in_ip() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.last_sign_in_ip)
  return _internal_last_sign_in_ip();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_last_sign_in_ip(const std::string& value) {
  _internal_set_last_sign_in_ip(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.last_sign_in_ip)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::mutable_last_sign_in_ip() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.last_sign_in_ip)
  return _internal_mutable_last_sign_in_ip();
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_last_sign_in_ip() const {
  return last_sign_in_ip_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_last_sign_in_ip(const std::string& value) {
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_last_sign_in_ip(std::string&& value) {
  
  last_sign_in_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.last_sign_in_ip)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_last_sign_in_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.last_sign_in_ip)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_last_sign_in_ip(const char* value, size_t size) {
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.last_sign_in_ip)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_mutable_last_sign_in_ip() {
  
  return last_sign_in_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::release_last_sign_in_ip() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.last_sign_in_ip)
  
  return last_sign_in_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_allocated_last_sign_in_ip(std::string* last_sign_in_ip) {
  if (last_sign_in_ip != nullptr) {
    
  } else {
    
  }
  last_sign_in_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_sign_in_ip);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.last_sign_in_ip)
}

// string auth_token = 14;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_auth_token() {
  auth_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::auth_token() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.auth_token)
  return _internal_auth_token();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_auth_token(const std::string& value) {
  _internal_set_auth_token(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.auth_token)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::mutable_auth_token() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.auth_token)
  return _internal_mutable_auth_token();
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_auth_token() const {
  return auth_token_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_auth_token(const std::string& value) {
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_auth_token(std::string&& value) {
  
  auth_token_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.auth_token)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_auth_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.auth_token)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_auth_token(const char* value, size_t size) {
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.auth_token)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_mutable_auth_token() {
  
  return auth_token_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::release_auth_token() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.auth_token)
  
  return auth_token_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_allocated_auth_token(std::string* auth_token) {
  if (auth_token != nullptr) {
    
  } else {
    
  }
  auth_token_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), auth_token);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.auth_token)
}

// string locale = 15;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_locale() {
  locale_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::locale() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.locale)
  return _internal_locale();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_locale(const std::string& value) {
  _internal_set_locale(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.locale)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::mutable_locale() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.locale)
  return _internal_mutable_locale();
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_locale() const {
  return locale_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_locale(const std::string& value) {
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_locale(std::string&& value) {
  
  locale_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.locale)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_locale(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.locale)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_locale(const char* value, size_t size) {
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.locale)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_mutable_locale() {
  
  return locale_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::release_locale() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.locale)
  
  return locale_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_allocated_locale(std::string* locale) {
  if (locale != nullptr) {
    
  } else {
    
  }
  locale_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), locale);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.locale)
}

// string gravatar_hash = 16;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_gravatar_hash() {
  gravatar_hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::gravatar_hash() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.gravatar_hash)
  return _internal_gravatar_hash();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_gravatar_hash(const std::string& value) {
  _internal_set_gravatar_hash(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.gravatar_hash)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::mutable_gravatar_hash() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.gravatar_hash)
  return _internal_mutable_gravatar_hash();
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_gravatar_hash() const {
  return gravatar_hash_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_gravatar_hash(const std::string& value) {
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_gravatar_hash(std::string&& value) {
  
  gravatar_hash_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.gravatar_hash)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_gravatar_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.gravatar_hash)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_gravatar_hash(const char* value, size_t size) {
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.gravatar_hash)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_mutable_gravatar_hash() {
  
  return gravatar_hash_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::release_gravatar_hash() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.gravatar_hash)
  
  return gravatar_hash_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_allocated_gravatar_hash(std::string* gravatar_hash) {
  if (gravatar_hash != nullptr) {
    
  } else {
    
  }
  gravatar_hash_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gravatar_hash);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.gravatar_hash)
}

// string username = 17;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_username() {
  username_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::username() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.username)
  return _internal_username();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_username(const std::string& value) {
  _internal_set_username(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.username)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::mutable_username() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.username)
  return _internal_mutable_username();
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_username() const {
  return username_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_username(const std::string& value) {
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_username(std::string&& value) {
  
  username_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.username)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.username)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.username)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_mutable_username() {
  
  return username_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::release_username() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.username)
  
  return username_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_allocated_username(std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.username)
}

// string regstatus = 18;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_regstatus() {
  regstatus_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::regstatus() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.regstatus)
  return _internal_regstatus();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_regstatus(const std::string& value) {
  _internal_set_regstatus(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.regstatus)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::mutable_regstatus() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.regstatus)
  return _internal_mutable_regstatus();
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_regstatus() const {
  return regstatus_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_regstatus(const std::string& value) {
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_regstatus(std::string&& value) {
  
  regstatus_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.regstatus)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_regstatus(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.regstatus)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_regstatus(const char* value, size_t size) {
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.regstatus)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_mutable_regstatus() {
  
  return regstatus_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::release_regstatus() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.regstatus)
  
  return regstatus_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_allocated_regstatus(std::string* regstatus) {
  if (regstatus != nullptr) {
    
  } else {
    
  }
  regstatus_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), regstatus);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.regstatus)
}

// bool active = 19;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_active() {
  active_ = false;
}
inline bool PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_active() const {
  return active_;
}
inline bool PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::active() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.active)
  return _internal_active();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_active(bool value) {
  
  active_ = value;
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_active(bool value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.active)
}

// bool is_admin = 20;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_is_admin() {
  is_admin_ = false;
}
inline bool PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_is_admin() const {
  return is_admin_;
}
inline bool PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::is_admin() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.is_admin)
  return _internal_is_admin();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_is_admin(bool value) {
  
  is_admin_ = value;
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_is_admin(bool value) {
  _internal_set_is_admin(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.is_admin)
}

// string avatar_url = 21;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_avatar_url() {
  avatar_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::avatar_url() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.avatar_url)
  return _internal_avatar_url();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_avatar_url(const std::string& value) {
  _internal_set_avatar_url(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.avatar_url)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::mutable_avatar_url() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.avatar_url)
  return _internal_mutable_avatar_url();
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_avatar_url() const {
  return avatar_url_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_avatar_url(const std::string& value) {
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_avatar_url(std::string&& value) {
  
  avatar_url_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.avatar_url)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_avatar_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.avatar_url)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_avatar_url(const char* value, size_t size) {
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.avatar_url)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_mutable_avatar_url() {
  
  return avatar_url_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::release_avatar_url() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.avatar_url)
  
  return avatar_url_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_allocated_avatar_url(std::string* avatar_url) {
  if (avatar_url != nullptr) {
    
  } else {
    
  }
  avatar_url_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar_url);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.avatar_url)
}

// uint32 created_at = 22;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.created_at)
  return _internal_created_at();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.created_at)
}

// uint32 updated_at = 23;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.updated_at)
  return _internal_updated_at();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity.updated_at)
}

// -------------------------------------------------------------------

// PAttachment_PChannelInAttachment_PActivitiesInChannel

// uint32 id = 1;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.id)
  return _internal_id();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.id)
}

// uint32 created_at = 2;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.created_at)
  return _internal_created_at();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.created_at)
}

// uint32 updated_at = 3;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.updated_at)
  return _internal_updated_at();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.updated_at)
}

// string action = 4;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::clear_action() {
  action_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel::action() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.action)
  return _internal_action();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::set_action(const std::string& value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.action)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel::mutable_action() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.action)
  return _internal_mutable_action();
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel::_internal_action() const {
  return action_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::_internal_set_action(const std::string& value) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::set_action(std::string&& value) {
  
  action_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.action)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::set_action(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.action)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.action)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel::_internal_mutable_action() {
  
  return action_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel::release_action() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.action)
  
  return action_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::set_allocated_action(std::string* action) {
  if (action != nullptr) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.action)
}

// string content = 5;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::clear_content() {
  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel::content() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.content)
  return _internal_content();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.content)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel::mutable_content() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.content)
  return _internal_mutable_content();
}
inline const std::string& PAttachment_PChannelInAttachment_PActivitiesInChannel::_internal_content() const {
  return content_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::_internal_set_content(const std::string& value) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::set_content(std::string&& value) {
  
  content_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.content)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.content)
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.content)
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel::_internal_mutable_content() {
  
  return content_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PActivitiesInChannel::release_content() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.content)
  
  return content_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.content)
}

// uint32 channel_id = 6;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.channel_id)
  return _internal_channel_id();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.channel_id)
}

// uint32 user_id = 7;
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PActivitiesInChannel::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.user_id)
  return _internal_user_id();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.user_id)
}

// .kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.PUserInActivity user = 8;
inline bool PAttachment_PChannelInAttachment_PActivitiesInChannel::_internal_has_user() const {
  return this != internal_default_instance() && user_ != nullptr;
}
inline bool PAttachment_PChannelInAttachment_PActivitiesInChannel::has_user() const {
  return _internal_has_user();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::clear_user() {
  if (GetArenaNoVirtual() == nullptr && user_ != nullptr) {
    delete user_;
  }
  user_ = nullptr;
}
inline const ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity& PAttachment_PChannelInAttachment_PActivitiesInChannel::_internal_user() const {
  const ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity* p = user_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity*>(
      &::kandan_small::_PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity_default_instance_);
}
inline const ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity& PAttachment_PChannelInAttachment_PActivitiesInChannel::user() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.user)
  return _internal_user();
}
inline ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity* PAttachment_PChannelInAttachment_PActivitiesInChannel::release_user() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.user)
  
  ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity* temp = user_;
  user_ = nullptr;
  return temp;
}
inline ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity* PAttachment_PChannelInAttachment_PActivitiesInChannel::_internal_mutable_user() {
  
  if (user_ == nullptr) {
    auto* p = CreateMaybeMessage<::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity>(GetArenaNoVirtual());
    user_ = p;
  }
  return user_;
}
inline ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity* PAttachment_PChannelInAttachment_PActivitiesInChannel::mutable_user() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.user)
  return _internal_mutable_user();
}
inline void PAttachment_PChannelInAttachment_PActivitiesInChannel::set_allocated_user(::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel_PUserInActivity* user) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete user_;
  }
  if (user) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      user = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user, submessage_arena);
    }
    
  } else {
    
  }
  user_ = user;
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel.user)
}

// -------------------------------------------------------------------

// PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser

// uint32 id = 1;
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.id)
  return _internal_id();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.id)
}

// uint32 created_at = 2;
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.created_at)
  return _internal_created_at();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.created_at)
}

// uint32 updated_at = 3;
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.updated_at)
  return _internal_updated_at();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.updated_at)
}

// string action = 4;
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::clear_action() {
  action_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::action() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.action)
  return _internal_action();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::set_action(const std::string& value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.action)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::mutable_action() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.action)
  return _internal_mutable_action();
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::_internal_action() const {
  return action_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::_internal_set_action(const std::string& value) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::set_action(std::string&& value) {
  
  action_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.action)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::set_action(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.action)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.action)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::_internal_mutable_action() {
  
  return action_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::release_action() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.action)
  
  return action_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::set_allocated_action(std::string* action) {
  if (action != nullptr) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.action)
}

// string content = 5;
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::clear_content() {
  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::content() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.content)
  return _internal_content();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.content)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::mutable_content() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.content)
  return _internal_mutable_content();
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::_internal_content() const {
  return content_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::_internal_set_content(const std::string& value) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::set_content(std::string&& value) {
  
  content_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.content)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.content)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.content)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::_internal_mutable_content() {
  
  return content_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::release_content() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.content)
  
  return content_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.content)
}

// uint32 channel_id = 6;
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.channel_id)
  return _internal_channel_id();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.channel_id)
}

// uint32 user_id = 7;
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.user_id)
  return _internal_user_id();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser.user_id)
}

// -------------------------------------------------------------------

// PAttachment_PChannelInAttachment_PUserInChannel

// uint32 id = 1;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.id)
  return _internal_id();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.id)
}

// string email = 2;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_email() {
  email_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::email() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.email)
  return _internal_email();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_email(const std::string& value) {
  _internal_set_email(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.email)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::mutable_email() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.email)
  return _internal_mutable_email();
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::_internal_email() const {
  return email_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_email(const std::string& value) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_email(std::string&& value) {
  
  email_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.email)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.email)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.email)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::_internal_mutable_email() {
  
  return email_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::release_email() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.email)
  
  return email_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_allocated_email(std::string* email) {
  if (email != nullptr) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.email)
}

// string encrypted_password = 3;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_encrypted_password() {
  encrypted_password_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::encrypted_password() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.encrypted_password)
  return _internal_encrypted_password();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_encrypted_password(const std::string& value) {
  _internal_set_encrypted_password(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.encrypted_password)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::mutable_encrypted_password() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.encrypted_password)
  return _internal_mutable_encrypted_password();
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::_internal_encrypted_password() const {
  return encrypted_password_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_encrypted_password(const std::string& value) {
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_encrypted_password(std::string&& value) {
  
  encrypted_password_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.encrypted_password)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_encrypted_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.encrypted_password)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_encrypted_password(const char* value, size_t size) {
  
  encrypted_password_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.encrypted_password)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::_internal_mutable_encrypted_password() {
  
  return encrypted_password_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::release_encrypted_password() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.encrypted_password)
  
  return encrypted_password_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_allocated_encrypted_password(std::string* encrypted_password) {
  if (encrypted_password != nullptr) {
    
  } else {
    
  }
  encrypted_password_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), encrypted_password);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.encrypted_password)
}

// string reset_password_token = 4;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_reset_password_token() {
  reset_password_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::reset_password_token() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.reset_password_token)
  return _internal_reset_password_token();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_reset_password_token(const std::string& value) {
  _internal_set_reset_password_token(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.reset_password_token)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::mutable_reset_password_token() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.reset_password_token)
  return _internal_mutable_reset_password_token();
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::_internal_reset_password_token() const {
  return reset_password_token_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_reset_password_token(const std::string& value) {
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_reset_password_token(std::string&& value) {
  
  reset_password_token_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.reset_password_token)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_reset_password_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.reset_password_token)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_reset_password_token(const char* value, size_t size) {
  
  reset_password_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.reset_password_token)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::_internal_mutable_reset_password_token() {
  
  return reset_password_token_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::release_reset_password_token() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.reset_password_token)
  
  return reset_password_token_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_allocated_reset_password_token(std::string* reset_password_token) {
  if (reset_password_token != nullptr) {
    
  } else {
    
  }
  reset_password_token_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reset_password_token);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.reset_password_token)
}

// uint32 reset_password_sent_at = 5;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_reset_password_sent_at() {
  reset_password_sent_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel::_internal_reset_password_sent_at() const {
  return reset_password_sent_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel::reset_password_sent_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.reset_password_sent_at)
  return _internal_reset_password_sent_at();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  reset_password_sent_at_ = value;
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_reset_password_sent_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reset_password_sent_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.reset_password_sent_at)
}

// uint32 remember_created_at = 6;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_remember_created_at() {
  remember_created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel::_internal_remember_created_at() const {
  return remember_created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel::remember_created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.remember_created_at)
  return _internal_remember_created_at();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  remember_created_at_ = value;
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_remember_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_remember_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.remember_created_at)
}

// string first_name = 7;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::first_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.first_name)
  return _internal_first_name();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_first_name(const std::string& value) {
  _internal_set_first_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.first_name)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::mutable_first_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.first_name)
  return _internal_mutable_first_name();
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::_internal_first_name() const {
  return first_name_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_first_name(const std::string& value) {
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_first_name(std::string&& value) {
  
  first_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.first_name)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_first_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.first_name)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.first_name)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::_internal_mutable_first_name() {
  
  return first_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::release_first_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.first_name)
  
  return first_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_allocated_first_name(std::string* first_name) {
  if (first_name != nullptr) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.first_name)
}

// string last_name = 8;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::last_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.last_name)
  return _internal_last_name();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_last_name(const std::string& value) {
  _internal_set_last_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.last_name)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::mutable_last_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.last_name)
  return _internal_mutable_last_name();
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::_internal_last_name() const {
  return last_name_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_last_name(const std::string& value) {
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_last_name(std::string&& value) {
  
  last_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.last_name)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_last_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.last_name)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.last_name)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::_internal_mutable_last_name() {
  
  return last_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::release_last_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.last_name)
  
  return last_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_allocated_last_name(std::string* last_name) {
  if (last_name != nullptr) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.last_name)
}

// uint32 signin_count = 9;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_signin_count() {
  signin_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel::_internal_signin_count() const {
  return signin_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel::signin_count() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.signin_count)
  return _internal_signin_count();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  signin_count_ = value;
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_signin_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_signin_count(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.signin_count)
}

// uint32 current_sign_in_at = 10;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_current_sign_in_at() {
  current_sign_in_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel::_internal_current_sign_in_at() const {
  return current_sign_in_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel::current_sign_in_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.current_sign_in_at)
  return _internal_current_sign_in_at();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  current_sign_in_at_ = value;
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_current_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_current_sign_in_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.current_sign_in_at)
}

// string current_sign_in_ip = 11;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_current_sign_in_ip() {
  current_sign_in_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::current_sign_in_ip() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.current_sign_in_ip)
  return _internal_current_sign_in_ip();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_current_sign_in_ip(const std::string& value) {
  _internal_set_current_sign_in_ip(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.current_sign_in_ip)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::mutable_current_sign_in_ip() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.current_sign_in_ip)
  return _internal_mutable_current_sign_in_ip();
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::_internal_current_sign_in_ip() const {
  return current_sign_in_ip_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_current_sign_in_ip(const std::string& value) {
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_current_sign_in_ip(std::string&& value) {
  
  current_sign_in_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.current_sign_in_ip)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_current_sign_in_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.current_sign_in_ip)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_current_sign_in_ip(const char* value, size_t size) {
  
  current_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.current_sign_in_ip)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::_internal_mutable_current_sign_in_ip() {
  
  return current_sign_in_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::release_current_sign_in_ip() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.current_sign_in_ip)
  
  return current_sign_in_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_allocated_current_sign_in_ip(std::string* current_sign_in_ip) {
  if (current_sign_in_ip != nullptr) {
    
  } else {
    
  }
  current_sign_in_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), current_sign_in_ip);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.current_sign_in_ip)
}

// uint32 last_sign_in_at = 12;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_last_sign_in_at() {
  last_sign_in_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel::_internal_last_sign_in_at() const {
  return last_sign_in_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel::last_sign_in_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.last_sign_in_at)
  return _internal_last_sign_in_at();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  last_sign_in_at_ = value;
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_last_sign_in_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_sign_in_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.last_sign_in_at)
}

// string last_sign_in_ip = 13;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_last_sign_in_ip() {
  last_sign_in_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::last_sign_in_ip() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.last_sign_in_ip)
  return _internal_last_sign_in_ip();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_last_sign_in_ip(const std::string& value) {
  _internal_set_last_sign_in_ip(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.last_sign_in_ip)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::mutable_last_sign_in_ip() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.last_sign_in_ip)
  return _internal_mutable_last_sign_in_ip();
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::_internal_last_sign_in_ip() const {
  return last_sign_in_ip_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_last_sign_in_ip(const std::string& value) {
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_last_sign_in_ip(std::string&& value) {
  
  last_sign_in_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.last_sign_in_ip)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_last_sign_in_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.last_sign_in_ip)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_last_sign_in_ip(const char* value, size_t size) {
  
  last_sign_in_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.last_sign_in_ip)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::_internal_mutable_last_sign_in_ip() {
  
  return last_sign_in_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::release_last_sign_in_ip() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.last_sign_in_ip)
  
  return last_sign_in_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_allocated_last_sign_in_ip(std::string* last_sign_in_ip) {
  if (last_sign_in_ip != nullptr) {
    
  } else {
    
  }
  last_sign_in_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_sign_in_ip);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.last_sign_in_ip)
}

// string auth_token = 14;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_auth_token() {
  auth_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::auth_token() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.auth_token)
  return _internal_auth_token();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_auth_token(const std::string& value) {
  _internal_set_auth_token(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.auth_token)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::mutable_auth_token() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.auth_token)
  return _internal_mutable_auth_token();
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::_internal_auth_token() const {
  return auth_token_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_auth_token(const std::string& value) {
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_auth_token(std::string&& value) {
  
  auth_token_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.auth_token)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_auth_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.auth_token)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_auth_token(const char* value, size_t size) {
  
  auth_token_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.auth_token)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::_internal_mutable_auth_token() {
  
  return auth_token_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::release_auth_token() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.auth_token)
  
  return auth_token_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_allocated_auth_token(std::string* auth_token) {
  if (auth_token != nullptr) {
    
  } else {
    
  }
  auth_token_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), auth_token);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.auth_token)
}

// string locale = 15;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_locale() {
  locale_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::locale() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.locale)
  return _internal_locale();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_locale(const std::string& value) {
  _internal_set_locale(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.locale)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::mutable_locale() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.locale)
  return _internal_mutable_locale();
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::_internal_locale() const {
  return locale_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_locale(const std::string& value) {
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_locale(std::string&& value) {
  
  locale_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.locale)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_locale(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.locale)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_locale(const char* value, size_t size) {
  
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.locale)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::_internal_mutable_locale() {
  
  return locale_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::release_locale() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.locale)
  
  return locale_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_allocated_locale(std::string* locale) {
  if (locale != nullptr) {
    
  } else {
    
  }
  locale_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), locale);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.locale)
}

// string gravatar_hash = 16;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_gravatar_hash() {
  gravatar_hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::gravatar_hash() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.gravatar_hash)
  return _internal_gravatar_hash();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_gravatar_hash(const std::string& value) {
  _internal_set_gravatar_hash(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.gravatar_hash)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::mutable_gravatar_hash() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.gravatar_hash)
  return _internal_mutable_gravatar_hash();
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::_internal_gravatar_hash() const {
  return gravatar_hash_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_gravatar_hash(const std::string& value) {
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_gravatar_hash(std::string&& value) {
  
  gravatar_hash_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.gravatar_hash)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_gravatar_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.gravatar_hash)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_gravatar_hash(const char* value, size_t size) {
  
  gravatar_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.gravatar_hash)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::_internal_mutable_gravatar_hash() {
  
  return gravatar_hash_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::release_gravatar_hash() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.gravatar_hash)
  
  return gravatar_hash_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_allocated_gravatar_hash(std::string* gravatar_hash) {
  if (gravatar_hash != nullptr) {
    
  } else {
    
  }
  gravatar_hash_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gravatar_hash);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.gravatar_hash)
}

// string username = 17;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_username() {
  username_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::username() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.username)
  return _internal_username();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_username(const std::string& value) {
  _internal_set_username(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.username)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::mutable_username() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.username)
  return _internal_mutable_username();
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::_internal_username() const {
  return username_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_username(const std::string& value) {
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_username(std::string&& value) {
  
  username_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.username)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.username)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.username)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::_internal_mutable_username() {
  
  return username_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::release_username() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.username)
  
  return username_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_allocated_username(std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.username)
}

// string regstatus = 18;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_regstatus() {
  regstatus_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::regstatus() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.regstatus)
  return _internal_regstatus();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_regstatus(const std::string& value) {
  _internal_set_regstatus(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.regstatus)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::mutable_regstatus() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.regstatus)
  return _internal_mutable_regstatus();
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::_internal_regstatus() const {
  return regstatus_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_regstatus(const std::string& value) {
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_regstatus(std::string&& value) {
  
  regstatus_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.regstatus)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_regstatus(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.regstatus)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_regstatus(const char* value, size_t size) {
  
  regstatus_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.regstatus)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::_internal_mutable_regstatus() {
  
  return regstatus_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::release_regstatus() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.regstatus)
  
  return regstatus_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_allocated_regstatus(std::string* regstatus) {
  if (regstatus != nullptr) {
    
  } else {
    
  }
  regstatus_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), regstatus);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.regstatus)
}

// bool active = 19;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_active() {
  active_ = false;
}
inline bool PAttachment_PChannelInAttachment_PUserInChannel::_internal_active() const {
  return active_;
}
inline bool PAttachment_PChannelInAttachment_PUserInChannel::active() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.active)
  return _internal_active();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_active(bool value) {
  
  active_ = value;
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_active(bool value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.active)
}

// bool is_admin = 20;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_is_admin() {
  is_admin_ = false;
}
inline bool PAttachment_PChannelInAttachment_PUserInChannel::_internal_is_admin() const {
  return is_admin_;
}
inline bool PAttachment_PChannelInAttachment_PUserInChannel::is_admin() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.is_admin)
  return _internal_is_admin();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_is_admin(bool value) {
  
  is_admin_ = value;
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_is_admin(bool value) {
  _internal_set_is_admin(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.is_admin)
}

// string avatar_url = 21;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_avatar_url() {
  avatar_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::avatar_url() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.avatar_url)
  return _internal_avatar_url();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_avatar_url(const std::string& value) {
  _internal_set_avatar_url(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.avatar_url)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::mutable_avatar_url() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.avatar_url)
  return _internal_mutable_avatar_url();
}
inline const std::string& PAttachment_PChannelInAttachment_PUserInChannel::_internal_avatar_url() const {
  return avatar_url_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_avatar_url(const std::string& value) {
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_avatar_url(std::string&& value) {
  
  avatar_url_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.avatar_url)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_avatar_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.avatar_url)
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_avatar_url(const char* value, size_t size) {
  
  avatar_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.avatar_url)
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::_internal_mutable_avatar_url() {
  
  return avatar_url_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment_PUserInChannel::release_avatar_url() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.avatar_url)
  
  return avatar_url_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_allocated_avatar_url(std::string* avatar_url) {
  if (avatar_url != nullptr) {
    
  } else {
    
  }
  avatar_url_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar_url);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.avatar_url)
}

// uint32 created_at = 22;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.created_at)
  return _internal_created_at();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.created_at)
}

// uint32 updated_at = 23;
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment_PUserInChannel::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.updated_at)
  return _internal_updated_at();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.updated_at)
}

// repeated .kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.PActivitiesInUser activities = 24;
inline int PAttachment_PChannelInAttachment_PUserInChannel::_internal_activities_size() const {
  return activities_.size();
}
inline int PAttachment_PChannelInAttachment_PUserInChannel::activities_size() const {
  return _internal_activities_size();
}
inline void PAttachment_PChannelInAttachment_PUserInChannel::clear_activities() {
  activities_.Clear();
}
inline ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser* PAttachment_PChannelInAttachment_PUserInChannel::mutable_activities(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.activities)
  return activities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser >*
PAttachment_PChannelInAttachment_PUserInChannel::mutable_activities() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.activities)
  return &activities_;
}
inline const ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser& PAttachment_PChannelInAttachment_PUserInChannel::_internal_activities(int index) const {
  return activities_.Get(index);
}
inline const ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser& PAttachment_PChannelInAttachment_PUserInChannel::activities(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.activities)
  return _internal_activities(index);
}
inline ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser* PAttachment_PChannelInAttachment_PUserInChannel::_internal_add_activities() {
  return activities_.Add();
}
inline ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser* PAttachment_PChannelInAttachment_PUserInChannel::add_activities() {
  // @@protoc_insertion_point(field_add:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.activities)
  return _internal_add_activities();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel_PActivitiesInUser >&
PAttachment_PChannelInAttachment_PUserInChannel::activities() const {
  // @@protoc_insertion_point(field_list:kandan_small.PAttachment.PChannelInAttachment.PUserInChannel.activities)
  return activities_;
}

// -------------------------------------------------------------------

// PAttachment_PChannelInAttachment

// uint32 id = 1;
inline void PAttachment_PChannelInAttachment::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.id)
  return _internal_id();
}
inline void PAttachment_PChannelInAttachment::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PAttachment_PChannelInAttachment::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.id)
}

// string name = 2;
inline void PAttachment_PChannelInAttachment::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment_PChannelInAttachment::name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.name)
  return _internal_name();
}
inline void PAttachment_PChannelInAttachment::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.name)
}
inline std::string* PAttachment_PChannelInAttachment::mutable_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.name)
  return _internal_mutable_name();
}
inline const std::string& PAttachment_PChannelInAttachment::_internal_name() const {
  return name_.GetNoArena();
}
inline void PAttachment_PChannelInAttachment::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment_PChannelInAttachment::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.PChannelInAttachment.name)
}
inline void PAttachment_PChannelInAttachment::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.PChannelInAttachment.name)
}
inline void PAttachment_PChannelInAttachment::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.PChannelInAttachment.name)
}
inline std::string* PAttachment_PChannelInAttachment::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment_PChannelInAttachment::release_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment_PChannelInAttachment::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.name)
}

// uint32 created_at = 3;
inline void PAttachment_PChannelInAttachment::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.created_at)
  return _internal_created_at();
}
inline void PAttachment_PChannelInAttachment::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PAttachment_PChannelInAttachment::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.created_at)
}

// uint32 updated_at = 4;
inline void PAttachment_PChannelInAttachment::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.updated_at)
  return _internal_updated_at();
}
inline void PAttachment_PChannelInAttachment::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PAttachment_PChannelInAttachment::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.updated_at)
}

// uint32 user_id = 5;
inline void PAttachment_PChannelInAttachment::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.user_id)
  return _internal_user_id();
}
inline void PAttachment_PChannelInAttachment::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PAttachment_PChannelInAttachment::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.user_id)
}

// uint32 count = 6;
inline void PAttachment_PChannelInAttachment::clear_count() {
  count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment_PChannelInAttachment::count() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.count)
  return _internal_count();
}
inline void PAttachment_PChannelInAttachment::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  count_ = value;
}
inline void PAttachment_PChannelInAttachment::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.PChannelInAttachment.count)
}

// repeated .kandan_small.PAttachment.PChannelInAttachment.PActivitiesInChannel activities = 7;
inline int PAttachment_PChannelInAttachment::_internal_activities_size() const {
  return activities_.size();
}
inline int PAttachment_PChannelInAttachment::activities_size() const {
  return _internal_activities_size();
}
inline void PAttachment_PChannelInAttachment::clear_activities() {
  activities_.Clear();
}
inline ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel* PAttachment_PChannelInAttachment::mutable_activities(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.activities)
  return activities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel >*
PAttachment_PChannelInAttachment::mutable_activities() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PAttachment.PChannelInAttachment.activities)
  return &activities_;
}
inline const ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel& PAttachment_PChannelInAttachment::_internal_activities(int index) const {
  return activities_.Get(index);
}
inline const ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel& PAttachment_PChannelInAttachment::activities(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.activities)
  return _internal_activities(index);
}
inline ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel* PAttachment_PChannelInAttachment::_internal_add_activities() {
  return activities_.Add();
}
inline ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel* PAttachment_PChannelInAttachment::add_activities() {
  // @@protoc_insertion_point(field_add:kandan_small.PAttachment.PChannelInAttachment.activities)
  return _internal_add_activities();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment_PChannelInAttachment_PActivitiesInChannel >&
PAttachment_PChannelInAttachment::activities() const {
  // @@protoc_insertion_point(field_list:kandan_small.PAttachment.PChannelInAttachment.activities)
  return activities_;
}

// .kandan_small.PAttachment.PChannelInAttachment.PUserInChannel user = 8;
inline bool PAttachment_PChannelInAttachment::_internal_has_user() const {
  return this != internal_default_instance() && user_ != nullptr;
}
inline bool PAttachment_PChannelInAttachment::has_user() const {
  return _internal_has_user();
}
inline void PAttachment_PChannelInAttachment::clear_user() {
  if (GetArenaNoVirtual() == nullptr && user_ != nullptr) {
    delete user_;
  }
  user_ = nullptr;
}
inline const ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel& PAttachment_PChannelInAttachment::_internal_user() const {
  const ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel* p = user_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel*>(
      &::kandan_small::_PAttachment_PChannelInAttachment_PUserInChannel_default_instance_);
}
inline const ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel& PAttachment_PChannelInAttachment::user() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.PChannelInAttachment.user)
  return _internal_user();
}
inline ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel* PAttachment_PChannelInAttachment::release_user() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.PChannelInAttachment.user)
  
  ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel* temp = user_;
  user_ = nullptr;
  return temp;
}
inline ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel* PAttachment_PChannelInAttachment::_internal_mutable_user() {
  
  if (user_ == nullptr) {
    auto* p = CreateMaybeMessage<::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel>(GetArenaNoVirtual());
    user_ = p;
  }
  return user_;
}
inline ::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel* PAttachment_PChannelInAttachment::mutable_user() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.PChannelInAttachment.user)
  return _internal_mutable_user();
}
inline void PAttachment_PChannelInAttachment::set_allocated_user(::kandan_small::PAttachment_PChannelInAttachment_PUserInChannel* user) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete user_;
  }
  if (user) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      user = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user, submessage_arena);
    }
    
  } else {
    
  }
  user_ = user;
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.PChannelInAttachment.user)
}

// -------------------------------------------------------------------

// PAttachment

// uint32 id = 1;
inline void PAttachment::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment::id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.id)
  return _internal_id();
}
inline void PAttachment::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PAttachment::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.id)
}

// string file_file_name = 2;
inline void PAttachment::clear_file_file_name() {
  file_file_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment::file_file_name() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.file_file_name)
  return _internal_file_file_name();
}
inline void PAttachment::set_file_file_name(const std::string& value) {
  _internal_set_file_file_name(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.file_file_name)
}
inline std::string* PAttachment::mutable_file_file_name() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.file_file_name)
  return _internal_mutable_file_file_name();
}
inline const std::string& PAttachment::_internal_file_file_name() const {
  return file_file_name_.GetNoArena();
}
inline void PAttachment::_internal_set_file_file_name(const std::string& value) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment::set_file_file_name(std::string&& value) {
  
  file_file_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.file_file_name)
}
inline void PAttachment::set_file_file_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.file_file_name)
}
inline void PAttachment::set_file_file_name(const char* value, size_t size) {
  
  file_file_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.file_file_name)
}
inline std::string* PAttachment::_internal_mutable_file_file_name() {
  
  return file_file_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment::release_file_file_name() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.file_file_name)
  
  return file_file_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment::set_allocated_file_file_name(std::string* file_file_name) {
  if (file_file_name != nullptr) {
    
  } else {
    
  }
  file_file_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_file_name);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.file_file_name)
}

// string file_content_type = 3;
inline void PAttachment::clear_file_content_type() {
  file_content_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PAttachment::file_content_type() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.file_content_type)
  return _internal_file_content_type();
}
inline void PAttachment::set_file_content_type(const std::string& value) {
  _internal_set_file_content_type(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.file_content_type)
}
inline std::string* PAttachment::mutable_file_content_type() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.file_content_type)
  return _internal_mutable_file_content_type();
}
inline const std::string& PAttachment::_internal_file_content_type() const {
  return file_content_type_.GetNoArena();
}
inline void PAttachment::_internal_set_file_content_type(const std::string& value) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PAttachment::set_file_content_type(std::string&& value) {
  
  file_content_type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kandan_small.PAttachment.file_content_type)
}
inline void PAttachment::set_file_content_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kandan_small.PAttachment.file_content_type)
}
inline void PAttachment::set_file_content_type(const char* value, size_t size) {
  
  file_content_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kandan_small.PAttachment.file_content_type)
}
inline std::string* PAttachment::_internal_mutable_file_content_type() {
  
  return file_content_type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PAttachment::release_file_content_type() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.file_content_type)
  
  return file_content_type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PAttachment::set_allocated_file_content_type(std::string* file_content_type) {
  if (file_content_type != nullptr) {
    
  } else {
    
  }
  file_content_type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_content_type);
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.file_content_type)
}

// uint32 file_file_size = 4;
inline void PAttachment::clear_file_file_size() {
  file_file_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment::_internal_file_file_size() const {
  return file_file_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment::file_file_size() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.file_file_size)
  return _internal_file_file_size();
}
inline void PAttachment::_internal_set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_file_size_ = value;
}
inline void PAttachment::set_file_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_file_size(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.file_file_size)
}

// uint32 message_id = 5;
inline void PAttachment::clear_message_id() {
  message_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment::_internal_message_id() const {
  return message_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment::message_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.message_id)
  return _internal_message_id();
}
inline void PAttachment::_internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  message_id_ = value;
}
inline void PAttachment::set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.message_id)
}

// uint32 file_updated_at = 6;
inline void PAttachment::clear_file_updated_at() {
  file_updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment::_internal_file_updated_at() const {
  return file_updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment::file_updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.file_updated_at)
  return _internal_file_updated_at();
}
inline void PAttachment::_internal_set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  file_updated_at_ = value;
}
inline void PAttachment::set_file_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.file_updated_at)
}

// uint32 created_at = 7;
inline void PAttachment::clear_created_at() {
  created_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment::_internal_created_at() const {
  return created_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment::created_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.created_at)
  return _internal_created_at();
}
inline void PAttachment::_internal_set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  created_at_ = value;
}
inline void PAttachment::set_created_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_created_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.created_at)
}

// uint32 updated_at = 8;
inline void PAttachment::clear_updated_at() {
  updated_at_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment::_internal_updated_at() const {
  return updated_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment::updated_at() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.updated_at)
  return _internal_updated_at();
}
inline void PAttachment::_internal_set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  updated_at_ = value;
}
inline void PAttachment::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_at(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.updated_at)
}

// uint32 user_id = 9;
inline void PAttachment::clear_user_id() {
  user_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment::user_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.user_id)
  return _internal_user_id();
}
inline void PAttachment::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  user_id_ = value;
}
inline void PAttachment::set_user_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.user_id)
}

// uint32 channel_id = 10;
inline void PAttachment::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PAttachment::channel_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.channel_id)
  return _internal_channel_id();
}
inline void PAttachment::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_id_ = value;
}
inline void PAttachment::set_channel_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.PAttachment.channel_id)
}

// .kandan_small.PAttachment.PUserInAttachment user = 11;
inline bool PAttachment::_internal_has_user() const {
  return this != internal_default_instance() && user_ != nullptr;
}
inline bool PAttachment::has_user() const {
  return _internal_has_user();
}
inline void PAttachment::clear_user() {
  if (GetArenaNoVirtual() == nullptr && user_ != nullptr) {
    delete user_;
  }
  user_ = nullptr;
}
inline const ::kandan_small::PAttachment_PUserInAttachment& PAttachment::_internal_user() const {
  const ::kandan_small::PAttachment_PUserInAttachment* p = user_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kandan_small::PAttachment_PUserInAttachment*>(
      &::kandan_small::_PAttachment_PUserInAttachment_default_instance_);
}
inline const ::kandan_small::PAttachment_PUserInAttachment& PAttachment::user() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.user)
  return _internal_user();
}
inline ::kandan_small::PAttachment_PUserInAttachment* PAttachment::release_user() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.user)
  
  ::kandan_small::PAttachment_PUserInAttachment* temp = user_;
  user_ = nullptr;
  return temp;
}
inline ::kandan_small::PAttachment_PUserInAttachment* PAttachment::_internal_mutable_user() {
  
  if (user_ == nullptr) {
    auto* p = CreateMaybeMessage<::kandan_small::PAttachment_PUserInAttachment>(GetArenaNoVirtual());
    user_ = p;
  }
  return user_;
}
inline ::kandan_small::PAttachment_PUserInAttachment* PAttachment::mutable_user() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.user)
  return _internal_mutable_user();
}
inline void PAttachment::set_allocated_user(::kandan_small::PAttachment_PUserInAttachment* user) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete user_;
  }
  if (user) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      user = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user, submessage_arena);
    }
    
  } else {
    
  }
  user_ = user;
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.user)
}

// .kandan_small.PAttachment.PChannelInAttachment channel = 12;
inline bool PAttachment::_internal_has_channel() const {
  return this != internal_default_instance() && channel_ != nullptr;
}
inline bool PAttachment::has_channel() const {
  return _internal_has_channel();
}
inline void PAttachment::clear_channel() {
  if (GetArenaNoVirtual() == nullptr && channel_ != nullptr) {
    delete channel_;
  }
  channel_ = nullptr;
}
inline const ::kandan_small::PAttachment_PChannelInAttachment& PAttachment::_internal_channel() const {
  const ::kandan_small::PAttachment_PChannelInAttachment* p = channel_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kandan_small::PAttachment_PChannelInAttachment*>(
      &::kandan_small::_PAttachment_PChannelInAttachment_default_instance_);
}
inline const ::kandan_small::PAttachment_PChannelInAttachment& PAttachment::channel() const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachment.channel)
  return _internal_channel();
}
inline ::kandan_small::PAttachment_PChannelInAttachment* PAttachment::release_channel() {
  // @@protoc_insertion_point(field_release:kandan_small.PAttachment.channel)
  
  ::kandan_small::PAttachment_PChannelInAttachment* temp = channel_;
  channel_ = nullptr;
  return temp;
}
inline ::kandan_small::PAttachment_PChannelInAttachment* PAttachment::_internal_mutable_channel() {
  
  if (channel_ == nullptr) {
    auto* p = CreateMaybeMessage<::kandan_small::PAttachment_PChannelInAttachment>(GetArenaNoVirtual());
    channel_ = p;
  }
  return channel_;
}
inline ::kandan_small::PAttachment_PChannelInAttachment* PAttachment::mutable_channel() {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachment.channel)
  return _internal_mutable_channel();
}
inline void PAttachment::set_allocated_channel(::kandan_small::PAttachment_PChannelInAttachment* channel) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete channel_;
  }
  if (channel) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      channel = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, channel, submessage_arena);
    }
    
  } else {
    
  }
  channel_ = channel;
  // @@protoc_insertion_point(field_set_allocated:kandan_small.PAttachment.channel)
}

// -------------------------------------------------------------------

// PQuery0Result

// repeated .kandan_small.PUser user = 1;
inline int PQuery0Result::_internal_user_size() const {
  return user_.size();
}
inline int PQuery0Result::user_size() const {
  return _internal_user_size();
}
inline void PQuery0Result::clear_user() {
  user_.Clear();
}
inline ::kandan_small::PUser* PQuery0Result::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PQuery0Result.user)
  return user_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser >*
PQuery0Result::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PQuery0Result.user)
  return &user_;
}
inline const ::kandan_small::PUser& PQuery0Result::_internal_user(int index) const {
  return user_.Get(index);
}
inline const ::kandan_small::PUser& PQuery0Result::user(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PQuery0Result.user)
  return _internal_user(index);
}
inline ::kandan_small::PUser* PQuery0Result::_internal_add_user() {
  return user_.Add();
}
inline ::kandan_small::PUser* PQuery0Result::add_user() {
  // @@protoc_insertion_point(field_add:kandan_small.PQuery0Result.user)
  return _internal_add_user();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser >&
PQuery0Result::user() const {
  // @@protoc_insertion_point(field_list:kandan_small.PQuery0Result.user)
  return user_;
}

// -------------------------------------------------------------------

// PUserList

// repeated .kandan_small.PUser user = 1;
inline int PUserList::_internal_user_size() const {
  return user_.size();
}
inline int PUserList::user_size() const {
  return _internal_user_size();
}
inline void PUserList::clear_user() {
  user_.Clear();
}
inline ::kandan_small::PUser* PUserList::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PUserList.user)
  return user_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser >*
PUserList::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PUserList.user)
  return &user_;
}
inline const ::kandan_small::PUser& PUserList::_internal_user(int index) const {
  return user_.Get(index);
}
inline const ::kandan_small::PUser& PUserList::user(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PUserList.user)
  return _internal_user(index);
}
inline ::kandan_small::PUser* PUserList::_internal_add_user() {
  return user_.Add();
}
inline ::kandan_small::PUser* PUserList::add_user() {
  // @@protoc_insertion_point(field_add:kandan_small.PUserList.user)
  return _internal_add_user();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PUser >&
PUserList::user() const {
  // @@protoc_insertion_point(field_list:kandan_small.PUserList.user)
  return user_;
}

// -------------------------------------------------------------------

// PChannelList

// repeated .kandan_small.PChannel channel = 1;
inline int PChannelList::_internal_channel_size() const {
  return channel_.size();
}
inline int PChannelList::channel_size() const {
  return _internal_channel_size();
}
inline void PChannelList::clear_channel() {
  channel_.Clear();
}
inline ::kandan_small::PChannel* PChannelList::mutable_channel(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PChannelList.channel)
  return channel_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel >*
PChannelList::mutable_channel() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PChannelList.channel)
  return &channel_;
}
inline const ::kandan_small::PChannel& PChannelList::_internal_channel(int index) const {
  return channel_.Get(index);
}
inline const ::kandan_small::PChannel& PChannelList::channel(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PChannelList.channel)
  return _internal_channel(index);
}
inline ::kandan_small::PChannel* PChannelList::_internal_add_channel() {
  return channel_.Add();
}
inline ::kandan_small::PChannel* PChannelList::add_channel() {
  // @@protoc_insertion_point(field_add:kandan_small.PChannelList.channel)
  return _internal_add_channel();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PChannel >&
PChannelList::channel() const {
  // @@protoc_insertion_point(field_list:kandan_small.PChannelList.channel)
  return channel_;
}

// -------------------------------------------------------------------

// PActivityList

// repeated .kandan_small.PActivity activity = 1;
inline int PActivityList::_internal_activity_size() const {
  return activity_.size();
}
inline int PActivityList::activity_size() const {
  return _internal_activity_size();
}
inline void PActivityList::clear_activity() {
  activity_.Clear();
}
inline ::kandan_small::PActivity* PActivityList::mutable_activity(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PActivityList.activity)
  return activity_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity >*
PActivityList::mutable_activity() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PActivityList.activity)
  return &activity_;
}
inline const ::kandan_small::PActivity& PActivityList::_internal_activity(int index) const {
  return activity_.Get(index);
}
inline const ::kandan_small::PActivity& PActivityList::activity(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PActivityList.activity)
  return _internal_activity(index);
}
inline ::kandan_small::PActivity* PActivityList::_internal_add_activity() {
  return activity_.Add();
}
inline ::kandan_small::PActivity* PActivityList::add_activity() {
  // @@protoc_insertion_point(field_add:kandan_small.PActivityList.activity)
  return _internal_add_activity();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PActivity >&
PActivityList::activity() const {
  // @@protoc_insertion_point(field_list:kandan_small.PActivityList.activity)
  return activity_;
}

// -------------------------------------------------------------------

// PAttachmentList

// repeated .kandan_small.PAttachment attachment = 1;
inline int PAttachmentList::_internal_attachment_size() const {
  return attachment_.size();
}
inline int PAttachmentList::attachment_size() const {
  return _internal_attachment_size();
}
inline void PAttachmentList::clear_attachment() {
  attachment_.Clear();
}
inline ::kandan_small::PAttachment* PAttachmentList::mutable_attachment(int index) {
  // @@protoc_insertion_point(field_mutable:kandan_small.PAttachmentList.attachment)
  return attachment_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment >*
PAttachmentList::mutable_attachment() {
  // @@protoc_insertion_point(field_mutable_list:kandan_small.PAttachmentList.attachment)
  return &attachment_;
}
inline const ::kandan_small::PAttachment& PAttachmentList::_internal_attachment(int index) const {
  return attachment_.Get(index);
}
inline const ::kandan_small::PAttachment& PAttachmentList::attachment(int index) const {
  // @@protoc_insertion_point(field_get:kandan_small.PAttachmentList.attachment)
  return _internal_attachment(index);
}
inline ::kandan_small::PAttachment* PAttachmentList::_internal_add_attachment() {
  return attachment_.Add();
}
inline ::kandan_small::PAttachment* PAttachmentList::add_attachment() {
  // @@protoc_insertion_point(field_add:kandan_small.PAttachmentList.attachment)
  return _internal_add_attachment();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kandan_small::PAttachment >&
PAttachmentList::attachment() const {
  // @@protoc_insertion_point(field_list:kandan_small.PAttachmentList.attachment)
  return attachment_;
}

// -------------------------------------------------------------------

// QueryParam

// uint32 query_id = 1;
inline void QueryParam::clear_query_id() {
  query_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 QueryParam::_internal_query_id() const {
  return query_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 QueryParam::query_id() const {
  // @@protoc_insertion_point(field_get:kandan_small.QueryParam.query_id)
  return _internal_query_id();
}
inline void QueryParam::_internal_set_query_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  query_id_ = value;
}
inline void QueryParam::set_query_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_query_id(value);
  // @@protoc_insertion_point(field_set:kandan_small.QueryParam.query_id)
}

// uint32 q_0_param_0_uid = 2;
inline void QueryParam::clear_q_0_param_0_uid() {
  q_0_param_0_uid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 QueryParam::_internal_q_0_param_0_uid() const {
  return q_0_param_0_uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 QueryParam::q_0_param_0_uid() const {
  // @@protoc_insertion_point(field_get:kandan_small.QueryParam.q_0_param_0_uid)
  return _internal_q_0_param_0_uid();
}
inline void QueryParam::_internal_set_q_0_param_0_uid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  q_0_param_0_uid_ = value;
}
inline void QueryParam::set_q_0_param_0_uid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_q_0_param_0_uid(value);
  // @@protoc_insertion_point(field_set:kandan_small.QueryParam.q_0_param_0_uid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace kandan_small

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_proto_5fkandan_5fsmall_2eproto
